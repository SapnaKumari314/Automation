<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="APEX" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.2.3.17. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">cognito-idp.us-east-1.amazonaws.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">exp-api.proterra.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TEST_ENV" elementType="Argument">
            <stringProp name="Argument.name">TEST_ENV</stringProp>
            <stringProp name="Argument.value">qa</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="AMS_ENV" elementType="Argument">
            <stringProp name="Argument.name">AMS_ENV</stringProp>
            <stringProp name="Argument.value">exp-ams-qa</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DATALAKE_ENV" elementType="Argument">
            <stringProp name="Argument.name">DATALAKE_ENV</stringProp>
            <stringProp name="Argument.value">exp-datalake-qa</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="GLOSSARY_ENV" elementType="Argument">
            <stringProp name="Argument.name">GLOSSARY_ENV</stringProp>
            <stringProp name="Argument.value">exp-no-qa</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="OCPP_ENV" elementType="Argument">
            <stringProp name="Argument.name">OCPP_ENV</stringProp>
            <stringProp name="Argument.value">exp-ocpp-qa</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CCSS_ENV" elementType="Argument">
            <stringProp name="Argument.name">CCSS_ENV</stringProp>
            <stringProp name="Argument.value">exp-ccss-qa</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="FILE_AMS_ENV" elementType="Argument">
            <stringProp name="Argument.name">FILE_AMS_ENV</stringProp>
            <stringProp name="Argument.value">exp-file-ams-qa</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ETS_BUS_VIN" elementType="Argument">
            <stringProp name="Argument.name">ETS_BUS_VIN</stringProp>
            <stringProp name="Argument.value">7JZTH13J7KS000151</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ABB_CHARGER_OCPP_ID" elementType="Argument">
            <stringProp name="Argument.name">ABB_CHARGER_OCPP_ID</stringProp>
            <stringProp name="Argument.value">NAMHVC150-US1-1619-975</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SUPER_ADMIN_USERNAME" elementType="Argument">
            <stringProp name="Argument.name">SUPER_ADMIN_USERNAME</stringProp>
            <stringProp name="Argument.value">superadmin@proterra.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SUPER_ADMIN_PASSWORD" elementType="Argument">
            <stringProp name="Argument.name">SUPER_ADMIN_PASSWORD</stringProp>
            <stringProp name="Argument.value">Abc@12345678</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PROTERRA_ADMIN_USERNAME" elementType="Argument">
            <stringProp name="Argument.name">PROTERRA_ADMIN_USERNAME</stringProp>
            <stringProp name="Argument.value">ajay.proterra2020+qa_padmin@gmail.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PROTERRA_ADMIN_PASSWORD" elementType="Argument">
            <stringProp name="Argument.name">PROTERRA_ADMIN_PASSWORD</stringProp>
            <stringProp name="Argument.value">Proterra@123</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PROTERRA_READONLY_USERNAME" elementType="Argument">
            <stringProp name="Argument.name">PROTERRA_READONLY_USERNAME</stringProp>
            <stringProp name="Argument.value">ajay.proterra2020+qa_preadonly@gmail.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PROTERRA_READONLY_PASSWORD" elementType="Argument">
            <stringProp name="Argument.name">PROTERRA_READONLY_PASSWORD</stringProp>
            <stringProp name="Argument.value">Proterra@123</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TENANT_ADMIN_USERNAME" elementType="Argument">
            <stringProp name="Argument.name">TENANT_ADMIN_USERNAME</stringProp>
            <stringProp name="Argument.value">ajay.proterra2020+qa_cadmin@gmail.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TENANT_ADMIN_PASSWORD" elementType="Argument">
            <stringProp name="Argument.name">TENANT_ADMIN_PASSWORD</stringProp>
            <stringProp name="Argument.value">Proterra@123</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TENANT_READONLY_USERNAME" elementType="Argument">
            <stringProp name="Argument.name">TENANT_READONLY_USERNAME</stringProp>
            <stringProp name="Argument.value">ajay.proterra2020+qa_creadonly@gmail.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TENANT_READONLY_PASSWORD" elementType="Argument">
            <stringProp name="Argument.name">TENANT_READONLY_PASSWORD</stringProp>
            <stringProp name="Argument.value">Proterra@123</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SUPEREST_ADMIN" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /cognitoLogin" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;userName&quot;: &quot;${SUPER_ADMIN_USERNAME}&quot;,&#xd;
    &quot;userPassword&quot;: &quot;${SUPER_ADMIN_PASSWORD}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/cognitoLogin</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET SUPEREST ADMIN ACCESS TOKEN" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">SUPEREST_ADMIN_ACCESS_TOKEN</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /glossary" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${GLOSSARY_ENV}/glossary</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${SUPEREST_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /ui/tabs" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/ams/v1/ui/tabs</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${SUPEREST_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/counts/bus" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;filter&quot;: [&#xd;
        {&#xd;
          &quot;query_string&quot;: {&#xd;
            &quot;query&quot;: &quot;resolved:false&quot;&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;query_string&quot;: {&#xd;
            &quot;query&quot;: &quot;busMetadata.fleetName:*&quot;&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;range&quot;: {&#xd;
            &quot;faultTimestamp&quot;: {&#xd;
              &quot;gte&quot;: &quot;now-7d&quot;,&#xd;
              &quot;lte&quot;: &quot;now&quot;&#xd;
            }&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;aggs&quot;: {&#xd;
    &quot;termAgg&quot;: {&#xd;
      &quot;terms&quot;: {&#xd;
        &quot;field&quot;: &quot;busMetadata.fleetName.keyword&quot;&#xd;
      }&#xd;
    }&#xd;
  },&#xd;
  &quot;size&quot;: 0&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/counts/bus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${SUPEREST_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /internalUsers?size=300" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">size</stringProp>
                  <stringProp name="Argument.value">300</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/internalUsers</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${SUPEREST_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET PROTERRA ADMIN USER ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">PROTERRA_READONLY_USER_ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.content[?(@.userName==&apos;${PROTERRA_ADMIN_USERNAME}&apos;)].userId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET PROTERRA READONLY USER ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">PROTERRA_READONLY_USER_ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.content[?(@.userName==&apos;${PROTERRA_READONLY_USERNAME}&apos;)].userId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CREATE /internalUsers/ - Proterra Admin" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;roleInformation&quot;: &quot;superadmin&quot;,&#xd;
  &quot;firstName&quot;: &quot;Ajay&quot;,&#xd;
  &quot;lastName&quot;: &quot;Proterra Admin - ${PADMIN_CREATED_TIME}&quot;,&#xd;
  &quot;userName&quot;: &quot;ajay.proterra2020+${TEST_ENV}_padmin${PADMIN_CREATED_TIME}@gmail.com&quot;,&#xd;
  &quot;address&quot;: {&#xd;
    &quot;addressLine1&quot;: &quot;1815 Rollins Rd, Burlingame, CA 94010, United States&quot;,&#xd;
    &quot;city&quot;: &quot;Burlingame&quot;,&#xd;
    &quot;state&quot;: &quot;CA&quot;,&#xd;
    &quot;zipCode&quot;: &quot;94010&quot;,&#xd;
    &quot;country&quot;: &quot;US&quot;&#xd;
  },&#xd;
  &quot;phone&quot;: &quot;&quot;&#xd;
}&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/internalUsers/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${SUPEREST_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="CREATE CREATED TIMESTAMP" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">${__timeShift(MMddhhmmss,,,,PADMIN_CREATED_TIME)};
log.info(&quot;PADMIN_CREATED_TIME = &quot; + &quot;${PADMIN_CREATED_TIME}&quot;);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET PROTERRA ADMIN USER ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">NEW_PROTERRA_ADMIN_USER_ID; NEW_PROTERRA_ADMIN_USER_NAME; NEW_PROTERRA_ADMIN_LAST_NAME</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.userId; $.userName; $.lastName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND; NOT_FOUND; NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UPDATE /internalUsers/ - Proterra Admin" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;roleInformation&quot;: &quot;superadmin&quot;,&#xd;
  &quot;firstName&quot;: &quot;Ajay&quot;,&#xd;
  &quot;lastName&quot;: &quot;${NEW_PROTERRA_ADMIN_LAST_NAME}&quot;,&#xd;
  &quot;userName&quot;: &quot;${NEW_PROTERRA_ADMIN_USER_NAME}&quot;,&#xd;
  &quot;address&quot;: {&#xd;
    &quot;addressLine1&quot;: &quot;1815 Rollins Rd, Burlingame, CA 94010, United States&quot;,&#xd;
    &quot;city&quot;: &quot;Burlingame&quot;,&#xd;
    &quot;state&quot;: &quot;CA&quot;,&#xd;
    &quot;zipCode&quot;: &quot;94010&quot;,&#xd;
    &quot;country&quot;: &quot;US&quot;&#xd;
  },&#xd;
  &quot;phone&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/internalUsers/${NEW_PROTERRA_ADMIN_USER_ID}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${SUPEREST_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE /internalUsers/ - Proterra Admin" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/internalUsers/${NEW_PROTERRA_ADMIN_USER_ID}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${SUPEREST_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CREATE /internalUsers/ - Proterra ReadOnly" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;roleInformation&quot;: &quot;proterra_readonly&quot;,&#xd;
  &quot;firstName&quot;: &quot;Ajay&quot;,&#xd;
  &quot;lastName&quot;: &quot;Proterra ReadOnly - ${PREADONLY_CREATED_TIME}&quot;,&#xd;
  &quot;userName&quot;: &quot;ajay.proterra2020+${TEST_ENV}_preadonly${PREADONLY_CREATED_TIME}@gmail.com&quot;,&#xd;
  &quot;address&quot;: {&#xd;
    &quot;addressLine1&quot;: &quot;1815 Rollins Rd, Burlingame, CA 94010, United States&quot;,&#xd;
    &quot;city&quot;: &quot;Burlingame&quot;,&#xd;
    &quot;state&quot;: &quot;CA&quot;,&#xd;
    &quot;zipCode&quot;: &quot;94010&quot;,&#xd;
    &quot;country&quot;: &quot;US&quot;&#xd;
  },&#xd;
  &quot;phone&quot;: &quot;&quot;&#xd;
}&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/internalUsers/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${SUPEREST_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="CREATE CREATED TIMESTAMP" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">${__timeShift(MMddhhmmss,,,,PREADONLY_CREATED_TIME)};
log.info(&quot;PREADONLY_CREATED_TIME = &quot; + &quot;${PREADONLY_CREATED_TIME}&quot;);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET PROTERRA ADMIN USER ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">NEW_PROTERRA_READONLY_USER_ID; NEW_PROTERRA_READONLY_USER_NAME; NEW_PROTERRA_READONLY_LAST_NAME</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.userId; $.userName; $.lastName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND; NOT_FOUND; NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UPDATE /internalUsers/ - Proterra ReadOnly" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;roleInformation&quot;: &quot;superadmin&quot;,&#xd;
  &quot;firstName&quot;: &quot;Ajay&quot;,&#xd;
  &quot;lastName&quot;: &quot;${NEW_PROTERRA_READONLY_LAST_NAME}&quot;,&#xd;
  &quot;userName&quot;: &quot;${NEW_PROTERRA_READONLY_USER_NAME}&quot;,&#xd;
  &quot;address&quot;: {&#xd;
    &quot;addressLine1&quot;: &quot;1815 Rollins Rd, Burlingame, CA 94010, United States&quot;,&#xd;
    &quot;city&quot;: &quot;Burlingame&quot;,&#xd;
    &quot;state&quot;: &quot;CA&quot;,&#xd;
    &quot;zipCode&quot;: &quot;94010&quot;,&#xd;
    &quot;country&quot;: &quot;US&quot;&#xd;
  },&#xd;
  &quot;phone&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/internalUsers/${NEW_PROTERRA_READONLY_USER_ID}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${SUPEREST_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE /internalUsers/ - Proterra ReadOnly" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/internalUsers/${NEW_PROTERRA_READONLY_USER_ID}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${SUPEREST_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PROTERRA_ADMIN" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /cognitoLogin" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;userName&quot;: &quot;${PROTERRA_ADMIN_USERNAME}&quot;,&#xd;
    &quot;userPassword&quot;: &quot;${PROTERRA_ADMIN_PASSWORD}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/cognitoLogin</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET PROTERRA ADMIN ACCESS TOKEN" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">PROTERRA_ADMIN_ACCESS_TOKEN</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /glossary" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${GLOSSARY_ENV}/glossary</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /v1/ui/tabs" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/ams/v1/ui/tabs</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/counts/charger" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;filter&quot;: [&#xd;
        {&#xd;
          &quot;query_string&quot;: {&#xd;
            &quot;query&quot;: &quot;_exists_:request.errorCode AND NOT request.errorCode:NoError&quot;&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;query_string&quot;: {&#xd;
            &quot;query&quot;: &quot;assetDetails.internalAcronym:*&quot;&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;range&quot;: {&#xd;
            &quot;@timestamp&quot;: {&#xd;
              &quot;gte&quot;: &quot;now-7d&quot;,&#xd;
              &quot;lte&quot;: &quot;now&quot;&#xd;
            }&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;aggs&quot;: {&#xd;
    &quot;termAgg&quot;: {&#xd;
      &quot;terms&quot;: {&#xd;
        &quot;field&quot;: &quot;chargerName&quot;&#xd;
      },&#xd;
      &quot;aggs&quot;: {&#xd;
        &quot;uniqueErrorCount&quot;: {&#xd;
          &quot;cardinality&quot;: {&#xd;
            &quot;field&quot;: &quot;request.vendorErrorCode&quot;&#xd;
          }&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  },&#xd;
  &quot;size&quot;: 0&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/counts/charger</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/counts/bus" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;filter&quot;: [&#xd;
        {&#xd;
          &quot;query_string&quot;: {&#xd;
            &quot;query&quot;: &quot;resolved:false&quot;&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;query_string&quot;: {&#xd;
            &quot;query&quot;: &quot;busMetadata.fleetName:*&quot;&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;range&quot;: {&#xd;
            &quot;faultTimestamp&quot;: {&#xd;
              &quot;gte&quot;: &quot;now-7d&quot;,&#xd;
              &quot;lte&quot;: &quot;now&quot;&#xd;
            }&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;aggs&quot;: {&#xd;
    &quot;termAgg&quot;: {&#xd;
      &quot;terms&quot;: {&#xd;
        &quot;field&quot;: &quot;busMetadata.fleetName.keyword&quot;&#xd;
      }&#xd;
    }&#xd;
  },&#xd;
  &quot;size&quot;: 0&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/counts/bus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants?size=300" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">size</stringProp>
                  <stringProp name="Argument.value">300</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET TENANT ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">ETS_TENANT_ID; TBB_TENANT_ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.content[?(@.orgName==&apos;Edmonton Transit Service&apos;)].orgId; $.content[?(@.orgName==&apos;Thomas Built Buses, Inc&apos;)].orgId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND; NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/dashboarddata" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;filter&quot;: [&#xd;
        {&#xd;
          &quot;query_string&quot;: {&#xd;
            &quot;query&quot;: &quot;busMetadata.fleetName:*&quot;&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;range&quot;: {&#xd;
            &quot;reportStartDate&quot;: {&#xd;
              &quot;gte&quot;: &quot;2018-01-01&quot;&#xd;
            }&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;size&quot;: 0,&#xd;
  &quot;aggs&quot;: {&#xd;
    &quot;distance&quot;: {&#xd;
      &quot;extended_stats&quot;: {&#xd;
        &quot;field&quot;: &quot;distanceInMiles&quot;&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/dashboarddata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/dashboarddata" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;must&quot;: {&#xd;
        &quot;query_string&quot;: {&#xd;
          &quot;query&quot;: &quot;busMetadata.fleetName:*&quot;&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  },&#xd;
  &quot;size&quot;: 0,&#xd;
  &quot;aggs&quot;: {&#xd;
    &quot;histogram&quot;: {&#xd;
      &quot;date_histogram&quot;: {&#xd;
        &quot;field&quot;: &quot;reportEndDate&quot;,&#xd;
        &quot;interval&quot;: &quot;month&quot;&#xd;
      },&#xd;
      &quot;aggs&quot;: {&#xd;
        &quot;distance_over_time&quot;: {&#xd;
          &quot;sum&quot;: {&#xd;
            &quot;field&quot;: &quot;distanceInMiles&quot;&#xd;
          }&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/dashboarddata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/dashboarddata" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;must&quot;: {&#xd;
        &quot;query_string&quot;: {&#xd;
          &quot;query&quot;: &quot;busMetadata.fleetName:*&quot;&#xd;
        }&#xd;
      },&#xd;
      &quot;filter&quot;: [&#xd;
        {&#xd;
          &quot;range&quot;: {&#xd;
            &quot;reportStartDate&quot;: {&#xd;
              &quot;gte&quot;: &quot;now-8d&quot;&#xd;
            }&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;size&quot;: 0,&#xd;
  &quot;aggs&quot;: {&#xd;
    &quot;distance&quot;: {&#xd;
      &quot;extended_stats&quot;: {&#xd;
        &quot;field&quot;: &quot;distanceInMiles&quot;&#xd;
      }&#xd;
    },&#xd;
    &quot;energy&quot;: {&#xd;
      &quot;extended_stats&quot;: {&#xd;
        &quot;field&quot;: &quot;totalEnergyChargedInKWH&quot;&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/dashboarddata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /assets?size=300" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">size</stringProp>
                  <stringProp name="Argument.value">300</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/assets</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET ASSET IDs" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">ABB_CHARGER_ASSET_ID; ETS_BUS_ASSET_ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.content[?(@.ocppId==&apos;NAMHVC150-US1-1619-975&apos;)].assetId; $.content[?(@.vehicleVIN ==&apos;7JZTH13J7KS000151&apos;)].assetId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND; NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/trackSetups" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenantId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenantId</stringProp>
                  <stringProp name="Argument.value">${ETS_TENANT_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${CCSS_ENV}/v1/tenants/${ETS_TENANT_ID}/trackSetups</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET TRACK SETUP IDs" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">KATG_GARAGE_ID; CENT_GARAGE_ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.[?(@.customerGarageId==2)].trackSetupId; $.[?(@.customerGarageId==8)].trackSetupId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND; NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/buses/busDetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;BUS-DETAILS-${__UUID}&quot;,&#xd;
  &quot;busVins&quot;: [&#xd;
    &quot;7JZTH13JXKS000158&quot;,&#xd;
    &quot;7JZTH13J2KS000154&quot;,&#xd;
    &quot;7JZTH13J0LS000297&quot;,&#xd;
    &quot;7JZTH13J5KS000164&quot;,&#xd;
    &quot;7JZTH13J9KS000166&quot;,&#xd;
    &quot;7JZTH13J6KS000156&quot;,&#xd;
    &quot;7JZTH13J2KS000171&quot;,&#xd;
    &quot;7JZTH13J7KS000151&quot;,&#xd;
    &quot;7JZTH13J4LS000299&quot;,&#xd;
    &quot;7JZTH13J7LS000300&quot;,&#xd;
    &quot;7JZTH13JXLS000307&quot;,&#xd;
    &quot;7JZTH13J0LS000302&quot;,&#xd;
    &quot;7JZTH13J3LS000309&quot;,&#xd;
    &quot;7JZTH13J1KS000162&quot;,&#xd;
    &quot;7JZTH13J9KS000152&quot;,&#xd;
    &quot;7JZTH13J1LS000308&quot;,&#xd;
    &quot;7JZTH13J2LS000298&quot;,&#xd;
    &quot;7JZTH13JXKS000161&quot;,&#xd;
    &quot;7JZTH13J9LS000315&quot;,&#xd;
    &quot;7JZTH13J1KS000159&quot;,&#xd;
    &quot;7JZTH13J8KS000157&quot;,&#xd;
    &quot;7JZTH13J4KS000169&quot;,&#xd;
    &quot;7JZTH13J8LS000306&quot;,&#xd;
    &quot;7JZTH13J6LS000305&quot;,&#xd;
    &quot;7JZTH13J0KS000170&quot;,&#xd;
    &quot;7JZTH13J0KS000167&quot;,&#xd;
    &quot;7JZTH13J1LS000308&quot;,&#xd;
    &quot;7JZTH13J4KS000155&quot;,&#xd;
    &quot;7JZTH13J7KS000165&quot;,&#xd;
    &quot;7JZTH13J2LS000303&quot;,&#xd;
    &quot;7JZTH13J5LS000313&quot;,&#xd;
    &quot;7JZTH13J4LS000304&quot;,&#xd;
    &quot;7JZTH13J2KS000168&quot;,&#xd;
    &quot;7JZTH13J8KS000160&quot;,&#xd;
    &quot;7JZTH13J3LS000312&quot;,&#xd;
    &quot;7JZTH13JXLS000310&quot;,&#xd;
    &quot;7JZTH13J3KS000163&quot;,&#xd;
    &quot;7JZTH13J9LS000301&quot;,&#xd;
    &quot;7JZTH13J7LS000314&quot;,&#xd;
    &quot;7JZTH13J0KS000153&quot;,&#xd;
    &quot;7JZTH13J1LS000311&quot;&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/buses/busDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /ocpp-v16jw/chargers" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${OCPP_ENV}/v1/ocpp-v16jw/chargers</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /ocpp-v16jw/chargersiotecha" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${OCPP_ENV}/v1/ocpp-v16jw/chargersiotecha</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/chargerfaults" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;must&quot;: {&#xd;
        &quot;query_string&quot;: {&#xd;
          &quot;query&quot;: &quot;chargerName:${ABB_CHARGER_OCPP_ID}&quot;&#xd;
        }&#xd;
      },&#xd;
      &quot;filter&quot;: [&#xd;
        {&#xd;
          &quot;query_string&quot;: {&#xd;
            &quot;query&quot;: &quot;_exists_:request.errorCode AND NOT request.errorCode:NoError&quot;&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;range&quot;: {&#xd;
            &quot;@timestamp&quot;: {&#xd;
              &quot;gte&quot;: &quot;now-7d/d&quot;,&#xd;
              &quot;lt&quot;: &quot;now&quot;&#xd;
            }&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;sort&quot;: {&#xd;
    &quot;time&quot;: {&#xd;
      &quot;order&quot;: &quot;desc&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;size&quot;: 100&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/chargerfaults</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /internalUsers?size=300" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">size</stringProp>
                  <stringProp name="Argument.value">300</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/internalUsers</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET USER IDs" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">CURRENT_PROTERRA_ADMIN_USER_ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.content[?(@.userName==&apos;${PROTERRA_ADMIN_USERNAME}&apos;)].userId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /alerts?size=300" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">size</stringProp>
                  <stringProp name="Argument.value">300</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/alerts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CREATE /alerts" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;orgId&quot;: &quot;${ETS_TENANT_ID}&quot;,&#xd;
  &quot;userId&quot;: &quot;${CURRENT_PROTERRA_ADMIN_USER_ID}&quot;,&#xd;
  &quot;userName&quot;: &quot;Ajay Proterra Admin&quot;,&#xd;
  &quot;userEmail&quot;: &quot;${PROTERRA_ADMIN_USERNAME}&quot;,&#xd;
  &quot;userPhone&quot;: &quot;&quot;,&#xd;
  &quot;busAlert&quot;: true,&#xd;
  &quot;busID&quot;: &quot;*&quot;,&#xd;
  &quot;busmonday&quot;: true,&#xd;
  &quot;bustuesday&quot;: true,&#xd;
  &quot;buswednesday&quot;: true,&#xd;
  &quot;busthursday&quot;: true,&#xd;
  &quot;busfriday&quot;: true,&#xd;
  &quot;bussaturday&quot;: true,&#xd;
  &quot;bussunday&quot;: true,&#xd;
  &quot;busAlertStartTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;busAlertStopTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;busEmailCritical&quot;: false,&#xd;
  &quot;busEmailError&quot;: false,&#xd;
  &quot;busEmailWarning&quot;: false,&#xd;
  &quot;busEmailInfo&quot;: false,&#xd;
  &quot;busSMSCritical&quot;: false,&#xd;
  &quot;busSMSError&quot;: false,&#xd;
  &quot;busSMSWarning&quot;: false,&#xd;
  &quot;busSMSInfo&quot;: false,&#xd;
  &quot;busPushCritical&quot;: false,&#xd;
  &quot;busPushError&quot;: false,&#xd;
  &quot;busPushWarning&quot;: false,&#xd;
  &quot;busPushInfo&quot;: false,&#xd;
  &quot;chargerAlert&quot;: true,&#xd;
  &quot;chargerID&quot;: &quot;*&quot;,&#xd;
  &quot;chargermonday&quot;: true,&#xd;
  &quot;chargertuesday&quot;: true,&#xd;
  &quot;chargerwednesday&quot;: true,&#xd;
  &quot;chargerthursday&quot;: true,&#xd;
  &quot;chargerfriday&quot;: true,&#xd;
  &quot;chargersaturday&quot;: true,&#xd;
  &quot;chargersunday&quot;: true,&#xd;
  &quot;chargerAlertStartTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;chargerAlertStopTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;chargerEmailCritical&quot;: true,&#xd;
  &quot;chargerEmailError&quot;: true,&#xd;
  &quot;chargerEmailWarning&quot;: true,&#xd;
  &quot;chargerEmailInfo&quot;: true,&#xd;
  &quot;chargerSMSCritical&quot;: false,&#xd;
  &quot;chargerSMSError&quot;: false,&#xd;
  &quot;chargerSMSWarning&quot;: false,&#xd;
  &quot;chargerSMSInfo&quot;: false,&#xd;
  &quot;chargerPushCritical&quot;: false,&#xd;
  &quot;chargerPushError&quot;: false,&#xd;
  &quot;chargerPushWarning&quot;: false,&#xd;
  &quot;chargerPushInfo&quot;: false,&#xd;
  &quot;ruleName&quot;: &quot;Ajay Suryavamshi_rule&quot;,&#xd;
  &quot;orgName&quot;: &quot;Edmonton Transit Service&quot;,&#xd;
  &quot;internalAcronym&quot;: &quot;ETS&quot;,&#xd;
  &quot;busName&quot;: &quot;All&quot;,&#xd;
  &quot;busAlertDays&quot;: [&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true&#xd;
  ],&#xd;
  &quot;busEmailNotification&quot;: 0,&#xd;
  &quot;busSMSNotification&quot;: 0,&#xd;
  &quot;busPushNotification&quot;: 0,&#xd;
  &quot;chargerName&quot;: &quot;All&quot;,&#xd;
  &quot;chargerAlertDays&quot;: [&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true&#xd;
  ],&#xd;
  &quot;chargerEmailNotification&quot;: 15,&#xd;
  &quot;chargerSMSNotification&quot;: 0,&#xd;
  &quot;chargerPushNotification&quot;: 0&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/alerts</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET ALERT ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">NEW_ALERT_ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.alertId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UPDATE /alerts/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;orgId&quot;: &quot;${ETS_TENANT_ID}&quot;,&#xd;
  &quot;userId&quot;: &quot;${CURRENT_PROTERRA_ADMIN_USER_ID}&quot;,&#xd;
  &quot;userName&quot;: &quot;Ajay Proterra Admin&quot;,&#xd;
  &quot;userEmail&quot;: &quot;${PROTERRA_ADMIN_USERNAME}&quot;,&#xd;
  &quot;userPhone&quot;: &quot;&quot;,&#xd;
  &quot;busAlert&quot;: true,&#xd;
  &quot;busID&quot;: &quot;*&quot;,&#xd;
  &quot;busmonday&quot;: true,&#xd;
  &quot;bustuesday&quot;: true,&#xd;
  &quot;buswednesday&quot;: true,&#xd;
  &quot;busthursday&quot;: true,&#xd;
  &quot;busfriday&quot;: true,&#xd;
  &quot;bussaturday&quot;: true,&#xd;
  &quot;bussunday&quot;: true,&#xd;
  &quot;busAlertStartTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;busAlertStopTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;busEmailCritical&quot;: false,&#xd;
  &quot;busEmailError&quot;: false,&#xd;
  &quot;busEmailWarning&quot;: false,&#xd;
  &quot;busEmailInfo&quot;: false,&#xd;
  &quot;busSMSCritical&quot;: false,&#xd;
  &quot;busSMSError&quot;: false,&#xd;
  &quot;busSMSWarning&quot;: false,&#xd;
  &quot;busSMSInfo&quot;: false,&#xd;
  &quot;busPushCritical&quot;: false,&#xd;
  &quot;busPushError&quot;: false,&#xd;
  &quot;busPushWarning&quot;: false,&#xd;
  &quot;busPushInfo&quot;: false,&#xd;
  &quot;chargerAlert&quot;: true,&#xd;
  &quot;chargerID&quot;: &quot;*&quot;,&#xd;
  &quot;chargermonday&quot;: true,&#xd;
  &quot;chargertuesday&quot;: true,&#xd;
  &quot;chargerwednesday&quot;: true,&#xd;
  &quot;chargerthursday&quot;: true,&#xd;
  &quot;chargerfriday&quot;: true,&#xd;
  &quot;chargersaturday&quot;: true,&#xd;
  &quot;chargersunday&quot;: true,&#xd;
  &quot;chargerAlertStartTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;chargerAlertStopTime&quot;: &quot;11:59 PM&quot;,&#xd;
  &quot;chargerEmailCritical&quot;: true,&#xd;
  &quot;chargerEmailError&quot;: true,&#xd;
  &quot;chargerEmailWarning&quot;: true,&#xd;
  &quot;chargerEmailInfo&quot;: true,&#xd;
  &quot;chargerSMSCritical&quot;: true,&#xd;
  &quot;chargerSMSError&quot;: true,&#xd;
  &quot;chargerSMSWarning&quot;: true,&#xd;
  &quot;chargerSMSInfo&quot;: true,&#xd;
  &quot;chargerPushCritical&quot;: true,&#xd;
  &quot;chargerPushError&quot;: true,&#xd;
  &quot;chargerPushWarning&quot;: true,&#xd;
  &quot;chargerPushInfo&quot;: true,&#xd;
  &quot;ruleName&quot;: &quot;Ajay Suryavamshi_rule&quot;,&#xd;
  &quot;orgName&quot;: &quot;Edmonton Transit Service&quot;,&#xd;
  &quot;internalAcronym&quot;: &quot;ETS&quot;,&#xd;
  &quot;busName&quot;: &quot;All&quot;,&#xd;
  &quot;busAlertDays&quot;: [&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true&#xd;
  ],&#xd;
  &quot;busEmailNotification&quot;: 0,&#xd;
  &quot;busSMSNotification&quot;: 0,&#xd;
  &quot;busPushNotification&quot;: 0,&#xd;
  &quot;chargerName&quot;: &quot;All&quot;,&#xd;
  &quot;chargerAlertDays&quot;: [&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true&#xd;
  ],&#xd;
  &quot;chargerEmailNotification&quot;: 15,&#xd;
  &quot;chargerSMSNotification&quot;: 15,&#xd;
  &quot;chargerPushNotification&quot;: 15&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/alerts/${NEW_ALERT_ID}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE /alerts/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/alerts/${NEW_ALERT_ID}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/chargerStates" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/chargerStates</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/chargeplans" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/chargeplans</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET CHARGE PLAN ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">CHARGE_PLAN_ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.[*].chargePlanId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">&quot;${CHARGE_PLAN_ID}&quot; != &quot;NOT_FOUND&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/chargeplans/chargers" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/chargeplans/${CHARGE_PLAN_ID}/chargers</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/lastupdate/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/lastupdate/${ETS_BUS_VIN}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/report" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;busName&quot;: &quot;${ETS_BUS_VIN}&quot;,&#xd;
  &quot;date&quot;: &quot;${__timeShift(yyyy-MM-dd,,,,)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/report</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/chargers/sessions" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="start" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">start</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,-P6D,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/chargers/${ABB_CHARGER_OCPP_ID}/sessions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/chargers/aggregateddata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="start" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">start</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;,,-PT1H,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">SoC,Power_Active_Import,Energy_Active_Import_Register,Current_Import,Voltage,RPM,Current_Offered,Temperature,Power_Offered</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aggIntervalInS" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">aggIntervalInS</stringProp>
                  <stringProp name="Argument.value">60</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/chargers/${ABB_CHARGER_OCPP_ID}/aggregateddata</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /reports?reportType=Charger" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="reportType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">reportType</stringProp>
                  <stringProp name="Argument.value">Charger</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fromDay" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromDay</stringProp>
                  <stringProp name="Argument.value">${__timeShift(dd,,-P6D,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="toYear" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toYear</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenantName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenantName</stringProp>
                  <stringProp name="Argument.value">ETS</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fromYear" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromYear</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="toDay" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toDay</stringProp>
                  <stringProp name="Argument.value">${__timeShift(dd,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="toMonth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toMonth</stringProp>
                  <stringProp name="Argument.value">${__timeShift(MM,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fromMonth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromMonth</stringProp>
                  <stringProp name="Argument.value">${__timeShift(MM,,-P6D,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/reports</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /reports/rawcsvreports" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;busName&quot;: &quot;${ETS_BUS_VIN}&quot;,&#xd;
  &quot;start&quot;: &quot;${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,-PT1H,,)}&quot;,&#xd;
  &quot;end&quot;: &quot;${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,,,)}&quot;,&#xd;
  &quot;fields&quot;: [&#xd;
    &quot;PCabs_en_ABSActive&quot;,&#xd;
    &quot;PCabs_uin_FAxleSpd_kph&quot;,&#xd;
    &quot;PCabs_usi_RelSpdSSF_kph&quot;,&#xd;
    &quot;PCac_usi_CabinSetpointTemp_c&quot;,&#xd;
    &quot;PCbe_en_ImbalanceFault&quot;,&#xd;
    &quot;PCbe_en_UVFault&quot;,&#xd;
    &quot;PCbo_bo_HeadlightsOn&quot;&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${FILE_AMS_ENV}/v1/reports/rawcsvreports</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/counts/bus?scroll=5m" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;size&quot;: 5000,&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;filter&quot;: [&#xd;
        {&#xd;
          &quot;terms&quot;: {&#xd;
            &quot;busName&quot;: [&#xd;
              &quot;7JZTH13JXKS000158&quot;,&#xd;
              &quot;7JZTH13J2KS000154&quot;,&#xd;
              &quot;7JZTH13J0LS000297&quot;,&#xd;
              &quot;7JZTH13J5KS000164&quot;,&#xd;
              &quot;7JZTH13J9KS000166&quot;,&#xd;
              &quot;7JZTH13J6KS000156&quot;,&#xd;
              &quot;7JZTH13J2KS000171&quot;,&#xd;
              &quot;7JZTH13J7KS000151&quot;,&#xd;
              &quot;7JZTH13J4LS000299&quot;,&#xd;
              &quot;7JZTH13J7LS000300&quot;,&#xd;
              &quot;7JZTH13JXLS000307&quot;,&#xd;
              &quot;7JZTH13J0LS000302&quot;,&#xd;
              &quot;7JZTH13J3LS000309&quot;,&#xd;
              &quot;7JZTH13J1KS000162&quot;,&#xd;
              &quot;7JZTH13J9KS000152&quot;,&#xd;
              &quot;7JZTH13J1LS000308&quot;,&#xd;
              &quot;7JZTH13J2LS000298&quot;,&#xd;
              &quot;7JZTH13JXKS000161&quot;,&#xd;
              &quot;7JZTH13J9LS000315&quot;,&#xd;
              &quot;7JZTH13J1KS000159&quot;,&#xd;
              &quot;7JZTH13J8KS000157&quot;,&#xd;
              &quot;7JZTH13J4KS000169&quot;,&#xd;
              &quot;7JZTH13J8LS000306&quot;,&#xd;
              &quot;7JZTH13J6LS000305&quot;,&#xd;
              &quot;7JZTH13J0KS000170&quot;,&#xd;
              &quot;7JZTH13J0KS000167&quot;,&#xd;
              &quot;7JZTH13J1LS000308&quot;,&#xd;
              &quot;7JZTH13J4KS000155&quot;,&#xd;
              &quot;7JZTH13J7KS000165&quot;,&#xd;
              &quot;7JZTH13J2LS000303&quot;,&#xd;
              &quot;7JZTH13J5LS000313&quot;,&#xd;
              &quot;7JZTH13J4LS000304&quot;,&#xd;
              &quot;7JZTH13J2KS000168&quot;,&#xd;
              &quot;7JZTH13J8KS000160&quot;,&#xd;
              &quot;7JZTH13J3LS000312&quot;,&#xd;
              &quot;7JZTH13JXLS000310&quot;,&#xd;
              &quot;7JZTH13J3KS000163&quot;,&#xd;
              &quot;7JZTH13J9LS000301&quot;,&#xd;
              &quot;7JZTH13J7LS000314&quot;,&#xd;
              &quot;7JZTH13J0KS000153&quot;,&#xd;
              &quot;7JZTH13J1LS000311&quot;&#xd;
            ]&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;range&quot;: {&#xd;
            &quot;faultTimestamp&quot;: {&#xd;
              &quot;gte&quot;: ${__timeShift(,,-P100D,,)},&#xd;
              &quot;lte&quot;: ${__timeShift(,,,,)}&#xd;
            }&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/counts/bus?scroll=5m</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET SCROLL ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">BUS_SCROLL_ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$._scroll_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/counts/search?scroll=5m" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;scroll_id&quot;: &quot;${BUS_SCROLL_ID}&quot;,&#xd;
  &quot;scroll&quot;: &quot;5m&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/counts/search?scroll=5m</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/counts/search?scroll=5m" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;scroll_id&quot;: &quot;${BUS_SCROLL_ID}&quot;,&#xd;
  &quot;scroll&quot;: &quot;5m&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/counts/search?scroll=5m</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/counts/charger?scroll=5m" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;size&quot;: 5000,&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;filter&quot;: [&#xd;
        {&#xd;
          &quot;terms&quot;: {&#xd;
            &quot;chargerName&quot;: [&#xd;
              &quot;HVC150-IT1-2219-065&quot;,&#xd;
              &quot;HVC150-MX1-5219-006&quot;,&#xd;
              &quot;HVC150-IT1-2319-029&quot;,&#xd;
              &quot;HVC150-MX1-5219-003&quot;,&#xd;
              &quot;NAMHVC150-US1-1619-975&quot;,&#xd;
              &quot;HVC150-MX1-0220-010&quot;,&#xd;
              &quot;HVC150-IT1-2219-088&quot;,&#xd;
              &quot;HVC150-IT1-2219-082&quot;,&#xd;
              &quot;HVC150-IT1-1119-012&quot;,&#xd;
              &quot;00120c2df6905e01&quot;,&#xd;
              &quot;NAMHVC150-US1-1619-974&quot;,&#xd;
              &quot;HVC150-MX1-0120-001&quot;,&#xd;
              &quot;HVC150-MX1-5219-005&quot;,&#xd;
              &quot;00120C2DF6939301&quot;,&#xd;
              &quot;HVC150-IT1-1119-045&quot;,&#xd;
              &quot;HVC150-MX1-5219-004&quot;,&#xd;
              &quot;HVC150-IT1-1019-119&quot;,&#xd;
              &quot;HVC150-IT1-2119-099&quot;,&#xd;
              &quot;HVC150-MX1-0220-009&quot;,&#xd;
              &quot;00120c2df6ac0401&quot;,&#xd;
              &quot;HVC150-IT1-1019-068&quot;,&#xd;
              &quot;HVC150-MX1-0220-011&quot;,&#xd;
              &quot;HVC150-MX1-0220-008&quot;,&#xd;
              &quot;00120C2DF6B05901&quot;,&#xd;
              &quot;HVC150-IT1-2219-093&quot;,&#xd;
              &quot;00120C2DF6BCA201&quot;,&#xd;
              &quot;HVC150-MX1-0220-013&quot;,&#xd;
              &quot;NAMHVC150-US1-1619-915&quot;,&#xd;
              &quot;HVC150-IT1-1119-017&quot;,&#xd;
              &quot;00120c2df6a50a01&quot;,&#xd;
              &quot;00120C2DF6B03F01&quot;,&#xd;
              &quot;HVC150-IT1-2219-079&quot;,&#xd;
              &quot;HVC150-IT1-2219-091&quot;,&#xd;
              &quot;HVC150-IT1-2219-064&quot;&#xd;
            ]&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;term&quot;: {&#xd;
            &quot;request.status&quot;: &quot;Faulted&quot;&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;range&quot;: {&#xd;
            &quot;@timestamp&quot;: {&#xd;
              &quot;gte&quot;: ${__timeShift(,,-P100D,,)},&#xd;
              &quot;lte&quot;: ${__timeShift(,,,,)}&#xd;
            }&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/counts/charger?scroll=5m</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/busfleetmetrics" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="buses" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">buses</stringProp>
                  <stringProp name="Argument.valuestringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="signalNames" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">signalNames</stringProp>
                  <stringProp name="Argument.value">distanceInMiles</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="start" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">start</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,-P13D,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/busfleetmetrics</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /reports/customreports" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;url&quot;: &quot;https://kibana.proterra.com:5601/app/kibana#/dashboard/AWDtNvhr3F4CRLkcyUEf?_g=(refreshInterval:(display:&apos;1%20day&apos;,pause:!f,section:3,value:86400000),time:(from:now%2Fy,mode:quick,to:now))&amp;_a=(options:(darkTheme:!f),query:(query_string:(analyze_wildcard:!t,query:&apos;busName:7JZTH13J7KS000151 OR busName:7JZTH13J9KS000152 OR busName:7JZTH13J0KS000153 OR busName:7JZTH13J2KS000154 OR busName:7JZTH13J4KS000155 OR busName:7JZTH13J6KS000156 OR busName:7JZTH13J8KS000157 OR busName:7JZTH13JXKS000158 OR busName:7JZTH13J1KS000159 OR busName:7JZTH13J8KS000160 OR busName:7JZTH13JXKS000161 OR busName:7JZTH13J1KS000162 OR busName:7JZTH13J3KS000163 OR busName:7JZTH13J5KS000164 OR busName:7JZTH13J7KS000165 OR busName:7JZTH13J9KS000166 OR busName:7JZTH13J0KS000167 OR busName:7JZTH13J2KS000168 OR busName:7JZTH13J4KS000169 OR busName:7JZTH13J0KS000170 OR busName:7JZTH13J2KS000171 OR busName:7JZTH13J0LS000297 OR busName:7JZTH13J2LS000298 OR busName:7JZTH13J4LS000299 OR busName:7JZTH13J7LS000300 OR busName:7JZTH13J9LS000301 OR busName:7JZTH13J0LS000302 OR busName:7JZTH13J2LS000303 OR busName:7JZTH13J4LS000304 OR busName:7JZTH13J6LS000305 OR busName:7JZTH13J8LS000306 OR busName:7JZTH13JXLS000307 OR busName:7JZTH13J1LS000308 OR busName:7JZTH13J1LS000308 OR busName:7JZTH13J3LS000309 OR busName:7JZTH13JXLS000310 OR busName:7JZTH13J1LS000311 OR busName:7JZTH13J3LS000312 OR busName:7JZTH13J5LS000313 OR busName:7JZTH13J7LS000314 OR busName:7JZTH13J9LS000315&apos;)))&quot;,&#xd;
  &quot;output_file&quot;: &quot;-ETS_-_Edmonton_Transit_Service-8000_-_7JZTH13J7KS000151-2021-01-10T13:01:51.937Z.pdf&quot;,&#xd;
  &quot;wait_in_s&quot;: 20,&#xd;
  &quot;report_type&quot;: &quot;kibana&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">FILE_AMS_ENV/v1/reports/customreports</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CREATE /tenants/chargeplans" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;chargePlanName&quot;: &quot;JMX - CHARGE PLAN - ${__timeShift(,,,,)}&quot;,&#xd;
  &quot;tenantId&quot;: &quot;${ETS_TENANT_ID}&quot;,&#xd;
  &quot;timezone&quot;: &quot;America/Chicago&quot;,&#xd;
  &quot;chargePlanDemandLimit&quot;: &quot;660&quot;,&#xd;
  &quot;chargePlanDemandOverride&quot;: false,&#xd;
  &quot;chargePlanActive&quot;: false,&#xd;
  &quot;transformerPowerLimit&quot;: &quot;60&quot;,&#xd;
  &quot;tariffName&quot;: &quot;A10&quot;,&#xd;
  &quot;utilityName&quot;: &quot;PG&amp;E&quot;,&#xd;
  &quot;schedules&quot;: [&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 1,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 2,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 3,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 4,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 5,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 6,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 7,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/chargeplans</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET NEW CHARGE PLAN ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">NEW_CHARGE_PLAN_ID; NEW_CHARGE_PLAN_NAME</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.chargePlanId; $.chargePlanName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND; NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/chargeplans/chargerassociations" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&#xd;
  &quot;57b6e734-a7a6-4b81-9a2f-59b7ea54a5b1&quot;,&#xd;
  &quot;99474eaa-7f44-4744-ad30-f4faa109ca3b&quot;,&#xd;
  &quot;57edc7cd-912b-44f7-bd9f-eeb6226ce58d&quot;,&#xd;
  &quot;5add0996-66a4-4a9f-b22f-5514348e00aa&quot;,&#xd;
  &quot;f9f0c2b6-5e7a-4d3e-8241-07f6c971a9c6&quot;,&#xd;
  &quot;c9070ce3-734c-4616-8b3b-a0f5687969ad&quot;,&#xd;
  &quot;a4e2c36d-918c-472c-8f4d-0184566ee31e&quot;,&#xd;
  &quot;b4c04864-0623-4361-977a-390c00ad97b2&quot;,&#xd;
  &quot;ce414788-a1b3-4b89-9ea0-040747f84834&quot;,&#xd;
  &quot;b2ce0c87-a2f9-418e-88bb-ce3dcec3f76d&quot;&#xd;
]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/chargeplans/${NEW_CHARGE_PLAN_ID}/chargerassociations?autoRemoveChargers=true</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UPDATE /tenants/chargeplans/" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;chargePlanId&quot;: &quot;${NEW_CHARGE_PLAN_ID}&quot;,&#xd;
  &quot;chargePlanName&quot;: &quot;${NEW_CHARGE_PLAN_NAME}&quot;,&#xd;
  &quot;chargePlanDemandLimit&quot;: &quot;660&quot;,&#xd;
  &quot;transformerPowerLimit&quot;: &quot;60&quot;,&#xd;
  &quot;chargePlanDemandOverride&quot;: false,&#xd;
  &quot;chargePlanActive&quot;: false,&#xd;
  &quot;tenantId&quot;: &quot;${ETS_TENANT_ID}&quot;,&#xd;
  &quot;utilityName&quot;: &quot;PG&amp;E&quot;,&#xd;
  &quot;utilityId&quot;: null,&#xd;
  &quot;tariffName&quot;: &quot;A10&quot;,&#xd;
  &quot;tariffId&quot;: null,&#xd;
  &quot;timezone&quot;: &quot;America/Chicago&quot;,&#xd;
  &quot;chargePlanStrategy&quot;: null,&#xd;
  &quot;schedules&quot;: [&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 1,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 2,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 3,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 4,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 5,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 6,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 7,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;customer&quot;: &quot;ETS&quot;,&#xd;
  &quot;chargers&quot;: [&#xd;
    {&#xd;
      &quot;linkId&quot;: &quot;1d5cbd45-c970-40e1-83b0-b5b884bd9953&quot;,&#xd;
      &quot;assetId&quot;: &quot;c9070ce3-734c-4616-8b3b-a0f5687969ad&quot;,&#xd;
      &quot;chargePlanId&quot;: &quot;b10fd46d-19c7-4ca7-b617-a38ff799ae63&quot;,&#xd;
      &quot;charger&quot;: {&#xd;
        &quot;assetId&quot;: &quot;c9070ce3-734c-4616-8b3b-a0f5687969ad&quot;,&#xd;
        &quot;garageId&quot;: &quot;8cbc5a33-1940-47c3-b3d2-a884a0bd6a1f&quot;,&#xd;
        &quot;assetTenant&quot;: null,&#xd;
        &quot;assetOwner&quot;: null,&#xd;
        &quot;assetIP&quot;: null,&#xd;
        &quot;assetType&quot;: &quot;CHARGER&quot;,&#xd;
        &quot;createdTime&quot;: null,&#xd;
        &quot;lastModifiedTime&quot;: 1602056739000,&#xd;
        &quot;customerAcceptanceDate&quot;: null,&#xd;
        &quot;provisionDate&quot;: null,&#xd;
        &quot;chargerSerialNumber&quot;: &quot;00120C2DF6B03F01&quot;,&#xd;
        &quot;chargerFirmwareVersion&quot;: null,&#xd;
        &quot;lastSoftwareUpdate&quot;: null,&#xd;
        &quot;chargerName&quot;: &quot;CTG Shop 19&quot;,&#xd;
        &quot;chargerVendor&quot;: &quot;Proterra&quot;,&#xd;
        &quot;chargerModel&quot;: &quot;Proterra-PCS-60&quot;,&#xd;
        &quot;chargerSpecSheetLink&quot;: null,&#xd;
        &quot;chargerType&quot;: &quot;CCS 1.0&quot;,&#xd;
        &quot;maxCurrent&quot;: null,&#xd;
        &quot;maxVoltage&quot;: null,&#xd;
        &quot;chargerConfiguration&quot;: null,&#xd;
        &quot;ocppId&quot;: &quot;00120C2DF6B03F01&quot;,&#xd;
        &quot;timezone&quot;: &quot;America/Denver&quot;,&#xd;
        &quot;mfgDate&quot;: null,&#xd;
        &quot;chargerSpec&quot;: null,&#xd;
        &quot;chargerLocation&quot;: {&#xd;
          &quot;addressId&quot;: &quot;45b329be-7425-442c-b487-19f6c2f034b0&quot;,&#xd;
          &quot;addressAbbreviation&quot;: null,&#xd;
          &quot;addressLine1&quot;: &quot;15520 Ellerslie Rd SW, Edmonton, AB T6W 1A4, Canada&quot;,&#xd;
          &quot;addressLine2&quot;: null,&#xd;
          &quot;city&quot;: &quot;Edmonton&quot;,&#xd;
          &quot;state&quot;: null,&#xd;
          &quot;zipCode&quot;: null,&#xd;
          &quot;country&quot;: null,&#xd;
          &quot;latitude&quot;: 53.4260169,&#xd;
          &quot;longitude&quot;: -113.5867352&#xd;
        },&#xd;
        &quot;meter&quot;: {&#xd;
          &quot;meterId&quot;: &quot;c4073287-44a4-4fe4-96a8-6584ab13f4bf&quot;,&#xd;
          &quot;meterSerialNumber&quot;: null,&#xd;
          &quot;meterType&quot;: null,&#xd;
          &quot;meterName&quot;: null,&#xd;
          &quot;meterLocation&quot;: null&#xd;
        },&#xd;
        &quot;dispensers&quot;: [],&#xd;
        &quot;connectivities&quot;: [],&#xd;
        &quot;excludedFromChargePlan&quot;: null,&#xd;
        &quot;customerChargerName&quot;: null,&#xd;
        &quot;mfgLocation&quot;: null,&#xd;
        &quot;cradlePointSerialNumber&quot;: &quot;&quot;,&#xd;
        &quot;specialLocationOfCharger&quot;: null,&#xd;
        &quot;cellularServiceProvider&quot;: null,&#xd;
        &quot;cellularSIMNumber&quot;: null,&#xd;
        &quot;cellularIMEI&quot;: null,&#xd;
        &quot;cellularIMSI&quot;: null,&#xd;
        &quot;cellularMAC&quot;: null,&#xd;
        &quot;cellularIP&quot;: &quot;&quot;,&#xd;
        &quot;cellularPhoneNum&quot;: null,&#xd;
        &quot;cellularAPN&quot;: null,&#xd;
        &quot;cellularICCID&quot;: &quot;&quot;,&#xd;
        &quot;vendorId&quot;: &quot;Edmonton 001&quot;,&#xd;
        &quot;specificChargerLocation&quot;: &quot;Shop&quot;,&#xd;
        &quot;ocppMultiplexerServers&quot;: [],&#xd;
        &quot;chargerAllowedToTalkToMultiplexer&quot;: false&#xd;
      }&#xd;
    },&#xd;
    {&#xd;
      &quot;linkId&quot;: &quot;1d65559a-0906-4be2-95b7-59d2f761f7b9&quot;,&#xd;
      &quot;assetId&quot;: &quot;a4e2c36d-918c-472c-8f4d-0184566ee31e&quot;,&#xd;
      &quot;chargePlanId&quot;: &quot;b10fd46d-19c7-4ca7-b617-a38ff799ae63&quot;,&#xd;
      &quot;charger&quot;: {&#xd;
        &quot;assetId&quot;: &quot;a4e2c36d-918c-472c-8f4d-0184566ee31e&quot;,&#xd;
        &quot;garageId&quot;: &quot;3a91bb79-af4b-4ab6-8f35-970307a15183&quot;,&#xd;
        &quot;assetTenant&quot;: null,&#xd;
        &quot;assetOwner&quot;: null,&#xd;
        &quot;assetIP&quot;: null,&#xd;
        &quot;assetType&quot;: &quot;CHARGER&quot;,&#xd;
        &quot;createdTime&quot;: null,&#xd;
        &quot;lastModifiedTime&quot;: null,&#xd;
        &quot;customerAcceptanceDate&quot;: null,&#xd;
        &quot;provisionDate&quot;: null,&#xd;
        &quot;chargerSerialNumber&quot;: &quot;00120C2DF6BCA201&quot;,&#xd;
        &quot;chargerFirmwareVersion&quot;: null,&#xd;
        &quot;lastSoftwareUpdate&quot;: null,&#xd;
        &quot;chargerName&quot;: &quot;KA Body 25&quot;,&#xd;
        &quot;chargerVendor&quot;: &quot;Proterra&quot;,&#xd;
        &quot;chargerModel&quot;: &quot;Proterra-PCS-60&quot;,&#xd;
        &quot;chargerSpecSheetLink&quot;: null,&#xd;
        &quot;chargerType&quot;: &quot;CCS 1.0&quot;,&#xd;
        &quot;maxCurrent&quot;: null,&#xd;
        &quot;maxVoltage&quot;: null,&#xd;
        &quot;chargerConfiguration&quot;: null,&#xd;
        &quot;ocppId&quot;: &quot;00120C2DF6BCA201&quot;,&#xd;
        &quot;timezone&quot;: &quot;America/Denver&quot;,&#xd;
        &quot;mfgDate&quot;: null,&#xd;
        &quot;chargerSpec&quot;: null,&#xd;
        &quot;chargerLocation&quot;: {&#xd;
          &quot;addressId&quot;: &quot;7e159a6c-2b15-4a00-a454-7954ff444f8c&quot;,&#xd;
          &quot;addressAbbreviation&quot;: null,&#xd;
          &quot;addressLine1&quot;: &quot;12403 Fort Rd NW, Edmonton, AB T5B 2B7, Canada&quot;,&#xd;
          &quot;addressLine2&quot;: null,&#xd;
          &quot;city&quot;: &quot;Edmonton&quot;,&#xd;
          &quot;state&quot;: null,&#xd;
          &quot;zipCode&quot;: null,&#xd;
          &quot;country&quot;: null,&#xd;
          &quot;latitude&quot;: 53.5789232,&#xd;
          &quot;longitude&quot;: -113.4565009&#xd;
        },&#xd;
        &quot;meter&quot;: {&#xd;
          &quot;meterId&quot;: &quot;1b4d0b91-e42f-4b47-99f1-ce222e5b18bc&quot;,&#xd;
          &quot;meterSerialNumber&quot;: null,&#xd;
          &quot;meterType&quot;: null,&#xd;
          &quot;meterName&quot;: null,&#xd;
          &quot;meterLocation&quot;: null&#xd;
        },&#xd;
        &quot;dispensers&quot;: [],&#xd;
        &quot;connectivities&quot;: [],&#xd;
        &quot;excludedFromChargePlan&quot;: null,&#xd;
        &quot;customerChargerName&quot;: null,&#xd;
        &quot;mfgLocation&quot;: null,&#xd;
        &quot;cradlePointSerialNumber&quot;: &quot;&quot;,&#xd;
        &quot;specialLocationOfCharger&quot;: null,&#xd;
        &quot;cellularServiceProvider&quot;: null,&#xd;
        &quot;cellularSIMNumber&quot;: null,&#xd;
        &quot;cellularIMEI&quot;: null,&#xd;
        &quot;cellularIMSI&quot;: null,&#xd;
        &quot;cellularMAC&quot;: null,&#xd;
        &quot;cellularIP&quot;: &quot;&quot;,&#xd;
        &quot;cellularPhoneNum&quot;: null,&#xd;
        &quot;cellularAPN&quot;: null,&#xd;
        &quot;cellularICCID&quot;: &quot;&quot;,&#xd;
        &quot;vendorId&quot;: &quot;EMBC 006&quot;,&#xd;
        &quot;specificChargerLocation&quot;: &quot;Shop&quot;,&#xd;
        &quot;ocppMultiplexerServers&quot;: [],&#xd;
        &quot;chargerAllowedToTalkToMultiplexer&quot;: false&#xd;
      }&#xd;
    },&#xd;
    {&#xd;
      &quot;linkId&quot;: &quot;2c121f64-6eb0-4454-9337-7454a2e23e86&quot;,&#xd;
      &quot;assetId&quot;: &quot;5add0996-66a4-4a9f-b22f-5514348e00aa&quot;,&#xd;
      &quot;chargePlanId&quot;: &quot;b10fd46d-19c7-4ca7-b617-a38ff799ae63&quot;,&#xd;
      &quot;charger&quot;: {&#xd;
        &quot;assetId&quot;: &quot;5add0996-66a4-4a9f-b22f-5514348e00aa&quot;,&#xd;
        &quot;garageId&quot;: &quot;8cbc5a33-1940-47c3-b3d2-a884a0bd6a1f&quot;,&#xd;
        &quot;assetTenant&quot;: null,&#xd;
        &quot;assetOwner&quot;: null,&#xd;
        &quot;assetIP&quot;: null,&#xd;
        &quot;assetType&quot;: &quot;CHARGER&quot;,&#xd;
        &quot;createdTime&quot;: null,&#xd;
        &quot;lastModifiedTime&quot;: 1601386132000,&#xd;
        &quot;customerAcceptanceDate&quot;: null,&#xd;
        &quot;provisionDate&quot;: null,&#xd;
        &quot;chargerSerialNumber&quot;: &quot;HVC150-IT1-1119-045&quot;,&#xd;
        &quot;chargerFirmwareVersion&quot;: null,&#xd;
        &quot;lastSoftwareUpdate&quot;: null,&#xd;
        &quot;chargerName&quot;: &quot;CENT 36-3&quot;,&#xd;
        &quot;chargerVendor&quot;: &quot;ABB&quot;,&#xd;
        &quot;chargerModel&quot;: &quot;HVC-150PD&quot;,&#xd;
        &quot;chargerSpecSheetLink&quot;: null,&#xd;
        &quot;chargerType&quot;: &quot;Pantograph&quot;,&#xd;
        &quot;maxCurrent&quot;: null,&#xd;
        &quot;maxVoltage&quot;: null,&#xd;
        &quot;chargerConfiguration&quot;: null,&#xd;
        &quot;ocppId&quot;: &quot;HVC150-IT1-1119-045&quot;,&#xd;
        &quot;timezone&quot;: &quot;America/Denver&quot;,&#xd;
        &quot;mfgDate&quot;: null,&#xd;
        &quot;chargerSpec&quot;: null,&#xd;
        &quot;chargerLocation&quot;: {&#xd;
          &quot;addressId&quot;: &quot;3642345a-d7a9-4109-b1bf-9804a34d3417&quot;,&#xd;
          &quot;addressAbbreviation&quot;: null,&#xd;
          &quot;addressLine1&quot;: &quot;15520 Ellerslie Rd SW, Edmonton, AB T6W 1A4, Canada&quot;,&#xd;
          &quot;addressLine2&quot;: null,&#xd;
          &quot;city&quot;: &quot;Edmonton&quot;,&#xd;
          &quot;state&quot;: null,&#xd;
          &quot;zipCode&quot;: null,&#xd;
          &quot;country&quot;: null,&#xd;
          &quot;latitude&quot;: 53.4260169,&#xd;
          &quot;longitude&quot;: -113.5867352&#xd;
        },&#xd;
        &quot;meter&quot;: {&#xd;
          &quot;meterId&quot;: &quot;f426ed2e-ad35-4462-8e23-36877c489e7f&quot;,&#xd;
          &quot;meterSerialNumber&quot;: null,&#xd;
          &quot;meterType&quot;: null,&#xd;
          &quot;meterName&quot;: null,&#xd;
          &quot;meterLocation&quot;: null&#xd;
        },&#xd;
        &quot;dispensers&quot;: [],&#xd;
        &quot;connectivities&quot;: [],&#xd;
        &quot;excludedFromChargePlan&quot;: null,&#xd;
        &quot;customerChargerName&quot;: null,&#xd;
        &quot;mfgLocation&quot;: null,&#xd;
        &quot;cradlePointSerialNumber&quot;: &quot;&quot;,&#xd;
        &quot;specialLocationOfCharger&quot;: null,&#xd;
        &quot;cellularServiceProvider&quot;: null,&#xd;
        &quot;cellularSIMNumber&quot;: null,&#xd;
        &quot;cellularIMEI&quot;: null,&#xd;
        &quot;cellularIMSI&quot;: null,&#xd;
        &quot;cellularMAC&quot;: null,&#xd;
        &quot;cellularIP&quot;: &quot;&quot;,&#xd;
        &quot;cellularPhoneNum&quot;: null,&#xd;
        &quot;cellularAPN&quot;: null,&#xd;
        &quot;cellularICCID&quot;: &quot;&quot;,&#xd;
        &quot;vendorId&quot;: &quot;Centennial_Charger_003&quot;,&#xd;
        &quot;specificChargerLocation&quot;: &quot;Depot&quot;,&#xd;
        &quot;ocppMultiplexerServers&quot;: [],&#xd;
        &quot;chargerAllowedToTalkToMultiplexer&quot;: false&#xd;
      }&#xd;
    },&#xd;
    {&#xd;
      &quot;linkId&quot;: &quot;3c51a3ed-b9dd-4f9d-88f9-1110a1ad8943&quot;,&#xd;
      &quot;assetId&quot;: &quot;57b6e734-a7a6-4b81-9a2f-59b7ea54a5b1&quot;,&#xd;
      &quot;chargePlanId&quot;: &quot;b10fd46d-19c7-4ca7-b617-a38ff799ae63&quot;,&#xd;
      &quot;charger&quot;: {&#xd;
        &quot;assetId&quot;: &quot;57b6e734-a7a6-4b81-9a2f-59b7ea54a5b1&quot;,&#xd;
        &quot;garageId&quot;: &quot;8cbc5a33-1940-47c3-b3d2-a884a0bd6a1f&quot;,&#xd;
        &quot;assetTenant&quot;: null,&#xd;
        &quot;assetOwner&quot;: null,&#xd;
        &quot;assetIP&quot;: null,&#xd;
        &quot;assetType&quot;: &quot;CHARGER&quot;,&#xd;
        &quot;createdTime&quot;: null,&#xd;
        &quot;lastModifiedTime&quot;: 1606753492000,&#xd;
        &quot;customerAcceptanceDate&quot;: null,&#xd;
        &quot;provisionDate&quot;: null,&#xd;
        &quot;chargerSerialNumber&quot;: &quot;NAMHVC150-US1-1619-975&quot;,&#xd;
        &quot;chargerFirmwareVersion&quot;: null,&#xd;
        &quot;lastSoftwareUpdate&quot;: null,&#xd;
        &quot;chargerName&quot;: &quot;CENT 36-1&quot;,&#xd;
        &quot;chargerVendor&quot;: &quot;ABB&quot;,&#xd;
        &quot;chargerModel&quot;: &quot;HVC-150PD&quot;,&#xd;
        &quot;chargerSpecSheetLink&quot;: null,&#xd;
        &quot;chargerType&quot;: &quot;Pantograph&quot;,&#xd;
        &quot;maxCurrent&quot;: null,&#xd;
        &quot;maxVoltage&quot;: null,&#xd;
        &quot;chargerConfiguration&quot;: null,&#xd;
        &quot;ocppId&quot;: &quot;NAMHVC150-US1-1619-975&quot;,&#xd;
        &quot;timezone&quot;: &quot;America/Denver&quot;,&#xd;
        &quot;mfgDate&quot;: null,&#xd;
        &quot;chargerSpec&quot;: null,&#xd;
        &quot;chargerLocation&quot;: {&#xd;
          &quot;addressId&quot;: &quot;bcf8450a-55cf-4389-8eef-699bd0216ca0&quot;,&#xd;
          &quot;addressAbbreviation&quot;: null,&#xd;
          &quot;addressLine1&quot;: &quot;15520 Ellerslie Rd SW, Edmonton, AB T6W 1A4, Canada&quot;,&#xd;
          &quot;addressLine2&quot;: null,&#xd;
          &quot;city&quot;: &quot;Edmonton&quot;,&#xd;
          &quot;state&quot;: null,&#xd;
          &quot;zipCode&quot;: null,&#xd;
          &quot;country&quot;: null,&#xd;
          &quot;latitude&quot;: 53.4260169,&#xd;
          &quot;longitude&quot;: -113.5867352&#xd;
        },&#xd;
        &quot;meter&quot;: {&#xd;
          &quot;meterId&quot;: &quot;55899f1d-6419-4397-89c2-8ec24e4394e0&quot;,&#xd;
          &quot;meterSerialNumber&quot;: null,&#xd;
          &quot;meterType&quot;: null,&#xd;
          &quot;meterName&quot;: null,&#xd;
          &quot;meterLocation&quot;: null&#xd;
        },&#xd;
        &quot;dispensers&quot;: [],&#xd;
        &quot;connectivities&quot;: [],&#xd;
        &quot;excludedFromChargePlan&quot;: null,&#xd;
        &quot;customerChargerName&quot;: null,&#xd;
        &quot;mfgLocation&quot;: null,&#xd;
        &quot;cradlePointSerialNumber&quot;: &quot; &quot;,&#xd;
        &quot;specialLocationOfCharger&quot;: null,&#xd;
        &quot;cellularServiceProvider&quot;: null,&#xd;
        &quot;cellularSIMNumber&quot;: null,&#xd;
        &quot;cellularIMEI&quot;: null,&#xd;
        &quot;cellularIMSI&quot;: null,&#xd;
        &quot;cellularMAC&quot;: null,&#xd;
        &quot;cellularIP&quot;: &quot;&quot;,&#xd;
        &quot;cellularPhoneNum&quot;: null,&#xd;
        &quot;cellularAPN&quot;: null,&#xd;
        &quot;cellularICCID&quot;: &quot;&quot;,&#xd;
        &quot;vendorId&quot;: &quot;Centennial_Charger_001&quot;,&#xd;
        &quot;specificChargerLocation&quot;: &quot;Depot&quot;,&#xd;
        &quot;ocppMultiplexerServers&quot;: [],&#xd;
        &quot;chargerAllowedToTalkToMultiplexer&quot;: false&#xd;
      }&#xd;
    },&#xd;
    {&#xd;
      &quot;linkId&quot;: &quot;5f998770-4d08-4d7c-9aaa-ff02b652a2d8&quot;,&#xd;
      &quot;assetId&quot;: &quot;f9f0c2b6-5e7a-4d3e-8241-07f6c971a9c6&quot;,&#xd;
      &quot;chargePlanId&quot;: &quot;b10fd46d-19c7-4ca7-b617-a38ff799ae63&quot;,&#xd;
      &quot;charger&quot;: {&#xd;
        &quot;assetId&quot;: &quot;f9f0c2b6-5e7a-4d3e-8241-07f6c971a9c6&quot;,&#xd;
        &quot;garageId&quot;: &quot;8cbc5a33-1940-47c3-b3d2-a884a0bd6a1f&quot;,&#xd;
        &quot;assetTenant&quot;: null,&#xd;
        &quot;assetOwner&quot;: null,&#xd;
        &quot;assetIP&quot;: null,&#xd;
        &quot;assetType&quot;: &quot;CHARGER&quot;,&#xd;
        &quot;createdTime&quot;: null,&#xd;
        &quot;lastModifiedTime&quot;: 1601386144000,&#xd;
        &quot;customerAcceptanceDate&quot;: null,&#xd;
        &quot;provisionDate&quot;: null,&#xd;
        &quot;chargerSerialNumber&quot;: &quot;HVC150-IT1-1019-119&quot;,&#xd;
        &quot;chargerFirmwareVersion&quot;: null,&#xd;
        &quot;lastSoftwareUpdate&quot;: null,&#xd;
        &quot;chargerName&quot;: &quot;CENT 36-4&quot;,&#xd;
        &quot;chargerVendor&quot;: &quot;ABB&quot;,&#xd;
        &quot;chargerModel&quot;: &quot;HVC-150PD&quot;,&#xd;
        &quot;chargerSpecSheetLink&quot;: null,&#xd;
        &quot;chargerType&quot;: &quot;Pantograph&quot;,&#xd;
        &quot;maxCurrent&quot;: null,&#xd;
        &quot;maxVoltage&quot;: null,&#xd;
        &quot;chargerConfiguration&quot;: null,&#xd;
        &quot;ocppId&quot;: &quot;HVC150-IT1-1019-119&quot;,&#xd;
        &quot;timezone&quot;: &quot;America/Denver&quot;,&#xd;
        &quot;mfgDate&quot;: null,&#xd;
        &quot;chargerSpec&quot;: null,&#xd;
        &quot;chargerLocation&quot;: {&#xd;
          &quot;addressId&quot;: &quot;ab485577-1745-4e77-ba25-bf9862c92f28&quot;,&#xd;
          &quot;addressAbbreviation&quot;: null,&#xd;
          &quot;addressLine1&quot;: &quot;15520 Ellerslie Rd SW, Edmonton, AB T6W 1A4, Canada&quot;,&#xd;
          &quot;addressLine2&quot;: null,&#xd;
          &quot;city&quot;: &quot;Edmonton&quot;,&#xd;
          &quot;state&quot;: null,&#xd;
          &quot;zipCode&quot;: null,&#xd;
          &quot;country&quot;: null,&#xd;
          &quot;latitude&quot;: 53.4260169,&#xd;
          &quot;longitude&quot;: -113.5867352&#xd;
        },&#xd;
        &quot;meter&quot;: {&#xd;
          &quot;meterId&quot;: &quot;710c9b3b-1815-493b-a107-0215f01d0639&quot;,&#xd;
          &quot;meterSerialNumber&quot;: null,&#xd;
          &quot;meterType&quot;: null,&#xd;
          &quot;meterName&quot;: null,&#xd;
          &quot;meterLocation&quot;: null&#xd;
        },&#xd;
        &quot;dispensers&quot;: [],&#xd;
        &quot;connectivities&quot;: [],&#xd;
        &quot;excludedFromChargePlan&quot;: null,&#xd;
        &quot;customerChargerName&quot;: null,&#xd;
        &quot;mfgLocation&quot;: null,&#xd;
        &quot;cradlePointSerialNumber&quot;: &quot;&quot;,&#xd;
        &quot;specialLocationOfCharger&quot;: null,&#xd;
        &quot;cellularServiceProvider&quot;: null,&#xd;
        &quot;cellularSIMNumber&quot;: null,&#xd;
        &quot;cellularIMEI&quot;: null,&#xd;
        &quot;cellularIMSI&quot;: null,&#xd;
        &quot;cellularMAC&quot;: null,&#xd;
        &quot;cellularIP&quot;: &quot;&quot;,&#xd;
        &quot;cellularPhoneNum&quot;: null,&#xd;
        &quot;cellularAPN&quot;: null,&#xd;
        &quot;cellularICCID&quot;: &quot;&quot;,&#xd;
        &quot;vendorId&quot;: &quot;Centennial_Charger_004&quot;,&#xd;
        &quot;specificChargerLocation&quot;: &quot;Depot&quot;,&#xd;
        &quot;ocppMultiplexerServers&quot;: [],&#xd;
        &quot;chargerAllowedToTalkToMultiplexer&quot;: false&#xd;
      }&#xd;
    },&#xd;
    {&#xd;
      &quot;linkId&quot;: &quot;6731c128-75e0-454d-8dc4-c4ebe4b960d1&quot;,&#xd;
      &quot;assetId&quot;: &quot;b2ce0c87-a2f9-418e-88bb-ce3dcec3f76d&quot;,&#xd;
      &quot;chargePlanId&quot;: &quot;b10fd46d-19c7-4ca7-b617-a38ff799ae63&quot;,&#xd;
      &quot;charger&quot;: {&#xd;
        &quot;assetId&quot;: &quot;b2ce0c87-a2f9-418e-88bb-ce3dcec3f76d&quot;,&#xd;
        &quot;garageId&quot;: &quot;3a91bb79-af4b-4ab6-8f35-970307a15183&quot;,&#xd;
        &quot;assetTenant&quot;: null,&#xd;
        &quot;assetOwner&quot;: null,&#xd;
        &quot;assetIP&quot;: null,&#xd;
        &quot;assetType&quot;: &quot;CHARGER&quot;,&#xd;
        &quot;createdTime&quot;: null,&#xd;
        &quot;lastModifiedTime&quot;: null,&#xd;
        &quot;customerAcceptanceDate&quot;: null,&#xd;
        &quot;provisionDate&quot;: null,&#xd;
        &quot;chargerSerialNumber&quot;: &quot;00120c2df6a50a01&quot;,&#xd;
        &quot;chargerFirmwareVersion&quot;: null,&#xd;
        &quot;lastSoftwareUpdate&quot;: null,&#xd;
        &quot;chargerName&quot;: &quot;KA Shop 13&quot;,&#xd;
        &quot;chargerVendor&quot;: &quot;Proterra&quot;,&#xd;
        &quot;chargerModel&quot;: &quot;Proterra-PCS-60&quot;,&#xd;
        &quot;chargerSpecSheetLink&quot;: null,&#xd;
        &quot;chargerType&quot;: &quot;CCS 1.0&quot;,&#xd;
        &quot;maxCurrent&quot;: null,&#xd;
        &quot;maxVoltage&quot;: null,&#xd;
        &quot;chargerConfiguration&quot;: null,&#xd;
        &quot;ocppId&quot;: &quot;00120c2df6a50a01&quot;,&#xd;
        &quot;timezone&quot;: &quot;America/Denver&quot;,&#xd;
        &quot;mfgDate&quot;: null,&#xd;
        &quot;chargerSpec&quot;: null,&#xd;
        &quot;chargerLocation&quot;: {&#xd;
          &quot;addressId&quot;: &quot;b4a60298-de2f-4b5d-b191-0fb6c6226694&quot;,&#xd;
          &quot;addressAbbreviation&quot;: null,&#xd;
          &quot;addressLine1&quot;: &quot;12403 Fort Rd NW, Edmonton, AB T5B 2B7, Canada&quot;,&#xd;
          &quot;addressLine2&quot;: null,&#xd;
          &quot;city&quot;: &quot;Edmonton&quot;,&#xd;
          &quot;state&quot;: null,&#xd;
          &quot;zipCode&quot;: null,&#xd;
          &quot;country&quot;: null,&#xd;
          &quot;latitude&quot;: 53.5789232,&#xd;
          &quot;longitude&quot;: -113.4565009&#xd;
        },&#xd;
        &quot;meter&quot;: {&#xd;
          &quot;meterId&quot;: &quot;3904dea5-c890-4ea6-9507-a1c3f8bdd551&quot;,&#xd;
          &quot;meterSerialNumber&quot;: null,&#xd;
          &quot;meterType&quot;: null,&#xd;
          &quot;meterName&quot;: null,&#xd;
          &quot;meterLocation&quot;: null&#xd;
        },&#xd;
        &quot;dispensers&quot;: [],&#xd;
        &quot;connectivities&quot;: [],&#xd;
        &quot;excludedFromChargePlan&quot;: null,&#xd;
        &quot;customerChargerName&quot;: null,&#xd;
        &quot;mfgLocation&quot;: null,&#xd;
        &quot;cradlePointSerialNumber&quot;: &quot;&quot;,&#xd;
        &quot;specialLocationOfCharger&quot;: null,&#xd;
        &quot;cellularServiceProvider&quot;: null,&#xd;
        &quot;cellularSIMNumber&quot;: null,&#xd;
        &quot;cellularIMEI&quot;: null,&#xd;
        &quot;cellularIMSI&quot;: null,&#xd;
        &quot;cellularMAC&quot;: null,&#xd;
        &quot;cellularIP&quot;: &quot;&quot;,&#xd;
        &quot;cellularPhoneNum&quot;: null,&#xd;
        &quot;cellularAPN&quot;: null,&#xd;
        &quot;cellularICCID&quot;: &quot;&quot;,&#xd;
        &quot;vendorId&quot;: &quot;EMBC 003&quot;,&#xd;
        &quot;specificChargerLocation&quot;: &quot;Shop&quot;,&#xd;
        &quot;ocppMultiplexerServers&quot;: [],&#xd;
        &quot;chargerAllowedToTalkToMultiplexer&quot;: false&#xd;
      }&#xd;
    },&#xd;
    {&#xd;
      &quot;linkId&quot;: &quot;894b3209-8a12-4272-adfa-987d913f770a&quot;,&#xd;
      &quot;assetId&quot;: &quot;b4c04864-0623-4361-977a-390c00ad97b2&quot;,&#xd;
      &quot;chargePlanId&quot;: &quot;b10fd46d-19c7-4ca7-b617-a38ff799ae63&quot;,&#xd;
      &quot;charger&quot;: {&#xd;
        &quot;assetId&quot;: &quot;b4c04864-0623-4361-977a-390c00ad97b2&quot;,&#xd;
        &quot;garageId&quot;: &quot;3a91bb79-af4b-4ab6-8f35-970307a15183&quot;,&#xd;
        &quot;assetTenant&quot;: null,&#xd;
        &quot;assetOwner&quot;: null,&#xd;
        &quot;assetIP&quot;: null,&#xd;
        &quot;assetType&quot;: &quot;CHARGER&quot;,&#xd;
        &quot;createdTime&quot;: null,&#xd;
        &quot;lastModifiedTime&quot;: 1602058719000,&#xd;
        &quot;customerAcceptanceDate&quot;: null,&#xd;
        &quot;provisionDate&quot;: null,&#xd;
        &quot;chargerSerialNumber&quot;: &quot;00120C2DF6B05901&quot;,&#xd;
        &quot;chargerFirmwareVersion&quot;: null,&#xd;
        &quot;lastSoftwareUpdate&quot;: null,&#xd;
        &quot;chargerName&quot;: &quot;KA Shop 11&quot;,&#xd;
        &quot;chargerVendor&quot;: &quot;Proterra&quot;,&#xd;
        &quot;chargerModel&quot;: &quot;Proterra-PCS-60&quot;,&#xd;
        &quot;chargerSpecSheetLink&quot;: null,&#xd;
        &quot;chargerType&quot;: &quot;CCS 1.0&quot;,&#xd;
        &quot;maxCurrent&quot;: null,&#xd;
        &quot;maxVoltage&quot;: null,&#xd;
        &quot;chargerConfiguration&quot;: null,&#xd;
        &quot;ocppId&quot;: &quot;00120C2DF6B05901&quot;,&#xd;
        &quot;timezone&quot;: &quot;America/Denver&quot;,&#xd;
        &quot;mfgDate&quot;: null,&#xd;
        &quot;chargerSpec&quot;: null,&#xd;
        &quot;chargerLocation&quot;: {&#xd;
          &quot;addressId&quot;: &quot;4f2931ad-f445-4775-be6c-20e4eee79feb&quot;,&#xd;
          &quot;addressAbbreviation&quot;: null,&#xd;
          &quot;addressLine1&quot;: &quot;12403 Fort Rd NW, Edmonton, AB T5B 2B7, Canada&quot;,&#xd;
          &quot;addressLine2&quot;: null,&#xd;
          &quot;city&quot;: &quot;Edmonton&quot;,&#xd;
          &quot;state&quot;: null,&#xd;
          &quot;zipCode&quot;: null,&#xd;
          &quot;country&quot;: null,&#xd;
          &quot;latitude&quot;: 53.5789232,&#xd;
          &quot;longitude&quot;: -113.4565009&#xd;
        },&#xd;
        &quot;meter&quot;: {&#xd;
          &quot;meterId&quot;: &quot;ea9677ab-0171-4194-914e-476834a85862&quot;,&#xd;
          &quot;meterSerialNumber&quot;: null,&#xd;
          &quot;meterType&quot;: null,&#xd;
          &quot;meterName&quot;: null,&#xd;
          &quot;meterLocation&quot;: null&#xd;
        },&#xd;
        &quot;dispensers&quot;: [],&#xd;
        &quot;connectivities&quot;: [],&#xd;
        &quot;excludedFromChargePlan&quot;: null,&#xd;
        &quot;customerChargerName&quot;: null,&#xd;
        &quot;mfgLocation&quot;: null,&#xd;
        &quot;cradlePointSerialNumber&quot;: &quot;&quot;,&#xd;
        &quot;specialLocationOfCharger&quot;: null,&#xd;
        &quot;cellularServiceProvider&quot;: null,&#xd;
        &quot;cellularSIMNumber&quot;: null,&#xd;
        &quot;cellularIMEI&quot;: null,&#xd;
        &quot;cellularIMSI&quot;: null,&#xd;
        &quot;cellularMAC&quot;: null,&#xd;
        &quot;cellularIP&quot;: &quot;&quot;,&#xd;
        &quot;cellularPhoneNum&quot;: null,&#xd;
        &quot;cellularAPN&quot;: null,&#xd;
        &quot;cellularICCID&quot;: &quot;&quot;,&#xd;
        &quot;vendorId&quot;: &quot;EMBC 005&quot;,&#xd;
        &quot;specificChargerLocation&quot;: &quot;Shop&quot;,&#xd;
        &quot;ocppMultiplexerServers&quot;: [],&#xd;
        &quot;chargerAllowedToTalkToMultiplexer&quot;: false&#xd;
      }&#xd;
    },&#xd;
    {&#xd;
      &quot;linkId&quot;: &quot;8e30406d-502c-40bc-aed6-9457676f002f&quot;,&#xd;
      &quot;assetId&quot;: &quot;57edc7cd-912b-44f7-bd9f-eeb6226ce58d&quot;,&#xd;
      &quot;chargePlanId&quot;: &quot;b10fd46d-19c7-4ca7-b617-a38ff799ae63&quot;,&#xd;
      &quot;charger&quot;: {&#xd;
        &quot;assetId&quot;: &quot;57edc7cd-912b-44f7-bd9f-eeb6226ce58d&quot;,&#xd;
        &quot;garageId&quot;: &quot;8cbc5a33-1940-47c3-b3d2-a884a0bd6a1f&quot;,&#xd;
        &quot;assetTenant&quot;: null,&#xd;
        &quot;assetOwner&quot;: null,&#xd;
        &quot;assetIP&quot;: null,&#xd;
        &quot;assetType&quot;: &quot;CHARGER&quot;,&#xd;
        &quot;createdTime&quot;: null,&#xd;
        &quot;lastModifiedTime&quot;: 1601386117000,&#xd;
        &quot;customerAcceptanceDate&quot;: null,&#xd;
        &quot;provisionDate&quot;: null,&#xd;
        &quot;chargerSerialNumber&quot;: &quot;NAMHVC150-US1-1619-974&quot;,&#xd;
        &quot;chargerFirmwareVersion&quot;: null,&#xd;
        &quot;lastSoftwareUpdate&quot;: null,&#xd;
        &quot;chargerName&quot;: &quot;CENT 36-2&quot;,&#xd;
        &quot;chargerVendor&quot;: &quot;ABB&quot;,&#xd;
        &quot;chargerModel&quot;: &quot;HVC-150PD&quot;,&#xd;
        &quot;chargerSpecSheetLink&quot;: null,&#xd;
        &quot;chargerType&quot;: &quot;Pantograph&quot;,&#xd;
        &quot;maxCurrent&quot;: null,&#xd;
        &quot;maxVoltage&quot;: null,&#xd;
        &quot;chargerConfiguration&quot;: null,&#xd;
        &quot;ocppId&quot;: &quot;NAMHVC150-US1-1619-974&quot;,&#xd;
        &quot;timezone&quot;: &quot;America/Denver&quot;,&#xd;
        &quot;mfgDate&quot;: null,&#xd;
        &quot;chargerSpec&quot;: null,&#xd;
        &quot;chargerLocation&quot;: {&#xd;
          &quot;addressId&quot;: &quot;cc1fb5bb-7562-4a63-96e5-b8532763ac21&quot;,&#xd;
          &quot;addressAbbreviation&quot;: null,&#xd;
          &quot;addressLine1&quot;: &quot;15520 Ellerslie Rd SW, Edmonton, AB T6W 1A4, Canada&quot;,&#xd;
          &quot;addressLine2&quot;: null,&#xd;
          &quot;city&quot;: &quot;Edmonton&quot;,&#xd;
          &quot;state&quot;: null,&#xd;
          &quot;zipCode&quot;: null,&#xd;
          &quot;country&quot;: null,&#xd;
          &quot;latitude&quot;: 53.4260169,&#xd;
          &quot;longitude&quot;: -113.5867352&#xd;
        },&#xd;
        &quot;meter&quot;: {&#xd;
          &quot;meterId&quot;: &quot;15d64d6e-16b7-4aa7-8a27-1a018cc64c7b&quot;,&#xd;
          &quot;meterSerialNumber&quot;: null,&#xd;
          &quot;meterType&quot;: null,&#xd;
          &quot;meterName&quot;: null,&#xd;
          &quot;meterLocation&quot;: null&#xd;
        },&#xd;
        &quot;dispensers&quot;: [],&#xd;
        &quot;connectivities&quot;: [],&#xd;
        &quot;excludedFromChargePlan&quot;: null,&#xd;
        &quot;customerChargerName&quot;: null,&#xd;
        &quot;mfgLocation&quot;: null,&#xd;
        &quot;cradlePointSerialNumber&quot;: &quot;&quot;,&#xd;
        &quot;specialLocationOfCharger&quot;: null,&#xd;
        &quot;cellularServiceProvider&quot;: null,&#xd;
        &quot;cellularSIMNumber&quot;: null,&#xd;
        &quot;cellularIMEI&quot;: null,&#xd;
        &quot;cellularIMSI&quot;: null,&#xd;
        &quot;cellularMAC&quot;: null,&#xd;
        &quot;cellularIP&quot;: &quot;&quot;,&#xd;
        &quot;cellularPhoneNum&quot;: null,&#xd;
        &quot;cellularAPN&quot;: null,&#xd;
        &quot;cellularICCID&quot;: &quot;&quot;,&#xd;
        &quot;vendorId&quot;: &quot;Centennial_Charger_002&quot;,&#xd;
        &quot;specificChargerLocation&quot;: &quot;Depot&quot;,&#xd;
        &quot;ocppMultiplexerServers&quot;: [],&#xd;
        &quot;chargerAllowedToTalkToMultiplexer&quot;: false&#xd;
      }&#xd;
    },&#xd;
    {&#xd;
      &quot;linkId&quot;: &quot;90594585-4514-4758-8466-525a4993c70b&quot;,&#xd;
      &quot;assetId&quot;: &quot;ce414788-a1b3-4b89-9ea0-040747f84834&quot;,&#xd;
      &quot;chargePlanId&quot;: &quot;b10fd46d-19c7-4ca7-b617-a38ff799ae63&quot;,&#xd;
      &quot;charger&quot;: {&#xd;
        &quot;assetId&quot;: &quot;ce414788-a1b3-4b89-9ea0-040747f84834&quot;,&#xd;
        &quot;garageId&quot;: &quot;3a91bb79-af4b-4ab6-8f35-970307a15183&quot;,&#xd;
        &quot;assetTenant&quot;: null,&#xd;
        &quot;assetOwner&quot;: null,&#xd;
        &quot;assetIP&quot;: null,&#xd;
        &quot;assetType&quot;: &quot;CHARGER&quot;,&#xd;
        &quot;createdTime&quot;: null,&#xd;
        &quot;lastModifiedTime&quot;: null,&#xd;
        &quot;customerAcceptanceDate&quot;: null,&#xd;
        &quot;provisionDate&quot;: null,&#xd;
        &quot;chargerSerialNumber&quot;: &quot;00120c2df6905e01&quot;,&#xd;
        &quot;chargerFirmwareVersion&quot;: null,&#xd;
        &quot;lastSoftwareUpdate&quot;: null,&#xd;
        &quot;chargerName&quot;: &quot;KA Shop 12&quot;,&#xd;
        &quot;chargerVendor&quot;: &quot;Proterra&quot;,&#xd;
        &quot;chargerModel&quot;: &quot;Proterra-PCS-60&quot;,&#xd;
        &quot;chargerSpecSheetLink&quot;: null,&#xd;
        &quot;chargerType&quot;: &quot;CCS 1.0&quot;,&#xd;
        &quot;maxCurrent&quot;: null,&#xd;
        &quot;maxVoltage&quot;: null,&#xd;
        &quot;chargerConfiguration&quot;: null,&#xd;
        &quot;ocppId&quot;: &quot;00120c2df6905e01&quot;,&#xd;
        &quot;timezone&quot;: &quot;America/Denver&quot;,&#xd;
        &quot;mfgDate&quot;: null,&#xd;
        &quot;chargerSpec&quot;: null,&#xd;
        &quot;chargerLocation&quot;: {&#xd;
          &quot;addressId&quot;: &quot;727ab7cd-e99d-4029-9e45-49fb59d60b3f&quot;,&#xd;
          &quot;addressAbbreviation&quot;: null,&#xd;
          &quot;addressLine1&quot;: &quot;12403 Fort Rd NW, Edmonton, AB T5B 2B7, Canada&quot;,&#xd;
          &quot;addressLine2&quot;: null,&#xd;
          &quot;city&quot;: &quot;Edmonton&quot;,&#xd;
          &quot;state&quot;: null,&#xd;
          &quot;zipCode&quot;: null,&#xd;
          &quot;country&quot;: null,&#xd;
          &quot;latitude&quot;: 53.5789232,&#xd;
          &quot;longitude&quot;: -113.4565009&#xd;
        },&#xd;
        &quot;meter&quot;: {&#xd;
          &quot;meterId&quot;: &quot;b0de3777-a79e-45f9-babd-a5092b7bcf03&quot;,&#xd;
          &quot;meterSerialNumber&quot;: null,&#xd;
          &quot;meterType&quot;: null,&#xd;
          &quot;meterName&quot;: null,&#xd;
          &quot;meterLocation&quot;: null&#xd;
        },&#xd;
        &quot;dispensers&quot;: [],&#xd;
        &quot;connectivities&quot;: [],&#xd;
        &quot;excludedFromChargePlan&quot;: null,&#xd;
        &quot;customerChargerName&quot;: null,&#xd;
        &quot;mfgLocation&quot;: null,&#xd;
        &quot;cradlePointSerialNumber&quot;: &quot;&quot;,&#xd;
        &quot;specialLocationOfCharger&quot;: null,&#xd;
        &quot;cellularServiceProvider&quot;: null,&#xd;
        &quot;cellularSIMNumber&quot;: null,&#xd;
        &quot;cellularIMEI&quot;: null,&#xd;
        &quot;cellularIMSI&quot;: null,&#xd;
        &quot;cellularMAC&quot;: null,&#xd;
        &quot;cellularIP&quot;: &quot;&quot;,&#xd;
        &quot;cellularPhoneNum&quot;: null,&#xd;
        &quot;cellularAPN&quot;: null,&#xd;
        &quot;cellularICCID&quot;: &quot;&quot;,&#xd;
        &quot;vendorId&quot;: &quot;EMBC 004&quot;,&#xd;
        &quot;specificChargerLocation&quot;: &quot;Shop&quot;,&#xd;
        &quot;ocppMultiplexerServers&quot;: [],&#xd;
        &quot;chargerAllowedToTalkToMultiplexer&quot;: false&#xd;
      }&#xd;
    },&#xd;
    {&#xd;
      &quot;linkId&quot;: &quot;ad4592f1-d22b-4329-bbe3-bb59b0e4b4e6&quot;,&#xd;
      &quot;assetId&quot;: &quot;99474eaa-7f44-4744-ad30-f4faa109ca3b&quot;,&#xd;
      &quot;chargePlanId&quot;: &quot;b10fd46d-19c7-4ca7-b617-a38ff799ae63&quot;,&#xd;
      &quot;charger&quot;: {&#xd;
        &quot;assetId&quot;: &quot;99474eaa-7f44-4744-ad30-f4faa109ca3b&quot;,&#xd;
        &quot;garageId&quot;: &quot;8cbc5a33-1940-47c3-b3d2-a884a0bd6a1f&quot;,&#xd;
        &quot;assetTenant&quot;: null,&#xd;
        &quot;assetOwner&quot;: null,&#xd;
        &quot;assetIP&quot;: null,&#xd;
        &quot;assetType&quot;: &quot;CHARGER&quot;,&#xd;
        &quot;createdTime&quot;: null,&#xd;
        &quot;lastModifiedTime&quot;: null,&#xd;
        &quot;customerAcceptanceDate&quot;: null,&#xd;
        &quot;provisionDate&quot;: null,&#xd;
        &quot;chargerSerialNumber&quot;: &quot;NAMHVC150-US1-1619-915&quot;,&#xd;
        &quot;chargerFirmwareVersion&quot;: null,&#xd;
        &quot;lastSoftwareUpdate&quot;: null,&#xd;
        &quot;chargerName&quot;: &quot;CENT 36-11&quot;,&#xd;
        &quot;chargerVendor&quot;: &quot;ABB&quot;,&#xd;
        &quot;chargerModel&quot;: &quot;HVC-150PD&quot;,&#xd;
        &quot;chargerSpecSheetLink&quot;: null,&#xd;
        &quot;chargerType&quot;: &quot;Pantograph&quot;,&#xd;
        &quot;maxCurrent&quot;: null,&#xd;
        &quot;maxVoltage&quot;: null,&#xd;
        &quot;chargerConfiguration&quot;: null,&#xd;
        &quot;ocppId&quot;: &quot;NAMHVC150-US1-1619-915&quot;,&#xd;
        &quot;timezone&quot;: &quot;America/Denver&quot;,&#xd;
        &quot;mfgDate&quot;: null,&#xd;
        &quot;chargerSpec&quot;: null,&#xd;
        &quot;chargerLocation&quot;: null,&#xd;
        &quot;meter&quot;: {&#xd;
          &quot;meterId&quot;: &quot;91b4c36f-532d-4012-89d2-2b3fe8e91a2e&quot;,&#xd;
          &quot;meterSerialNumber&quot;: null,&#xd;
          &quot;meterType&quot;: null,&#xd;
          &quot;meterName&quot;: null,&#xd;
          &quot;meterLocation&quot;: null&#xd;
        },&#xd;
        &quot;dispensers&quot;: [],&#xd;
        &quot;connectivities&quot;: [],&#xd;
        &quot;excludedFromChargePlan&quot;: null,&#xd;
        &quot;customerChargerName&quot;: null,&#xd;
        &quot;mfgLocation&quot;: null,&#xd;
        &quot;cradlePointSerialNumber&quot;: &quot;&quot;,&#xd;
        &quot;specialLocationOfCharger&quot;: null,&#xd;
        &quot;cellularServiceProvider&quot;: null,&#xd;
        &quot;cellularSIMNumber&quot;: null,&#xd;
        &quot;cellularIMEI&quot;: null,&#xd;
        &quot;cellularIMSI&quot;: null,&#xd;
        &quot;cellularMAC&quot;: null,&#xd;
        &quot;cellularIP&quot;: &quot;&quot;,&#xd;
        &quot;cellularPhoneNum&quot;: null,&#xd;
        &quot;cellularAPN&quot;: null,&#xd;
        &quot;cellularICCID&quot;: &quot;&quot;,&#xd;
        &quot;vendorId&quot;: &quot;Centennial_Charger_011&quot;,&#xd;
        &quot;specificChargerLocation&quot;: &quot;Depot&quot;,&#xd;
        &quot;ocppMultiplexerServers&quot;: [],&#xd;
        &quot;chargerAllowedToTalkToMultiplexer&quot;: false&#xd;
      }&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/chargeplans/${NEW_CHARGE_PLAN_ID}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/chargeplans/chargerassociations" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&#xd;
  &quot;57b6e734-a7a6-4b81-9a2f-59b7ea54a5b1&quot;,&#xd;
  &quot;99474eaa-7f44-4744-ad30-f4faa109ca3b&quot;,&#xd;
  &quot;57edc7cd-912b-44f7-bd9f-eeb6226ce58d&quot;,&#xd;
  &quot;5add0996-66a4-4a9f-b22f-5514348e00aa&quot;,&#xd;
  &quot;f9f0c2b6-5e7a-4d3e-8241-07f6c971a9c6&quot;,&#xd;
  &quot;c9070ce3-734c-4616-8b3b-a0f5687969ad&quot;,&#xd;
  &quot;a4e2c36d-918c-472c-8f4d-0184566ee31e&quot;,&#xd;
  &quot;b4c04864-0623-4361-977a-390c00ad97b2&quot;,&#xd;
  &quot;ce414788-a1b3-4b89-9ea0-040747f84834&quot;,&#xd;
  &quot;b2ce0c87-a2f9-418e-88bb-ce3dcec3f76d&quot;&#xd;
]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/chargeplans/${NEW_CHARGE_PLAN_ID}/chargerassociations?autoRemoveChargers=true</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE /tenants/chargeplans/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/chargeplans/${NEW_CHARGE_PLAN_ID}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/chargers/aggregateddata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="start" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">start</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,-P1D,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">Power_Active_Import,Power_Offered,SoC</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aggIntervalInS" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">aggIntervalInS</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/chargers/${ABB_CHARGER_OCPP_ID}/aggregateddata</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/chargers/optimizationresponses" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="start" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">start</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,-P1D,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/chargers/${ABB_CHARGER_ASSET_ID}/optimizationresponses</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/chargerdata" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;_source&quot;: [&#xd;
    &quot;request.*&quot;,&#xd;
    &quot;response.*&quot;&#xd;
  ],&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;filter&quot;: [&#xd;
        {&#xd;
          &quot;range&quot;: {&#xd;
            &quot;@timestamp&quot;: {&#xd;
              &quot;gte&quot;: &quot;${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,-P1D,,)}&quot;,&#xd;
              &quot;lt&quot;: &quot;${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,,,)}&quot;&#xd;
            }&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;term&quot;: {&#xd;
            &quot;chargerName&quot;: &quot;${ABB_CHARGER_OCPP_ID}&quot;&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;term&quot;: {&#xd;
            &quot;OCPPRequestTypes&quot;: &quot;setChargingProfile&quot;&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;sort&quot;: [&#xd;
    {&#xd;
      &quot;@timestamp&quot;: {&#xd;
        &quot;order&quot;: &quot;desc&quot;&#xd;
      }&#xd;
    }&#xd;
  ],&#xd;
  &quot;size&quot;: 1000&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/chargerdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CREATE /tenants/vehicles" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;garageId&quot;: null,&#xd;
  &quot;vehicleName1&quot;: &quot;ETS - JMX${__timeShift(MMddHHmmss,,,,)}&quot;,&#xd;
  &quot;vehicleMake&quot;: &quot;Proterra&quot;,&#xd;
  &quot;modelConfig&quot;: &quot;E2-2d&quot;,&#xd;
  &quot;vehicleMfgDate&quot;: &quot;${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;,,-P365D,,)}&quot;,&#xd;
  &quot;weeklyReportFlag&quot;: false,&#xd;
  &quot;nrelReportFlag&quot;: false,&#xd;
  &quot;timezone&quot;: &quot;America/New_York&quot;,&#xd;
  &quot;gatewaySN&quot;: &quot;&quot;,&#xd;
  &quot;vehicleVIN&quot;: &quot;1M9TH16J0JL816280&quot;,&#xd;
  &quot;customerFleetName&quot;: &quot;ETS&quot;,&#xd;
  &quot;vehicleModel&quot;: &quot;E2&quot;,&#xd;
  &quot;partNum&quot;: &quot;26118&quot;,&#xd;
  &quot;batteryCapacity&quot;: &quot;660&quot;,&#xd;
  &quot;vehicleMfgLocation&quot;: &quot;City of Industry, CA, USA&quot;,&#xd;
  &quot;vehicleName2&quot;: &quot;JMX-${__timeShift(MMddHHmmss,,,,)}&quot;,&#xd;
  &quot;address&quot;: &quot;&quot;,&#xd;
  &quot;inService&quot;: false,&#xd;
  &quot;vehicleDepotLocation&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/vehicles</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET NEW VEHICLE ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">NEW_VEHICLE_ID; NEW_VEHICLE_NAME1; NEW_VEHICLE_NAME2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.assetId; $.vehicleName1; $.vehicleName2</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND; NOT_FOUND; NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UPDATE /tenants/vehicles/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;vehicleVIN&quot;: &quot;1M9TH16J0JL816280&quot;,&#xd;
  &quot;vehicleName1&quot;: &quot;${NEW_VEHICLE_NAME1}&quot;,&#xd;
  &quot;customerFleetName&quot;: &quot;ETS&quot;,&#xd;
  &quot;vehicleMake&quot;: &quot;Proterra&quot;,&#xd;
  &quot;vehicleModel&quot;: &quot;E2&quot;,&#xd;
  &quot;modelConfig&quot;: &quot;E2-2d&quot;,&#xd;
  &quot;partNum&quot;: &quot;26118&quot;,&#xd;
  &quot;batteryCapacity&quot;: &quot;660&quot;,&#xd;
  &quot;vehicleMfgDate&quot;: null,&#xd;
  &quot;vehicleMfgLocation&quot;: &quot;City of Industry, CA, USA&quot;,&#xd;
  &quot;weeklyReportFlag&quot;: false,&#xd;
  &quot;nrelReportFlag&quot;: false,&#xd;
  &quot;timezone&quot;: &quot;America/New_York&quot;,&#xd;
  &quot;gatewaySN&quot;: &quot;&quot;,&#xd;
  &quot;vehicleName2&quot;: &quot;${NEW_VEHICLE_NAME2}&quot;,&#xd;
  &quot;address&quot;: &quot;15520 Ellerslie Rd SW, Edmonton, AB T6W 1A4, Canada&quot;,&#xd;
  &quot;garageId&quot;: &quot;&quot;,&#xd;
  &quot;inService&quot;: false,&#xd;
  &quot;vehicleDepotLocation&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/vehicles/${NEW_VEHICLE_ID}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE /assets/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/assets/${NEW_VEHICLE_ID}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CREATE /tenants/chargers" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;chargerVendor&quot;: &quot;Proterra&quot;,&#xd;
  &quot;chargerModel&quot;: &quot;Proterra-PCS-60&quot;,&#xd;
  &quot;chargerType&quot;: &quot;Pantograph&quot;,&#xd;
  &quot;chargerName&quot;: &quot;ETS - JMX${__timeShift(MMddHHmmss,,,,)}&quot;,&#xd;
  &quot;chargerSerialNumber&quot;: &quot;00120C2DF6A01901&quot;,&#xd;
  &quot;cradlePointSerialNumber&quot;: &quot;&quot;,&#xd;
  &quot;cellularICCID&quot;: &quot;&quot;,&#xd;
  &quot;cellularIP&quot;: &quot;&quot;,&#xd;
  &quot;vendorId&quot;: &quot;&quot;,&#xd;
  &quot;provisionDate&quot;: null,&#xd;
  &quot;customerAcceptanceDate&quot;: null,&#xd;
  &quot;garageId&quot;: &quot;${CENT_GARAGE_ID}&quot;,&#xd;
  &quot;specificChargerLocation&quot;: &quot;&quot;,&#xd;
  &quot;address&quot;: &quot;&quot;,&#xd;
  &quot;timezone&quot;: &quot;America/New_York&quot;,&#xd;
  &quot;ocppId&quot;: &quot;00120C2DF6A01901&quot;,&#xd;
  &quot;name&quot;: &quot;JMX - ${__timeShift(MMddHHmmss,,,,)}&quot;,&#xd;
  &quot;chargerLocation&quot;: null,&#xd;
  &quot;meter&quot;: {}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/chargers</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET NEW CHARGER ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">NEW_CHARGER_ID; NEW_CHARGER_NAME</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.assetId; $.chargerName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND; NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UPDATE /tenants/chargers/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;chargerVendor&quot;: &quot;Proterra&quot;,&#xd;
  &quot;chargerModel&quot;: &quot;Proterra-PCS-60&quot;,&#xd;
  &quot;chargerType&quot;: &quot;Pantograph&quot;,&#xd;
  &quot;chargerName&quot;: &quot;${NEW_CHARGER_NAME}&quot;,&#xd;
  &quot;chargerSerialNumber&quot;: &quot;00120C2DF6A01901&quot;,&#xd;
  &quot;cradlePointSerialNumber&quot;: &quot;&quot;,&#xd;
  &quot;cellularICCID&quot;: &quot;&quot;,&#xd;
  &quot;cellularIP&quot;: &quot;&quot;,&#xd;
  &quot;vendorId&quot;: &quot;&quot;,&#xd;
  &quot;provisionDate&quot;: null,&#xd;
  &quot;customerAcceptanceDate&quot;: null,&#xd;
  &quot;garageId&quot;: &quot;${CENT_GARAGE_ID}&quot;,&#xd;
  &quot;specificChargerLocation&quot;: &quot;&quot;,&#xd;
  &quot;address&quot;: &quot;&quot;,&#xd;
  &quot;timezone&quot;: &quot;America/New_York&quot;,&#xd;
  &quot;ocppId&quot;: &quot;00120C2DF6A01901&quot;,&#xd;
  &quot;name&quot;: &quot;${NEW_CHARGER_NAME}&quot;,&#xd;
  &quot;chargerLocation&quot;: null,&#xd;
  &quot;meter&quot;: {}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/chargers/${NEW_CHARGER_ID}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE /tenants/chargers/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/chargers/${NEW_CHARGER_ID}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CREATE /tenants" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;orgType&quot;: &quot;Transit Agency&quot;,&#xd;
  &quot;orgName&quot;: &quot;JMX${__timeShift(MMddHHmmss,,,,)} - Transit Agency&quot;,&#xd;
  &quot;internalAcronym&quot;: &quot;JMXTA${__timeShift(MMddHHmmss,,,,)}&quot;,&#xd;
  &quot;address&quot;: {&#xd;
    &quot;addressLine1&quot;: &quot;4900 Meridian St N, Huntsville, AL 35810, USA&quot;,&#xd;
    &quot;city&quot;: &quot;Huntsville&quot;,&#xd;
    &quot;latitude&quot;: 34.7936663,&#xd;
    &quot;longitude&quot;: -86.57152909999999&#xd;
  },&#xd;
  &quot;systemOfMeasure&quot;: &quot;IMPERIAL&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET NEW TENANT ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">NEW_TENANT_ID; NEW_TENANT_NAME; NEW_TENANT_FLEET_NAME</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.orgId; $.orgName; $.internalAcronym</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND; NOT_FOUND; NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UPDATE /tenants/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;orgType&quot;: &quot;Transit Agency&quot;,&#xd;
  &quot;orgName&quot;: &quot;${NEW_TENANT_NAME}&quot;,&#xd;
  &quot;internalAcronym&quot;: &quot;${NEW_TENANT_FLEET_NAME}&quot;,&#xd;
  &quot;address&quot;: null,&#xd;
  &quot;systemOfMeasure&quot;: &quot;IMPERIAL&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${NEW_TENANT_ID}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE /tenants/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${NEW_TENANT_ID}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/tenantroles" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/ams/v1/tenants/${ETS_TENANT_ID}/tenantroles</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CREATE /tenants/tenantAdmins" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;firstName&quot;: &quot;Ajay&quot;,&#xd;
  &quot;lastName&quot;: &quot;JMX Admin - ${__timeShift(MMddHHmmss,,,,)}&quot;,&#xd;
  &quot;email&quot;: &quot;ajay.proterra2020+${TEST_ENV}_jmxadmin${__timeShift(MMddHHmmss,,,,)}@gmail.com&quot;,&#xd;
  &quot;address&quot;: {&#xd;
    &quot;addressLine1&quot;: &quot;15520 Ellerslie Rd SW, Edmonton, AB T6W 1A4, Canada&quot;&#xd;
  },&#xd;
  &quot;Kathleen Andrews&quot;: true,&#xd;
  &quot;Centennial&quot;: true,&#xd;
  &quot;garageId&quot;: &quot;${CENT_GARAGE_ID}&quot;,&#xd;
  &quot;assignedRole&quot;: null,&#xd;
  &quot;accessedGarageIds&quot;: [&#xd;
    &quot;${CENT_GARAGE_ID}&quot;,&#xd;
    &quot;${KATG_GARAGE_ID}&quot;&#xd;
  ],&#xd;
  &quot;defaultGarageId&quot;: &quot;${CENT_GARAGE_ID}&quot;,&#xd;
  &quot;phone&quot;: &quot;&quot;,&#xd;
  &quot;roleInformation&quot;: &quot;tenant_admin&quot;,&#xd;
  &quot;userRole&quot;: &quot;TENANT_ADMIN&quot;,&#xd;
  &quot;userName&quot;: &quot;ajay.proterra2020+${TEST_ENV}_jmxadmin${__timeShift(MMddHHmmss,,,,)}@gmail.com&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/tenantAdmins</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET NEW TENANT ADMIN ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">NEW_TENANT_ADMIN_ID; NEW_TENANT_ADMIN_LAST_NAME; NEW_TENANT_ADMIN_USER_NAME</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.userId; $.lastName; $.userName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND; NOT_FOUND; NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UPDATE /tenants/tenantusers/ssoUser/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;firstName&quot;: &quot;Ajay&quot;,&#xd;
  &quot;lastName&quot;: &quot;${NEW_TENANT_ADMIN_LAST_NAME}&quot;,&#xd;
  &quot;email&quot;: &quot;${NEW_TENANT_ADMIN_USER_NAME}&quot;,&#xd;
  &quot;address&quot;: {&#xd;
    &quot;addressLine1&quot;: &quot;15520 Ellerslie Rd SW, Edmonton, AB T6W 1A4, Canada&quot;&#xd;
  },&#xd;
  &quot;Kathleen Andrews&quot;: true,&#xd;
  &quot;Centennial&quot;: true,&#xd;
  &quot;garageId&quot;: &quot;${KATG_GARAGE_ID}&quot;,&#xd;
  &quot;assignedRole&quot;: {&#xd;
    &quot;assignRole&quot;: [&#xd;
      &quot;admin&quot;&#xd;
    ]&#xd;
  },&#xd;
  &quot;accessedGarageIds&quot;: [&#xd;
    &quot;${CENT_GARAGE_ID}&quot;,&#xd;
    &quot;${KATG_GARAGE_ID}&quot;&#xd;
  ],&#xd;
  &quot;defaultGarageId&quot;: &quot;${KATG_GARAGE_ID}&quot;,&#xd;
  &quot;phone&quot;: &quot;&quot;,&#xd;
  &quot;userName&quot;: &quot;${NEW_TENANT_ADMIN_USER_NAME}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/ams/v1/tenants/${ETS_TENANT_ID}/tenantusers/ssoUser/${NEW_TENANT_ADMIN_ID}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE /tenants/tenantAdmins/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/tenantAdmins/${NEW_TENANT_ADMIN_ID}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CREATE /tenants/tenantUsers" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;firstName&quot;: &quot;Ajay&quot;,&#xd;
  &quot;lastName&quot;: &quot;JMX User - ${__timeShift(MMddHHmmss,,,,)}&quot;,&#xd;
  &quot;email&quot;: &quot;ajay.proterra2020+${TEST_ENV}_jmxuser${__timeShift(MMddHHmmss,,,,)}@gmail.com&quot;,&#xd;
  &quot;address&quot;: {&#xd;
    &quot;addressLine1&quot;: &quot;15520 Ellerslie Rd SW, Edmonton, AB T6W 1A4, Canada&quot;&#xd;
  },&#xd;
  &quot;Kathleen Andrews&quot;: true,&#xd;
  &quot;Centennial&quot;: true,&#xd;
  &quot;garageId&quot;: &quot;${CENT_GARAGE_ID}&quot;,&#xd;
  &quot;assignedRole&quot;: null,&#xd;
  &quot;accessedGarageIds&quot;: [&#xd;
    &quot;${CENT_GARAGE_ID}&quot;,&#xd;
    &quot;${KATG_GARAGE_ID}&quot;&#xd;
  ],&#xd;
  &quot;defaultGarageId&quot;: &quot;${CENT_GARAGE_ID}&quot;,&#xd;
  &quot;phone&quot;: &quot;&quot;,&#xd;
  &quot;roleInformation&quot;: &quot;tenant_readonly&quot;,&#xd;
  &quot;userRole&quot;: &quot;END_USER&quot;,&#xd;
  &quot;userName&quot;: &quot;ajay.proterra2020+${TEST_ENV}_jmxuser${__timeShift(MMddHHmmss,,,,)}@gmail.com&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/tenantUsers</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET NEW TENANT USER ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">NEW_TENANT_USER_ID; NEW_TENANT_USER_LAST_NAME; NEW_TENANT_USER_USER_NAME</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.userId; $.lastName; $.userName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND; NOT_FOUND; NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UPDATE /tenants/tenantusers/ssoUser/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;firstName&quot;: &quot;Ajay&quot;,&#xd;
  &quot;lastName&quot;: &quot;${NEW_TENANT_USER_LAST_NAME}&quot;,&#xd;
  &quot;email&quot;: &quot;${NEW_TENANT_USER_USER_NAME}&quot;,&#xd;
  &quot;address&quot;: {&#xd;
    &quot;addressLine1&quot;: &quot;15520 Ellerslie Rd SW, Edmonton, AB T6W 1A4, Canada&quot;&#xd;
  },&#xd;
  &quot;Kathleen Andrews&quot;: true,&#xd;
  &quot;Centennial&quot;: true,&#xd;
  &quot;garageId&quot;: &quot;${KATG_GARAGE_ID}&quot;,&#xd;
  &quot;assignedRole&quot;: {&#xd;
    &quot;assignRole&quot;: [&#xd;
      &quot;read-only&quot;&#xd;
    ]&#xd;
  },&#xd;
  &quot;accessedGarageIds&quot;: [&#xd;
    &quot;${CENT_GARAGE_ID}&quot;,&#xd;
    &quot;${KATG_GARAGE_ID}&quot;&#xd;
  ],&#xd;
  &quot;defaultGarageId&quot;: &quot;${KATG_GARAGE_ID}&quot;,&#xd;
  &quot;phone&quot;: &quot;&quot;,&#xd;
  &quot;userName&quot;: &quot;${NEW_TENANT_USER_USER_NAME}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/ams/v1/tenants/${ETS_TENANT_ID}/tenantusers/ssoUser/${NEW_TENANT_USER_ID}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE /tenants/tenantUsers/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/tenantUsers/${NEW_TENANT_USER_ID}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UPDATE /internalUsers/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;firstName&quot;: &quot;Ajay&quot;,&#xd;
  &quot;middleName&quot;: &quot;&quot;,&#xd;
  &quot;lastName&quot;: &quot;Proterra Admin&quot;,&#xd;
  &quot;address&quot;: {&#xd;
    &quot;addressLine1&quot;: &quot;1815 Rollins Road Burlingame, CA 94010&quot;&#xd;
  },&#xd;
  &quot;phone&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/internalUsers/${CURRENT_PROTERRA_ADMIN_USER_ID}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PROTERRA_READONLY" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /cognitoLogin" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;userName&quot;: &quot;${PROTERRA_READONLY_USERNAME}&quot;,&#xd;
    &quot;userPassword&quot;: &quot;${PROTERRA_READONLY_PASSWORD}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/cognitoLogin</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET PROTERRA READONLY ACCESS TOKEN" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">PROTERRA_READONLY_ACCESS_TOKEN</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /glossary" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${GLOSSARY_ENV}/glossary</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /v1/ui/tabs" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/ams/v1/ui/tabs</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/counts/charger" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;filter&quot;: [&#xd;
        {&#xd;
          &quot;query_string&quot;: {&#xd;
            &quot;query&quot;: &quot;_exists_:request.errorCode AND NOT request.errorCode:NoError&quot;&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;query_string&quot;: {&#xd;
            &quot;query&quot;: &quot;assetDetails.internalAcronym:*&quot;&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;range&quot;: {&#xd;
            &quot;@timestamp&quot;: {&#xd;
              &quot;gte&quot;: &quot;now-7d&quot;,&#xd;
              &quot;lte&quot;: &quot;now&quot;&#xd;
            }&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;aggs&quot;: {&#xd;
    &quot;termAgg&quot;: {&#xd;
      &quot;terms&quot;: {&#xd;
        &quot;field&quot;: &quot;chargerName&quot;&#xd;
      },&#xd;
      &quot;aggs&quot;: {&#xd;
        &quot;uniqueErrorCount&quot;: {&#xd;
          &quot;cardinality&quot;: {&#xd;
            &quot;field&quot;: &quot;request.vendorErrorCode&quot;&#xd;
          }&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  },&#xd;
  &quot;size&quot;: 0&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/counts/charger</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/counts/bus" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;filter&quot;: [&#xd;
        {&#xd;
          &quot;query_string&quot;: {&#xd;
            &quot;query&quot;: &quot;resolved:false&quot;&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;query_string&quot;: {&#xd;
            &quot;query&quot;: &quot;busMetadata.fleetName:*&quot;&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;range&quot;: {&#xd;
            &quot;faultTimestamp&quot;: {&#xd;
              &quot;gte&quot;: &quot;now-7d&quot;,&#xd;
              &quot;lte&quot;: &quot;now&quot;&#xd;
            }&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;aggs&quot;: {&#xd;
    &quot;termAgg&quot;: {&#xd;
      &quot;terms&quot;: {&#xd;
        &quot;field&quot;: &quot;busMetadata.fleetName.keyword&quot;&#xd;
      }&#xd;
    }&#xd;
  },&#xd;
  &quot;size&quot;: 0&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/counts/bus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants?size=300" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">size</stringProp>
                  <stringProp name="Argument.value">300</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET TENANT ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">ETS_TENANT_ID; TBB_TENANT_ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.content[?(@.orgName==&apos;Edmonton Transit Service&apos;)].orgId; $.content[?(@.orgName==&apos;Thomas Built Buses, Inc&apos;)].orgId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND; NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/dashboarddata" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;filter&quot;: [&#xd;
        {&#xd;
          &quot;query_string&quot;: {&#xd;
            &quot;query&quot;: &quot;busMetadata.fleetName:*&quot;&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;range&quot;: {&#xd;
            &quot;reportStartDate&quot;: {&#xd;
              &quot;gte&quot;: &quot;2018-01-01&quot;&#xd;
            }&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;size&quot;: 0,&#xd;
  &quot;aggs&quot;: {&#xd;
    &quot;distance&quot;: {&#xd;
      &quot;extended_stats&quot;: {&#xd;
        &quot;field&quot;: &quot;distanceInMiles&quot;&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/dashboarddata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/dashboarddata" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;must&quot;: {&#xd;
        &quot;query_string&quot;: {&#xd;
          &quot;query&quot;: &quot;busMetadata.fleetName:*&quot;&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  },&#xd;
  &quot;size&quot;: 0,&#xd;
  &quot;aggs&quot;: {&#xd;
    &quot;histogram&quot;: {&#xd;
      &quot;date_histogram&quot;: {&#xd;
        &quot;field&quot;: &quot;reportEndDate&quot;,&#xd;
        &quot;interval&quot;: &quot;month&quot;&#xd;
      },&#xd;
      &quot;aggs&quot;: {&#xd;
        &quot;distance_over_time&quot;: {&#xd;
          &quot;sum&quot;: {&#xd;
            &quot;field&quot;: &quot;distanceInMiles&quot;&#xd;
          }&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/dashboarddata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/dashboarddata" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;must&quot;: {&#xd;
        &quot;query_string&quot;: {&#xd;
          &quot;query&quot;: &quot;busMetadata.fleetName:*&quot;&#xd;
        }&#xd;
      },&#xd;
      &quot;filter&quot;: [&#xd;
        {&#xd;
          &quot;range&quot;: {&#xd;
            &quot;reportStartDate&quot;: {&#xd;
              &quot;gte&quot;: &quot;now-8d&quot;&#xd;
            }&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;size&quot;: 0,&#xd;
  &quot;aggs&quot;: {&#xd;
    &quot;distance&quot;: {&#xd;
      &quot;extended_stats&quot;: {&#xd;
        &quot;field&quot;: &quot;distanceInMiles&quot;&#xd;
      }&#xd;
    },&#xd;
    &quot;energy&quot;: {&#xd;
      &quot;extended_stats&quot;: {&#xd;
        &quot;field&quot;: &quot;totalEnergyChargedInKWH&quot;&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/dashboarddata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /assets?size=300" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">size</stringProp>
                  <stringProp name="Argument.value">300</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/assets</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET ASSET IDs" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">ABB_CHARGER_ASSET_ID; ETS_BUS_ASSET_ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.content[?(@.ocppId==&apos;NAMHVC150-US1-1619-975&apos;)].assetId; $.content[?(@.vehicleVIN ==&apos;7JZTH13J7KS000151&apos;)].assetId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND; NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/trackSetups" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenantId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenantId</stringProp>
                  <stringProp name="Argument.value">${ETS_TENANT_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${CCSS_ENV}/v1/tenants/${ETS_TENANT_ID}/trackSetups</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET TRACK SETUP IDs" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">KATG_GARAGE_ID; CENT_GARAGE_ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.[?(@.customerGarageId==2)].trackSetupId; $.[?(@.customerGarageId==8)].trackSetupId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND; NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/buses/busDetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;BUS-DETAILS-${__UUID}&quot;,&#xd;
  &quot;busVins&quot;: [&#xd;
    &quot;7JZTH13JXKS000158&quot;,&#xd;
    &quot;7JZTH13J2KS000154&quot;,&#xd;
    &quot;7JZTH13J0LS000297&quot;,&#xd;
    &quot;7JZTH13J5KS000164&quot;,&#xd;
    &quot;7JZTH13J9KS000166&quot;,&#xd;
    &quot;7JZTH13J6KS000156&quot;,&#xd;
    &quot;7JZTH13J2KS000171&quot;,&#xd;
    &quot;7JZTH13J7KS000151&quot;,&#xd;
    &quot;7JZTH13J4LS000299&quot;,&#xd;
    &quot;7JZTH13J7LS000300&quot;,&#xd;
    &quot;7JZTH13JXLS000307&quot;,&#xd;
    &quot;7JZTH13J0LS000302&quot;,&#xd;
    &quot;7JZTH13J3LS000309&quot;,&#xd;
    &quot;7JZTH13J1KS000162&quot;,&#xd;
    &quot;7JZTH13J9KS000152&quot;,&#xd;
    &quot;7JZTH13J1LS000308&quot;,&#xd;
    &quot;7JZTH13J2LS000298&quot;,&#xd;
    &quot;7JZTH13JXKS000161&quot;,&#xd;
    &quot;7JZTH13J9LS000315&quot;,&#xd;
    &quot;7JZTH13J1KS000159&quot;,&#xd;
    &quot;7JZTH13J8KS000157&quot;,&#xd;
    &quot;7JZTH13J4KS000169&quot;,&#xd;
    &quot;7JZTH13J8LS000306&quot;,&#xd;
    &quot;7JZTH13J6LS000305&quot;,&#xd;
    &quot;7JZTH13J0KS000170&quot;,&#xd;
    &quot;7JZTH13J0KS000167&quot;,&#xd;
    &quot;7JZTH13J1LS000308&quot;,&#xd;
    &quot;7JZTH13J4KS000155&quot;,&#xd;
    &quot;7JZTH13J7KS000165&quot;,&#xd;
    &quot;7JZTH13J2LS000303&quot;,&#xd;
    &quot;7JZTH13J5LS000313&quot;,&#xd;
    &quot;7JZTH13J4LS000304&quot;,&#xd;
    &quot;7JZTH13J2KS000168&quot;,&#xd;
    &quot;7JZTH13J8KS000160&quot;,&#xd;
    &quot;7JZTH13J3LS000312&quot;,&#xd;
    &quot;7JZTH13JXLS000310&quot;,&#xd;
    &quot;7JZTH13J3KS000163&quot;,&#xd;
    &quot;7JZTH13J9LS000301&quot;,&#xd;
    &quot;7JZTH13J7LS000314&quot;,&#xd;
    &quot;7JZTH13J0KS000153&quot;,&#xd;
    &quot;7JZTH13J1LS000311&quot;&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/buses/busDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /ocpp-v16jw/chargers" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${OCPP_ENV}/v1/ocpp-v16jw/chargers</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /ocpp-v16jw/chargersiotecha" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${OCPP_ENV}/v1/ocpp-v16jw/chargersiotecha</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/chargerfaults" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;must&quot;: {&#xd;
        &quot;query_string&quot;: {&#xd;
          &quot;query&quot;: &quot;chargerName:${ABB_CHARGER_OCPP_ID}&quot;&#xd;
        }&#xd;
      },&#xd;
      &quot;filter&quot;: [&#xd;
        {&#xd;
          &quot;query_string&quot;: {&#xd;
            &quot;query&quot;: &quot;_exists_:request.errorCode AND NOT request.errorCode:NoError&quot;&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;range&quot;: {&#xd;
            &quot;@timestamp&quot;: {&#xd;
              &quot;gte&quot;: &quot;now-7d/d&quot;,&#xd;
              &quot;lt&quot;: &quot;now&quot;&#xd;
            }&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;sort&quot;: {&#xd;
    &quot;time&quot;: {&#xd;
      &quot;order&quot;: &quot;desc&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;size&quot;: 100&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/chargerfaults</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /internalUsers?size=300" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">size</stringProp>
                  <stringProp name="Argument.value">300</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/internalUsers</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET USER IDs" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">CURRENT_PROTERRA_READONLY_USER_ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.content[?(@.userName==&apos;${PROTERRA_READONLY_USERNAME}&apos;)].userId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /alerts?size=300" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">size</stringProp>
                  <stringProp name="Argument.value">300</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/alerts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CREATE /alerts" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;orgId&quot;: &quot;${ETS_TENANT_ID}&quot;,&#xd;
  &quot;userId&quot;: &quot;${CURRENT_PROTERRA_READONLY_USER_ID}&quot;,&#xd;
  &quot;userName&quot;: &quot;Ajay Proterra ReadOnly&quot;,&#xd;
  &quot;userEmail&quot;: &quot;${PROTERRA_READONLY_USERNAME}&quot;,&#xd;
  &quot;userPhone&quot;: &quot;&quot;,&#xd;
  &quot;busAlert&quot;: true,&#xd;
  &quot;busID&quot;: &quot;*&quot;,&#xd;
  &quot;busmonday&quot;: true,&#xd;
  &quot;bustuesday&quot;: true,&#xd;
  &quot;buswednesday&quot;: true,&#xd;
  &quot;busthursday&quot;: true,&#xd;
  &quot;busfriday&quot;: true,&#xd;
  &quot;bussaturday&quot;: true,&#xd;
  &quot;bussunday&quot;: true,&#xd;
  &quot;busAlertStartTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;busAlertStopTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;busEmailCritical&quot;: false,&#xd;
  &quot;busEmailError&quot;: false,&#xd;
  &quot;busEmailWarning&quot;: false,&#xd;
  &quot;busEmailInfo&quot;: false,&#xd;
  &quot;busSMSCritical&quot;: false,&#xd;
  &quot;busSMSError&quot;: false,&#xd;
  &quot;busSMSWarning&quot;: false,&#xd;
  &quot;busSMSInfo&quot;: false,&#xd;
  &quot;busPushCritical&quot;: false,&#xd;
  &quot;busPushError&quot;: false,&#xd;
  &quot;busPushWarning&quot;: false,&#xd;
  &quot;busPushInfo&quot;: false,&#xd;
  &quot;chargerAlert&quot;: true,&#xd;
  &quot;chargerID&quot;: &quot;*&quot;,&#xd;
  &quot;chargermonday&quot;: true,&#xd;
  &quot;chargertuesday&quot;: true,&#xd;
  &quot;chargerwednesday&quot;: true,&#xd;
  &quot;chargerthursday&quot;: true,&#xd;
  &quot;chargerfriday&quot;: true,&#xd;
  &quot;chargersaturday&quot;: true,&#xd;
  &quot;chargersunday&quot;: true,&#xd;
  &quot;chargerAlertStartTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;chargerAlertStopTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;chargerEmailCritical&quot;: true,&#xd;
  &quot;chargerEmailError&quot;: true,&#xd;
  &quot;chargerEmailWarning&quot;: true,&#xd;
  &quot;chargerEmailInfo&quot;: true,&#xd;
  &quot;chargerSMSCritical&quot;: false,&#xd;
  &quot;chargerSMSError&quot;: false,&#xd;
  &quot;chargerSMSWarning&quot;: false,&#xd;
  &quot;chargerSMSInfo&quot;: false,&#xd;
  &quot;chargerPushCritical&quot;: false,&#xd;
  &quot;chargerPushError&quot;: false,&#xd;
  &quot;chargerPushWarning&quot;: false,&#xd;
  &quot;chargerPushInfo&quot;: false,&#xd;
  &quot;ruleName&quot;: &quot;Ajay Suryavamshi_rule&quot;,&#xd;
  &quot;orgName&quot;: &quot;Edmonton Transit Service&quot;,&#xd;
  &quot;internalAcronym&quot;: &quot;ETS&quot;,&#xd;
  &quot;busName&quot;: &quot;All&quot;,&#xd;
  &quot;busAlertDays&quot;: [&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true&#xd;
  ],&#xd;
  &quot;busEmailNotification&quot;: 0,&#xd;
  &quot;busSMSNotification&quot;: 0,&#xd;
  &quot;busPushNotification&quot;: 0,&#xd;
  &quot;chargerName&quot;: &quot;All&quot;,&#xd;
  &quot;chargerAlertDays&quot;: [&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true&#xd;
  ],&#xd;
  &quot;chargerEmailNotification&quot;: 15,&#xd;
  &quot;chargerSMSNotification&quot;: 0,&#xd;
  &quot;chargerPushNotification&quot;: 0&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/alerts</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET ALERT ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">NEW_ALERT_ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.alertId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UPDATE /alerts/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;orgId&quot;: &quot;${ETS_TENANT_ID}&quot;,&#xd;
  &quot;userId&quot;: &quot;${CURRENT_PROTERRA_READONLY_USER_ID}&quot;,&#xd;
  &quot;userName&quot;: &quot;Ajay Proterra ReadOnly&quot;,&#xd;
  &quot;userEmail&quot;: &quot;${PROTERRA_READONLY_USERNAME}&quot;,&#xd;
  &quot;userPhone&quot;: &quot;&quot;,&#xd;
  &quot;busAlert&quot;: true,&#xd;
  &quot;busID&quot;: &quot;*&quot;,&#xd;
  &quot;busmonday&quot;: true,&#xd;
  &quot;bustuesday&quot;: true,&#xd;
  &quot;buswednesday&quot;: true,&#xd;
  &quot;busthursday&quot;: true,&#xd;
  &quot;busfriday&quot;: true,&#xd;
  &quot;bussaturday&quot;: true,&#xd;
  &quot;bussunday&quot;: true,&#xd;
  &quot;busAlertStartTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;busAlertStopTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;busEmailCritical&quot;: false,&#xd;
  &quot;busEmailError&quot;: false,&#xd;
  &quot;busEmailWarning&quot;: false,&#xd;
  &quot;busEmailInfo&quot;: false,&#xd;
  &quot;busSMSCritical&quot;: false,&#xd;
  &quot;busSMSError&quot;: false,&#xd;
  &quot;busSMSWarning&quot;: false,&#xd;
  &quot;busSMSInfo&quot;: false,&#xd;
  &quot;busPushCritical&quot;: false,&#xd;
  &quot;busPushError&quot;: false,&#xd;
  &quot;busPushWarning&quot;: false,&#xd;
  &quot;busPushInfo&quot;: false,&#xd;
  &quot;chargerAlert&quot;: true,&#xd;
  &quot;chargerID&quot;: &quot;*&quot;,&#xd;
  &quot;chargermonday&quot;: true,&#xd;
  &quot;chargertuesday&quot;: true,&#xd;
  &quot;chargerwednesday&quot;: true,&#xd;
  &quot;chargerthursday&quot;: true,&#xd;
  &quot;chargerfriday&quot;: true,&#xd;
  &quot;chargersaturday&quot;: true,&#xd;
  &quot;chargersunday&quot;: true,&#xd;
  &quot;chargerAlertStartTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;chargerAlertStopTime&quot;: &quot;11:59 PM&quot;,&#xd;
  &quot;chargerEmailCritical&quot;: true,&#xd;
  &quot;chargerEmailError&quot;: true,&#xd;
  &quot;chargerEmailWarning&quot;: true,&#xd;
  &quot;chargerEmailInfo&quot;: true,&#xd;
  &quot;chargerSMSCritical&quot;: true,&#xd;
  &quot;chargerSMSError&quot;: true,&#xd;
  &quot;chargerSMSWarning&quot;: true,&#xd;
  &quot;chargerSMSInfo&quot;: true,&#xd;
  &quot;chargerPushCritical&quot;: true,&#xd;
  &quot;chargerPushError&quot;: true,&#xd;
  &quot;chargerPushWarning&quot;: true,&#xd;
  &quot;chargerPushInfo&quot;: true,&#xd;
  &quot;ruleName&quot;: &quot;Ajay Suryavamshi_rule&quot;,&#xd;
  &quot;orgName&quot;: &quot;Edmonton Transit Service&quot;,&#xd;
  &quot;internalAcronym&quot;: &quot;ETS&quot;,&#xd;
  &quot;busName&quot;: &quot;All&quot;,&#xd;
  &quot;busAlertDays&quot;: [&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true&#xd;
  ],&#xd;
  &quot;busEmailNotification&quot;: 0,&#xd;
  &quot;busSMSNotification&quot;: 0,&#xd;
  &quot;busPushNotification&quot;: 0,&#xd;
  &quot;chargerName&quot;: &quot;All&quot;,&#xd;
  &quot;chargerAlertDays&quot;: [&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true&#xd;
  ],&#xd;
  &quot;chargerEmailNotification&quot;: 15,&#xd;
  &quot;chargerSMSNotification&quot;: 15,&#xd;
  &quot;chargerPushNotification&quot;: 15&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/alerts/${NEW_ALERT_ID}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE /alerts/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/alerts/${NEW_ALERT_ID}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/chargerStates" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/chargerStates</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/chargeplans" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/chargeplans</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET CHARGE PLAN ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">CHARGE_PLAN_ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.[*].chargePlanId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">&quot;${CHARGE_PLAN_ID}&quot; != &quot;NOT_FOUND&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/chargeplans/chargers" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/chargeplans/${CHARGE_PLAN_ID}/chargers</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/lastupdate/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/lastupdate/${ETS_BUS_VIN}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/report" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;busName&quot;: &quot;${ETS_BUS_VIN}&quot;,&#xd;
  &quot;date&quot;: &quot;${__timeShift(yyyy-MM-dd,,,,)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/report</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/chargers/sessions" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="start" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">start</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,-P6D,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/chargers/${ABB_CHARGER_OCPP_ID}/sessions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/chargers/aggregateddata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="start" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">start</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;,,-PT1H,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">SoC,Power_Active_Import,Energy_Active_Import_Register,Current_Import,Voltage,RPM,Current_Offered,Temperature,Power_Offered</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aggIntervalInS" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">aggIntervalInS</stringProp>
                  <stringProp name="Argument.value">60</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/chargers/${ABB_CHARGER_OCPP_ID}/aggregateddata</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /reports?reportType=Charger" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="reportType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">reportType</stringProp>
                  <stringProp name="Argument.value">Charger</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fromDay" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromDay</stringProp>
                  <stringProp name="Argument.value">${__timeShift(dd,,-P6D,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="toYear" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toYear</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenantName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenantName</stringProp>
                  <stringProp name="Argument.value">ETS</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fromYear" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromYear</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="toDay" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toDay</stringProp>
                  <stringProp name="Argument.value">${__timeShift(dd,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="toMonth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toMonth</stringProp>
                  <stringProp name="Argument.value">${__timeShift(MM,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fromMonth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromMonth</stringProp>
                  <stringProp name="Argument.value">${__timeShift(MM,,-P6D,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/reports</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /reports/rawcsvreports" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;busName&quot;: &quot;${ETS_BUS_VIN}&quot;,&#xd;
  &quot;start&quot;: &quot;${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,-PT1H,,)}&quot;,&#xd;
  &quot;end&quot;: &quot;${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,,,)}&quot;,&#xd;
  &quot;fields&quot;: [&#xd;
    &quot;PCabs_en_ABSActive&quot;,&#xd;
    &quot;PCabs_uin_FAxleSpd_kph&quot;,&#xd;
    &quot;PCabs_usi_RelSpdSSF_kph&quot;,&#xd;
    &quot;PCac_usi_CabinSetpointTemp_c&quot;,&#xd;
    &quot;PCbe_en_ImbalanceFault&quot;,&#xd;
    &quot;PCbe_en_UVFault&quot;,&#xd;
    &quot;PCbo_bo_HeadlightsOn&quot;&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${FILE_AMS_ENV}/v1/reports/rawcsvreports</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/counts/bus?scroll=5m" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;size&quot;: 5000,&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;filter&quot;: [&#xd;
        {&#xd;
          &quot;terms&quot;: {&#xd;
            &quot;busName&quot;: [&#xd;
              &quot;7JZTH13JXKS000158&quot;,&#xd;
              &quot;7JZTH13J2KS000154&quot;,&#xd;
              &quot;7JZTH13J0LS000297&quot;,&#xd;
              &quot;7JZTH13J5KS000164&quot;,&#xd;
              &quot;7JZTH13J9KS000166&quot;,&#xd;
              &quot;7JZTH13J6KS000156&quot;,&#xd;
              &quot;7JZTH13J2KS000171&quot;,&#xd;
              &quot;7JZTH13J7KS000151&quot;,&#xd;
              &quot;7JZTH13J4LS000299&quot;,&#xd;
              &quot;7JZTH13J7LS000300&quot;,&#xd;
              &quot;7JZTH13JXLS000307&quot;,&#xd;
              &quot;7JZTH13J0LS000302&quot;,&#xd;
              &quot;7JZTH13J3LS000309&quot;,&#xd;
              &quot;7JZTH13J1KS000162&quot;,&#xd;
              &quot;7JZTH13J9KS000152&quot;,&#xd;
              &quot;7JZTH13J1LS000308&quot;,&#xd;
              &quot;7JZTH13J2LS000298&quot;,&#xd;
              &quot;7JZTH13JXKS000161&quot;,&#xd;
              &quot;7JZTH13J9LS000315&quot;,&#xd;
              &quot;7JZTH13J1KS000159&quot;,&#xd;
              &quot;7JZTH13J8KS000157&quot;,&#xd;
              &quot;7JZTH13J4KS000169&quot;,&#xd;
              &quot;7JZTH13J8LS000306&quot;,&#xd;
              &quot;7JZTH13J6LS000305&quot;,&#xd;
              &quot;7JZTH13J0KS000170&quot;,&#xd;
              &quot;7JZTH13J0KS000167&quot;,&#xd;
              &quot;7JZTH13J1LS000308&quot;,&#xd;
              &quot;7JZTH13J4KS000155&quot;,&#xd;
              &quot;7JZTH13J7KS000165&quot;,&#xd;
              &quot;7JZTH13J2LS000303&quot;,&#xd;
              &quot;7JZTH13J5LS000313&quot;,&#xd;
              &quot;7JZTH13J4LS000304&quot;,&#xd;
              &quot;7JZTH13J2KS000168&quot;,&#xd;
              &quot;7JZTH13J8KS000160&quot;,&#xd;
              &quot;7JZTH13J3LS000312&quot;,&#xd;
              &quot;7JZTH13JXLS000310&quot;,&#xd;
              &quot;7JZTH13J3KS000163&quot;,&#xd;
              &quot;7JZTH13J9LS000301&quot;,&#xd;
              &quot;7JZTH13J7LS000314&quot;,&#xd;
              &quot;7JZTH13J0KS000153&quot;,&#xd;
              &quot;7JZTH13J1LS000311&quot;&#xd;
            ]&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;range&quot;: {&#xd;
            &quot;faultTimestamp&quot;: {&#xd;
              &quot;gte&quot;: ${__timeShift(,,-P100D,,)},&#xd;
              &quot;lte&quot;: ${__timeShift(,,,,)}&#xd;
            }&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/counts/bus?scroll=5m</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET SCROLL ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">BUS_SCROLL_ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$._scroll_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/counts/search?scroll=5m" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;scroll_id&quot;: &quot;${BUS_SCROLL_ID}&quot;,&#xd;
  &quot;scroll&quot;: &quot;5m&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/counts/search?scroll=5m</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/counts/search?scroll=5m" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;scroll_id&quot;: &quot;${BUS_SCROLL_ID}&quot;,&#xd;
  &quot;scroll&quot;: &quot;5m&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/counts/search?scroll=5m</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/counts/charger?scroll=5m" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;size&quot;: 5000,&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;filter&quot;: [&#xd;
        {&#xd;
          &quot;terms&quot;: {&#xd;
            &quot;chargerName&quot;: [&#xd;
              &quot;HVC150-IT1-2219-065&quot;,&#xd;
              &quot;HVC150-MX1-5219-006&quot;,&#xd;
              &quot;HVC150-IT1-2319-029&quot;,&#xd;
              &quot;HVC150-MX1-5219-003&quot;,&#xd;
              &quot;NAMHVC150-US1-1619-975&quot;,&#xd;
              &quot;HVC150-MX1-0220-010&quot;,&#xd;
              &quot;HVC150-IT1-2219-088&quot;,&#xd;
              &quot;HVC150-IT1-2219-082&quot;,&#xd;
              &quot;HVC150-IT1-1119-012&quot;,&#xd;
              &quot;00120c2df6905e01&quot;,&#xd;
              &quot;NAMHVC150-US1-1619-974&quot;,&#xd;
              &quot;HVC150-MX1-0120-001&quot;,&#xd;
              &quot;HVC150-MX1-5219-005&quot;,&#xd;
              &quot;00120C2DF6939301&quot;,&#xd;
              &quot;HVC150-IT1-1119-045&quot;,&#xd;
              &quot;HVC150-MX1-5219-004&quot;,&#xd;
              &quot;HVC150-IT1-1019-119&quot;,&#xd;
              &quot;HVC150-IT1-2119-099&quot;,&#xd;
              &quot;HVC150-MX1-0220-009&quot;,&#xd;
              &quot;00120c2df6ac0401&quot;,&#xd;
              &quot;HVC150-IT1-1019-068&quot;,&#xd;
              &quot;HVC150-MX1-0220-011&quot;,&#xd;
              &quot;HVC150-MX1-0220-008&quot;,&#xd;
              &quot;00120C2DF6B05901&quot;,&#xd;
              &quot;HVC150-IT1-2219-093&quot;,&#xd;
              &quot;00120C2DF6BCA201&quot;,&#xd;
              &quot;HVC150-MX1-0220-013&quot;,&#xd;
              &quot;NAMHVC150-US1-1619-915&quot;,&#xd;
              &quot;HVC150-IT1-1119-017&quot;,&#xd;
              &quot;00120c2df6a50a01&quot;,&#xd;
              &quot;00120C2DF6B03F01&quot;,&#xd;
              &quot;HVC150-IT1-2219-079&quot;,&#xd;
              &quot;HVC150-IT1-2219-091&quot;,&#xd;
              &quot;HVC150-IT1-2219-064&quot;&#xd;
            ]&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;term&quot;: {&#xd;
            &quot;request.status&quot;: &quot;Faulted&quot;&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;range&quot;: {&#xd;
            &quot;@timestamp&quot;: {&#xd;
              &quot;gte&quot;: ${__timeShift(,,-P100D,,)},&#xd;
              &quot;lte&quot;: ${__timeShift(,,,,)}&#xd;
            }&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/counts/charger?scroll=5m</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/busfleetmetrics" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="buses" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">buses</stringProp>
                  <stringProp name="Argument.valuestringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="signalNames" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">signalNames</stringProp>
                  <stringProp name="Argument.value">distanceInMiles</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="start" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">start</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,-P13D,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/busfleetmetrics</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /reports/customreports" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;url&quot;: &quot;https://kibana.proterra.com:5601/app/kibana#/dashboard/AWDtNvhr3F4CRLkcyUEf?_g=(refreshInterval:(display:&apos;1%20day&apos;,pause:!f,section:3,value:86400000),time:(from:now%2Fy,mode:quick,to:now))&amp;_a=(options:(darkTheme:!f),query:(query_string:(analyze_wildcard:!t,query:&apos;busName:7JZTH13J7KS000151 OR busName:7JZTH13J9KS000152 OR busName:7JZTH13J0KS000153 OR busName:7JZTH13J2KS000154 OR busName:7JZTH13J4KS000155 OR busName:7JZTH13J6KS000156 OR busName:7JZTH13J8KS000157 OR busName:7JZTH13JXKS000158 OR busName:7JZTH13J1KS000159 OR busName:7JZTH13J8KS000160 OR busName:7JZTH13JXKS000161 OR busName:7JZTH13J1KS000162 OR busName:7JZTH13J3KS000163 OR busName:7JZTH13J5KS000164 OR busName:7JZTH13J7KS000165 OR busName:7JZTH13J9KS000166 OR busName:7JZTH13J0KS000167 OR busName:7JZTH13J2KS000168 OR busName:7JZTH13J4KS000169 OR busName:7JZTH13J0KS000170 OR busName:7JZTH13J2KS000171 OR busName:7JZTH13J0LS000297 OR busName:7JZTH13J2LS000298 OR busName:7JZTH13J4LS000299 OR busName:7JZTH13J7LS000300 OR busName:7JZTH13J9LS000301 OR busName:7JZTH13J0LS000302 OR busName:7JZTH13J2LS000303 OR busName:7JZTH13J4LS000304 OR busName:7JZTH13J6LS000305 OR busName:7JZTH13J8LS000306 OR busName:7JZTH13JXLS000307 OR busName:7JZTH13J1LS000308 OR busName:7JZTH13J1LS000308 OR busName:7JZTH13J3LS000309 OR busName:7JZTH13JXLS000310 OR busName:7JZTH13J1LS000311 OR busName:7JZTH13J3LS000312 OR busName:7JZTH13J5LS000313 OR busName:7JZTH13J7LS000314 OR busName:7JZTH13J9LS000315&apos;)))&quot;,&#xd;
  &quot;output_file&quot;: &quot;-ETS_-_Edmonton_Transit_Service-8000_-_7JZTH13J7KS000151-2021-01-10T13:01:51.937Z.pdf&quot;,&#xd;
  &quot;wait_in_s&quot;: 20,&#xd;
  &quot;report_type&quot;: &quot;kibana&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">FILE_AMS_ENV/v1/reports/customreports</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CREATE /tenants/chargeplans" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;chargePlanName&quot;: &quot;JMX - CHARGE PLAN - ${__timeShift(,,,,)}&quot;,&#xd;
  &quot;tenantId&quot;: &quot;${ETS_TENANT_ID}&quot;,&#xd;
  &quot;timezone&quot;: &quot;America/Chicago&quot;,&#xd;
  &quot;chargePlanDemandLimit&quot;: &quot;660&quot;,&#xd;
  &quot;chargePlanDemandOverride&quot;: false,&#xd;
  &quot;chargePlanActive&quot;: false,&#xd;
  &quot;transformerPowerLimit&quot;: &quot;60&quot;,&#xd;
  &quot;tariffName&quot;: &quot;A10&quot;,&#xd;
  &quot;utilityName&quot;: &quot;PG&amp;E&quot;,&#xd;
  &quot;schedules&quot;: [&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 1,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 2,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 3,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 4,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 5,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 6,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 7,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/chargeplans</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET NEW CHARGE PLAN ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">NEW_CHARGE_PLAN_ID; NEW_CHARGE_PLAN_NAME</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.chargePlanId; $.chargePlanName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND; NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/chargeplans/chargerassociations" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&#xd;
  &quot;57b6e734-a7a6-4b81-9a2f-59b7ea54a5b1&quot;,&#xd;
  &quot;99474eaa-7f44-4744-ad30-f4faa109ca3b&quot;,&#xd;
  &quot;57edc7cd-912b-44f7-bd9f-eeb6226ce58d&quot;,&#xd;
  &quot;5add0996-66a4-4a9f-b22f-5514348e00aa&quot;,&#xd;
  &quot;f9f0c2b6-5e7a-4d3e-8241-07f6c971a9c6&quot;,&#xd;
  &quot;c9070ce3-734c-4616-8b3b-a0f5687969ad&quot;,&#xd;
  &quot;a4e2c36d-918c-472c-8f4d-0184566ee31e&quot;,&#xd;
  &quot;b4c04864-0623-4361-977a-390c00ad97b2&quot;,&#xd;
  &quot;ce414788-a1b3-4b89-9ea0-040747f84834&quot;,&#xd;
  &quot;b2ce0c87-a2f9-418e-88bb-ce3dcec3f76d&quot;&#xd;
]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/chargeplans/${NEW_CHARGE_PLAN_ID}/chargerassociations?autoRemoveChargers=true</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UPDATE /tenants/chargeplans/" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;chargePlanId&quot;: &quot;${NEW_CHARGE_PLAN_ID}&quot;,&#xd;
  &quot;chargePlanName&quot;: &quot;${NEW_CHARGE_PLAN_NAME}&quot;,&#xd;
  &quot;chargePlanDemandLimit&quot;: &quot;660&quot;,&#xd;
  &quot;transformerPowerLimit&quot;: &quot;60&quot;,&#xd;
  &quot;chargePlanDemandOverride&quot;: false,&#xd;
  &quot;chargePlanActive&quot;: false,&#xd;
  &quot;tenantId&quot;: &quot;${ETS_TENANT_ID}&quot;,&#xd;
  &quot;utilityName&quot;: &quot;PG&amp;E&quot;,&#xd;
  &quot;utilityId&quot;: null,&#xd;
  &quot;tariffName&quot;: &quot;A10&quot;,&#xd;
  &quot;tariffId&quot;: null,&#xd;
  &quot;timezone&quot;: &quot;America/Chicago&quot;,&#xd;
  &quot;chargePlanStrategy&quot;: null,&#xd;
  &quot;schedules&quot;: [&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 1,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 2,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 3,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 4,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 5,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 6,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;dayOfWeek&quot;: 7,&#xd;
      &quot;earliestStartTime&quot;: &quot;18:00&quot;,&#xd;
      &quot;earliestEndTime&quot;: &quot;4:00&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;customer&quot;: &quot;ETS&quot;,&#xd;
  &quot;chargers&quot;: [&#xd;
    {&#xd;
      &quot;linkId&quot;: &quot;1d5cbd45-c970-40e1-83b0-b5b884bd9953&quot;,&#xd;
      &quot;assetId&quot;: &quot;c9070ce3-734c-4616-8b3b-a0f5687969ad&quot;,&#xd;
      &quot;chargePlanId&quot;: &quot;b10fd46d-19c7-4ca7-b617-a38ff799ae63&quot;,&#xd;
      &quot;charger&quot;: {&#xd;
        &quot;assetId&quot;: &quot;c9070ce3-734c-4616-8b3b-a0f5687969ad&quot;,&#xd;
        &quot;garageId&quot;: &quot;8cbc5a33-1940-47c3-b3d2-a884a0bd6a1f&quot;,&#xd;
        &quot;assetTenant&quot;: null,&#xd;
        &quot;assetOwner&quot;: null,&#xd;
        &quot;assetIP&quot;: null,&#xd;
        &quot;assetType&quot;: &quot;CHARGER&quot;,&#xd;
        &quot;createdTime&quot;: null,&#xd;
        &quot;lastModifiedTime&quot;: 1602056739000,&#xd;
        &quot;customerAcceptanceDate&quot;: null,&#xd;
        &quot;provisionDate&quot;: null,&#xd;
        &quot;chargerSerialNumber&quot;: &quot;00120C2DF6B03F01&quot;,&#xd;
        &quot;chargerFirmwareVersion&quot;: null,&#xd;
        &quot;lastSoftwareUpdate&quot;: null,&#xd;
        &quot;chargerName&quot;: &quot;CTG Shop 19&quot;,&#xd;
        &quot;chargerVendor&quot;: &quot;Proterra&quot;,&#xd;
        &quot;chargerModel&quot;: &quot;Proterra-PCS-60&quot;,&#xd;
        &quot;chargerSpecSheetLink&quot;: null,&#xd;
        &quot;chargerType&quot;: &quot;CCS 1.0&quot;,&#xd;
        &quot;maxCurrent&quot;: null,&#xd;
        &quot;maxVoltage&quot;: null,&#xd;
        &quot;chargerConfiguration&quot;: null,&#xd;
        &quot;ocppId&quot;: &quot;00120C2DF6B03F01&quot;,&#xd;
        &quot;timezone&quot;: &quot;America/Denver&quot;,&#xd;
        &quot;mfgDate&quot;: null,&#xd;
        &quot;chargerSpec&quot;: null,&#xd;
        &quot;chargerLocation&quot;: {&#xd;
          &quot;addressId&quot;: &quot;45b329be-7425-442c-b487-19f6c2f034b0&quot;,&#xd;
          &quot;addressAbbreviation&quot;: null,&#xd;
          &quot;addressLine1&quot;: &quot;15520 Ellerslie Rd SW, Edmonton, AB T6W 1A4, Canada&quot;,&#xd;
          &quot;addressLine2&quot;: null,&#xd;
          &quot;city&quot;: &quot;Edmonton&quot;,&#xd;
          &quot;state&quot;: null,&#xd;
          &quot;zipCode&quot;: null,&#xd;
          &quot;country&quot;: null,&#xd;
          &quot;latitude&quot;: 53.4260169,&#xd;
          &quot;longitude&quot;: -113.5867352&#xd;
        },&#xd;
        &quot;meter&quot;: {&#xd;
          &quot;meterId&quot;: &quot;c4073287-44a4-4fe4-96a8-6584ab13f4bf&quot;,&#xd;
          &quot;meterSerialNumber&quot;: null,&#xd;
          &quot;meterType&quot;: null,&#xd;
          &quot;meterName&quot;: null,&#xd;
          &quot;meterLocation&quot;: null&#xd;
        },&#xd;
        &quot;dispensers&quot;: [],&#xd;
        &quot;connectivities&quot;: [],&#xd;
        &quot;excludedFromChargePlan&quot;: null,&#xd;
        &quot;customerChargerName&quot;: null,&#xd;
        &quot;mfgLocation&quot;: null,&#xd;
        &quot;cradlePointSerialNumber&quot;: &quot;&quot;,&#xd;
        &quot;specialLocationOfCharger&quot;: null,&#xd;
        &quot;cellularServiceProvider&quot;: null,&#xd;
        &quot;cellularSIMNumber&quot;: null,&#xd;
        &quot;cellularIMEI&quot;: null,&#xd;
        &quot;cellularIMSI&quot;: null,&#xd;
        &quot;cellularMAC&quot;: null,&#xd;
        &quot;cellularIP&quot;: &quot;&quot;,&#xd;
        &quot;cellularPhoneNum&quot;: null,&#xd;
        &quot;cellularAPN&quot;: null,&#xd;
        &quot;cellularICCID&quot;: &quot;&quot;,&#xd;
        &quot;vendorId&quot;: &quot;Edmonton 001&quot;,&#xd;
        &quot;specificChargerLocation&quot;: &quot;Shop&quot;,&#xd;
        &quot;ocppMultiplexerServers&quot;: [],&#xd;
        &quot;chargerAllowedToTalkToMultiplexer&quot;: false&#xd;
      }&#xd;
    },&#xd;
    {&#xd;
      &quot;linkId&quot;: &quot;1d65559a-0906-4be2-95b7-59d2f761f7b9&quot;,&#xd;
      &quot;assetId&quot;: &quot;a4e2c36d-918c-472c-8f4d-0184566ee31e&quot;,&#xd;
      &quot;chargePlanId&quot;: &quot;b10fd46d-19c7-4ca7-b617-a38ff799ae63&quot;,&#xd;
      &quot;charger&quot;: {&#xd;
        &quot;assetId&quot;: &quot;a4e2c36d-918c-472c-8f4d-0184566ee31e&quot;,&#xd;
        &quot;garageId&quot;: &quot;3a91bb79-af4b-4ab6-8f35-970307a15183&quot;,&#xd;
        &quot;assetTenant&quot;: null,&#xd;
        &quot;assetOwner&quot;: null,&#xd;
        &quot;assetIP&quot;: null,&#xd;
        &quot;assetType&quot;: &quot;CHARGER&quot;,&#xd;
        &quot;createdTime&quot;: null,&#xd;
        &quot;lastModifiedTime&quot;: null,&#xd;
        &quot;customerAcceptanceDate&quot;: null,&#xd;
        &quot;provisionDate&quot;: null,&#xd;
        &quot;chargerSerialNumber&quot;: &quot;00120C2DF6BCA201&quot;,&#xd;
        &quot;chargerFirmwareVersion&quot;: null,&#xd;
        &quot;lastSoftwareUpdate&quot;: null,&#xd;
        &quot;chargerName&quot;: &quot;KA Body 25&quot;,&#xd;
        &quot;chargerVendor&quot;: &quot;Proterra&quot;,&#xd;
        &quot;chargerModel&quot;: &quot;Proterra-PCS-60&quot;,&#xd;
        &quot;chargerSpecSheetLink&quot;: null,&#xd;
        &quot;chargerType&quot;: &quot;CCS 1.0&quot;,&#xd;
        &quot;maxCurrent&quot;: null,&#xd;
        &quot;maxVoltage&quot;: null,&#xd;
        &quot;chargerConfiguration&quot;: null,&#xd;
        &quot;ocppId&quot;: &quot;00120C2DF6BCA201&quot;,&#xd;
        &quot;timezone&quot;: &quot;America/Denver&quot;,&#xd;
        &quot;mfgDate&quot;: null,&#xd;
        &quot;chargerSpec&quot;: null,&#xd;
        &quot;chargerLocation&quot;: {&#xd;
          &quot;addressId&quot;: &quot;7e159a6c-2b15-4a00-a454-7954ff444f8c&quot;,&#xd;
          &quot;addressAbbreviation&quot;: null,&#xd;
          &quot;addressLine1&quot;: &quot;12403 Fort Rd NW, Edmonton, AB T5B 2B7, Canada&quot;,&#xd;
          &quot;addressLine2&quot;: null,&#xd;
          &quot;city&quot;: &quot;Edmonton&quot;,&#xd;
          &quot;state&quot;: null,&#xd;
          &quot;zipCode&quot;: null,&#xd;
          &quot;country&quot;: null,&#xd;
          &quot;latitude&quot;: 53.5789232,&#xd;
          &quot;longitude&quot;: -113.4565009&#xd;
        },&#xd;
        &quot;meter&quot;: {&#xd;
          &quot;meterId&quot;: &quot;1b4d0b91-e42f-4b47-99f1-ce222e5b18bc&quot;,&#xd;
          &quot;meterSerialNumber&quot;: null,&#xd;
          &quot;meterType&quot;: null,&#xd;
          &quot;meterName&quot;: null,&#xd;
          &quot;meterLocation&quot;: null&#xd;
        },&#xd;
        &quot;dispensers&quot;: [],&#xd;
        &quot;connectivities&quot;: [],&#xd;
        &quot;excludedFromChargePlan&quot;: null,&#xd;
        &quot;customerChargerName&quot;: null,&#xd;
        &quot;mfgLocation&quot;: null,&#xd;
        &quot;cradlePointSerialNumber&quot;: &quot;&quot;,&#xd;
        &quot;specialLocationOfCharger&quot;: null,&#xd;
        &quot;cellularServiceProvider&quot;: null,&#xd;
        &quot;cellularSIMNumber&quot;: null,&#xd;
        &quot;cellularIMEI&quot;: null,&#xd;
        &quot;cellularIMSI&quot;: null,&#xd;
        &quot;cellularMAC&quot;: null,&#xd;
        &quot;cellularIP&quot;: &quot;&quot;,&#xd;
        &quot;cellularPhoneNum&quot;: null,&#xd;
        &quot;cellularAPN&quot;: null,&#xd;
        &quot;cellularICCID&quot;: &quot;&quot;,&#xd;
        &quot;vendorId&quot;: &quot;EMBC 006&quot;,&#xd;
        &quot;specificChargerLocation&quot;: &quot;Shop&quot;,&#xd;
        &quot;ocppMultiplexerServers&quot;: [],&#xd;
        &quot;chargerAllowedToTalkToMultiplexer&quot;: false&#xd;
      }&#xd;
    },&#xd;
    {&#xd;
      &quot;linkId&quot;: &quot;2c121f64-6eb0-4454-9337-7454a2e23e86&quot;,&#xd;
      &quot;assetId&quot;: &quot;5add0996-66a4-4a9f-b22f-5514348e00aa&quot;,&#xd;
      &quot;chargePlanId&quot;: &quot;b10fd46d-19c7-4ca7-b617-a38ff799ae63&quot;,&#xd;
      &quot;charger&quot;: {&#xd;
        &quot;assetId&quot;: &quot;5add0996-66a4-4a9f-b22f-5514348e00aa&quot;,&#xd;
        &quot;garageId&quot;: &quot;8cbc5a33-1940-47c3-b3d2-a884a0bd6a1f&quot;,&#xd;
        &quot;assetTenant&quot;: null,&#xd;
        &quot;assetOwner&quot;: null,&#xd;
        &quot;assetIP&quot;: null,&#xd;
        &quot;assetType&quot;: &quot;CHARGER&quot;,&#xd;
        &quot;createdTime&quot;: null,&#xd;
        &quot;lastModifiedTime&quot;: 1601386132000,&#xd;
        &quot;customerAcceptanceDate&quot;: null,&#xd;
        &quot;provisionDate&quot;: null,&#xd;
        &quot;chargerSerialNumber&quot;: &quot;HVC150-IT1-1119-045&quot;,&#xd;
        &quot;chargerFirmwareVersion&quot;: null,&#xd;
        &quot;lastSoftwareUpdate&quot;: null,&#xd;
        &quot;chargerName&quot;: &quot;CENT 36-3&quot;,&#xd;
        &quot;chargerVendor&quot;: &quot;ABB&quot;,&#xd;
        &quot;chargerModel&quot;: &quot;HVC-150PD&quot;,&#xd;
        &quot;chargerSpecSheetLink&quot;: null,&#xd;
        &quot;chargerType&quot;: &quot;Pantograph&quot;,&#xd;
        &quot;maxCurrent&quot;: null,&#xd;
        &quot;maxVoltage&quot;: null,&#xd;
        &quot;chargerConfiguration&quot;: null,&#xd;
        &quot;ocppId&quot;: &quot;HVC150-IT1-1119-045&quot;,&#xd;
        &quot;timezone&quot;: &quot;America/Denver&quot;,&#xd;
        &quot;mfgDate&quot;: null,&#xd;
        &quot;chargerSpec&quot;: null,&#xd;
        &quot;chargerLocation&quot;: {&#xd;
          &quot;addressId&quot;: &quot;3642345a-d7a9-4109-b1bf-9804a34d3417&quot;,&#xd;
          &quot;addressAbbreviation&quot;: null,&#xd;
          &quot;addressLine1&quot;: &quot;15520 Ellerslie Rd SW, Edmonton, AB T6W 1A4, Canada&quot;,&#xd;
          &quot;addressLine2&quot;: null,&#xd;
          &quot;city&quot;: &quot;Edmonton&quot;,&#xd;
          &quot;state&quot;: null,&#xd;
          &quot;zipCode&quot;: null,&#xd;
          &quot;country&quot;: null,&#xd;
          &quot;latitude&quot;: 53.4260169,&#xd;
          &quot;longitude&quot;: -113.5867352&#xd;
        },&#xd;
        &quot;meter&quot;: {&#xd;
          &quot;meterId&quot;: &quot;f426ed2e-ad35-4462-8e23-36877c489e7f&quot;,&#xd;
          &quot;meterSerialNumber&quot;: null,&#xd;
          &quot;meterType&quot;: null,&#xd;
          &quot;meterName&quot;: null,&#xd;
          &quot;meterLocation&quot;: null&#xd;
        },&#xd;
        &quot;dispensers&quot;: [],&#xd;
        &quot;connectivities&quot;: [],&#xd;
        &quot;excludedFromChargePlan&quot;: null,&#xd;
        &quot;customerChargerName&quot;: null,&#xd;
        &quot;mfgLocation&quot;: null,&#xd;
        &quot;cradlePointSerialNumber&quot;: &quot;&quot;,&#xd;
        &quot;specialLocationOfCharger&quot;: null,&#xd;
        &quot;cellularServiceProvider&quot;: null,&#xd;
        &quot;cellularSIMNumber&quot;: null,&#xd;
        &quot;cellularIMEI&quot;: null,&#xd;
        &quot;cellularIMSI&quot;: null,&#xd;
        &quot;cellularMAC&quot;: null,&#xd;
        &quot;cellularIP&quot;: &quot;&quot;,&#xd;
        &quot;cellularPhoneNum&quot;: null,&#xd;
        &quot;cellularAPN&quot;: null,&#xd;
        &quot;cellularICCID&quot;: &quot;&quot;,&#xd;
        &quot;vendorId&quot;: &quot;Centennial_Charger_003&quot;,&#xd;
        &quot;specificChargerLocation&quot;: &quot;Depot&quot;,&#xd;
        &quot;ocppMultiplexerServers&quot;: [],&#xd;
        &quot;chargerAllowedToTalkToMultiplexer&quot;: false&#xd;
      }&#xd;
    },&#xd;
    {&#xd;
      &quot;linkId&quot;: &quot;3c51a3ed-b9dd-4f9d-88f9-1110a1ad8943&quot;,&#xd;
      &quot;assetId&quot;: &quot;57b6e734-a7a6-4b81-9a2f-59b7ea54a5b1&quot;,&#xd;
      &quot;chargePlanId&quot;: &quot;b10fd46d-19c7-4ca7-b617-a38ff799ae63&quot;,&#xd;
      &quot;charger&quot;: {&#xd;
        &quot;assetId&quot;: &quot;57b6e734-a7a6-4b81-9a2f-59b7ea54a5b1&quot;,&#xd;
        &quot;garageId&quot;: &quot;8cbc5a33-1940-47c3-b3d2-a884a0bd6a1f&quot;,&#xd;
        &quot;assetTenant&quot;: null,&#xd;
        &quot;assetOwner&quot;: null,&#xd;
        &quot;assetIP&quot;: null,&#xd;
        &quot;assetType&quot;: &quot;CHARGER&quot;,&#xd;
        &quot;createdTime&quot;: null,&#xd;
        &quot;lastModifiedTime&quot;: 1606753492000,&#xd;
        &quot;customerAcceptanceDate&quot;: null,&#xd;
        &quot;provisionDate&quot;: null,&#xd;
        &quot;chargerSerialNumber&quot;: &quot;NAMHVC150-US1-1619-975&quot;,&#xd;
        &quot;chargerFirmwareVersion&quot;: null,&#xd;
        &quot;lastSoftwareUpdate&quot;: null,&#xd;
        &quot;chargerName&quot;: &quot;CENT 36-1&quot;,&#xd;
        &quot;chargerVendor&quot;: &quot;ABB&quot;,&#xd;
        &quot;chargerModel&quot;: &quot;HVC-150PD&quot;,&#xd;
        &quot;chargerSpecSheetLink&quot;: null,&#xd;
        &quot;chargerType&quot;: &quot;Pantograph&quot;,&#xd;
        &quot;maxCurrent&quot;: null,&#xd;
        &quot;maxVoltage&quot;: null,&#xd;
        &quot;chargerConfiguration&quot;: null,&#xd;
        &quot;ocppId&quot;: &quot;NAMHVC150-US1-1619-975&quot;,&#xd;
        &quot;timezone&quot;: &quot;America/Denver&quot;,&#xd;
        &quot;mfgDate&quot;: null,&#xd;
        &quot;chargerSpec&quot;: null,&#xd;
        &quot;chargerLocation&quot;: {&#xd;
          &quot;addressId&quot;: &quot;bcf8450a-55cf-4389-8eef-699bd0216ca0&quot;,&#xd;
          &quot;addressAbbreviation&quot;: null,&#xd;
          &quot;addressLine1&quot;: &quot;15520 Ellerslie Rd SW, Edmonton, AB T6W 1A4, Canada&quot;,&#xd;
          &quot;addressLine2&quot;: null,&#xd;
          &quot;city&quot;: &quot;Edmonton&quot;,&#xd;
          &quot;state&quot;: null,&#xd;
          &quot;zipCode&quot;: null,&#xd;
          &quot;country&quot;: null,&#xd;
          &quot;latitude&quot;: 53.4260169,&#xd;
          &quot;longitude&quot;: -113.5867352&#xd;
        },&#xd;
        &quot;meter&quot;: {&#xd;
          &quot;meterId&quot;: &quot;55899f1d-6419-4397-89c2-8ec24e4394e0&quot;,&#xd;
          &quot;meterSerialNumber&quot;: null,&#xd;
          &quot;meterType&quot;: null,&#xd;
          &quot;meterName&quot;: null,&#xd;
          &quot;meterLocation&quot;: null&#xd;
        },&#xd;
        &quot;dispensers&quot;: [],&#xd;
        &quot;connectivities&quot;: [],&#xd;
        &quot;excludedFromChargePlan&quot;: null,&#xd;
        &quot;customerChargerName&quot;: null,&#xd;
        &quot;mfgLocation&quot;: null,&#xd;
        &quot;cradlePointSerialNumber&quot;: &quot; &quot;,&#xd;
        &quot;specialLocationOfCharger&quot;: null,&#xd;
        &quot;cellularServiceProvider&quot;: null,&#xd;
        &quot;cellularSIMNumber&quot;: null,&#xd;
        &quot;cellularIMEI&quot;: null,&#xd;
        &quot;cellularIMSI&quot;: null,&#xd;
        &quot;cellularMAC&quot;: null,&#xd;
        &quot;cellularIP&quot;: &quot;&quot;,&#xd;
        &quot;cellularPhoneNum&quot;: null,&#xd;
        &quot;cellularAPN&quot;: null,&#xd;
        &quot;cellularICCID&quot;: &quot;&quot;,&#xd;
        &quot;vendorId&quot;: &quot;Centennial_Charger_001&quot;,&#xd;
        &quot;specificChargerLocation&quot;: &quot;Depot&quot;,&#xd;
        &quot;ocppMultiplexerServers&quot;: [],&#xd;
        &quot;chargerAllowedToTalkToMultiplexer&quot;: false&#xd;
      }&#xd;
    },&#xd;
    {&#xd;
      &quot;linkId&quot;: &quot;5f998770-4d08-4d7c-9aaa-ff02b652a2d8&quot;,&#xd;
      &quot;assetId&quot;: &quot;f9f0c2b6-5e7a-4d3e-8241-07f6c971a9c6&quot;,&#xd;
      &quot;chargePlanId&quot;: &quot;b10fd46d-19c7-4ca7-b617-a38ff799ae63&quot;,&#xd;
      &quot;charger&quot;: {&#xd;
        &quot;assetId&quot;: &quot;f9f0c2b6-5e7a-4d3e-8241-07f6c971a9c6&quot;,&#xd;
        &quot;garageId&quot;: &quot;8cbc5a33-1940-47c3-b3d2-a884a0bd6a1f&quot;,&#xd;
        &quot;assetTenant&quot;: null,&#xd;
        &quot;assetOwner&quot;: null,&#xd;
        &quot;assetIP&quot;: null,&#xd;
        &quot;assetType&quot;: &quot;CHARGER&quot;,&#xd;
        &quot;createdTime&quot;: null,&#xd;
        &quot;lastModifiedTime&quot;: 1601386144000,&#xd;
        &quot;customerAcceptanceDate&quot;: null,&#xd;
        &quot;provisionDate&quot;: null,&#xd;
        &quot;chargerSerialNumber&quot;: &quot;HVC150-IT1-1019-119&quot;,&#xd;
        &quot;chargerFirmwareVersion&quot;: null,&#xd;
        &quot;lastSoftwareUpdate&quot;: null,&#xd;
        &quot;chargerName&quot;: &quot;CENT 36-4&quot;,&#xd;
        &quot;chargerVendor&quot;: &quot;ABB&quot;,&#xd;
        &quot;chargerModel&quot;: &quot;HVC-150PD&quot;,&#xd;
        &quot;chargerSpecSheetLink&quot;: null,&#xd;
        &quot;chargerType&quot;: &quot;Pantograph&quot;,&#xd;
        &quot;maxCurrent&quot;: null,&#xd;
        &quot;maxVoltage&quot;: null,&#xd;
        &quot;chargerConfiguration&quot;: null,&#xd;
        &quot;ocppId&quot;: &quot;HVC150-IT1-1019-119&quot;,&#xd;
        &quot;timezone&quot;: &quot;America/Denver&quot;,&#xd;
        &quot;mfgDate&quot;: null,&#xd;
        &quot;chargerSpec&quot;: null,&#xd;
        &quot;chargerLocation&quot;: {&#xd;
          &quot;addressId&quot;: &quot;ab485577-1745-4e77-ba25-bf9862c92f28&quot;,&#xd;
          &quot;addressAbbreviation&quot;: null,&#xd;
          &quot;addressLine1&quot;: &quot;15520 Ellerslie Rd SW, Edmonton, AB T6W 1A4, Canada&quot;,&#xd;
          &quot;addressLine2&quot;: null,&#xd;
          &quot;city&quot;: &quot;Edmonton&quot;,&#xd;
          &quot;state&quot;: null,&#xd;
          &quot;zipCode&quot;: null,&#xd;
          &quot;country&quot;: null,&#xd;
          &quot;latitude&quot;: 53.4260169,&#xd;
          &quot;longitude&quot;: -113.5867352&#xd;
        },&#xd;
        &quot;meter&quot;: {&#xd;
          &quot;meterId&quot;: &quot;710c9b3b-1815-493b-a107-0215f01d0639&quot;,&#xd;
          &quot;meterSerialNumber&quot;: null,&#xd;
          &quot;meterType&quot;: null,&#xd;
          &quot;meterName&quot;: null,&#xd;
          &quot;meterLocation&quot;: null&#xd;
        },&#xd;
        &quot;dispensers&quot;: [],&#xd;
        &quot;connectivities&quot;: [],&#xd;
        &quot;excludedFromChargePlan&quot;: null,&#xd;
        &quot;customerChargerName&quot;: null,&#xd;
        &quot;mfgLocation&quot;: null,&#xd;
        &quot;cradlePointSerialNumber&quot;: &quot;&quot;,&#xd;
        &quot;specialLocationOfCharger&quot;: null,&#xd;
        &quot;cellularServiceProvider&quot;: null,&#xd;
        &quot;cellularSIMNumber&quot;: null,&#xd;
        &quot;cellularIMEI&quot;: null,&#xd;
        &quot;cellularIMSI&quot;: null,&#xd;
        &quot;cellularMAC&quot;: null,&#xd;
        &quot;cellularIP&quot;: &quot;&quot;,&#xd;
        &quot;cellularPhoneNum&quot;: null,&#xd;
        &quot;cellularAPN&quot;: null,&#xd;
        &quot;cellularICCID&quot;: &quot;&quot;,&#xd;
        &quot;vendorId&quot;: &quot;Centennial_Charger_004&quot;,&#xd;
        &quot;specificChargerLocation&quot;: &quot;Depot&quot;,&#xd;
        &quot;ocppMultiplexerServers&quot;: [],&#xd;
        &quot;chargerAllowedToTalkToMultiplexer&quot;: false&#xd;
      }&#xd;
    },&#xd;
    {&#xd;
      &quot;linkId&quot;: &quot;6731c128-75e0-454d-8dc4-c4ebe4b960d1&quot;,&#xd;
      &quot;assetId&quot;: &quot;b2ce0c87-a2f9-418e-88bb-ce3dcec3f76d&quot;,&#xd;
      &quot;chargePlanId&quot;: &quot;b10fd46d-19c7-4ca7-b617-a38ff799ae63&quot;,&#xd;
      &quot;charger&quot;: {&#xd;
        &quot;assetId&quot;: &quot;b2ce0c87-a2f9-418e-88bb-ce3dcec3f76d&quot;,&#xd;
        &quot;garageId&quot;: &quot;3a91bb79-af4b-4ab6-8f35-970307a15183&quot;,&#xd;
        &quot;assetTenant&quot;: null,&#xd;
        &quot;assetOwner&quot;: null,&#xd;
        &quot;assetIP&quot;: null,&#xd;
        &quot;assetType&quot;: &quot;CHARGER&quot;,&#xd;
        &quot;createdTime&quot;: null,&#xd;
        &quot;lastModifiedTime&quot;: null,&#xd;
        &quot;customerAcceptanceDate&quot;: null,&#xd;
        &quot;provisionDate&quot;: null,&#xd;
        &quot;chargerSerialNumber&quot;: &quot;00120c2df6a50a01&quot;,&#xd;
        &quot;chargerFirmwareVersion&quot;: null,&#xd;
        &quot;lastSoftwareUpdate&quot;: null,&#xd;
        &quot;chargerName&quot;: &quot;KA Shop 13&quot;,&#xd;
        &quot;chargerVendor&quot;: &quot;Proterra&quot;,&#xd;
        &quot;chargerModel&quot;: &quot;Proterra-PCS-60&quot;,&#xd;
        &quot;chargerSpecSheetLink&quot;: null,&#xd;
        &quot;chargerType&quot;: &quot;CCS 1.0&quot;,&#xd;
        &quot;maxCurrent&quot;: null,&#xd;
        &quot;maxVoltage&quot;: null,&#xd;
        &quot;chargerConfiguration&quot;: null,&#xd;
        &quot;ocppId&quot;: &quot;00120c2df6a50a01&quot;,&#xd;
        &quot;timezone&quot;: &quot;America/Denver&quot;,&#xd;
        &quot;mfgDate&quot;: null,&#xd;
        &quot;chargerSpec&quot;: null,&#xd;
        &quot;chargerLocation&quot;: {&#xd;
          &quot;addressId&quot;: &quot;b4a60298-de2f-4b5d-b191-0fb6c6226694&quot;,&#xd;
          &quot;addressAbbreviation&quot;: null,&#xd;
          &quot;addressLine1&quot;: &quot;12403 Fort Rd NW, Edmonton, AB T5B 2B7, Canada&quot;,&#xd;
          &quot;addressLine2&quot;: null,&#xd;
          &quot;city&quot;: &quot;Edmonton&quot;,&#xd;
          &quot;state&quot;: null,&#xd;
          &quot;zipCode&quot;: null,&#xd;
          &quot;country&quot;: null,&#xd;
          &quot;latitude&quot;: 53.5789232,&#xd;
          &quot;longitude&quot;: -113.4565009&#xd;
        },&#xd;
        &quot;meter&quot;: {&#xd;
          &quot;meterId&quot;: &quot;3904dea5-c890-4ea6-9507-a1c3f8bdd551&quot;,&#xd;
          &quot;meterSerialNumber&quot;: null,&#xd;
          &quot;meterType&quot;: null,&#xd;
          &quot;meterName&quot;: null,&#xd;
          &quot;meterLocation&quot;: null&#xd;
        },&#xd;
        &quot;dispensers&quot;: [],&#xd;
        &quot;connectivities&quot;: [],&#xd;
        &quot;excludedFromChargePlan&quot;: null,&#xd;
        &quot;customerChargerName&quot;: null,&#xd;
        &quot;mfgLocation&quot;: null,&#xd;
        &quot;cradlePointSerialNumber&quot;: &quot;&quot;,&#xd;
        &quot;specialLocationOfCharger&quot;: null,&#xd;
        &quot;cellularServiceProvider&quot;: null,&#xd;
        &quot;cellularSIMNumber&quot;: null,&#xd;
        &quot;cellularIMEI&quot;: null,&#xd;
        &quot;cellularIMSI&quot;: null,&#xd;
        &quot;cellularMAC&quot;: null,&#xd;
        &quot;cellularIP&quot;: &quot;&quot;,&#xd;
        &quot;cellularPhoneNum&quot;: null,&#xd;
        &quot;cellularAPN&quot;: null,&#xd;
        &quot;cellularICCID&quot;: &quot;&quot;,&#xd;
        &quot;vendorId&quot;: &quot;EMBC 003&quot;,&#xd;
        &quot;specificChargerLocation&quot;: &quot;Shop&quot;,&#xd;
        &quot;ocppMultiplexerServers&quot;: [],&#xd;
        &quot;chargerAllowedToTalkToMultiplexer&quot;: false&#xd;
      }&#xd;
    },&#xd;
    {&#xd;
      &quot;linkId&quot;: &quot;894b3209-8a12-4272-adfa-987d913f770a&quot;,&#xd;
      &quot;assetId&quot;: &quot;b4c04864-0623-4361-977a-390c00ad97b2&quot;,&#xd;
      &quot;chargePlanId&quot;: &quot;b10fd46d-19c7-4ca7-b617-a38ff799ae63&quot;,&#xd;
      &quot;charger&quot;: {&#xd;
        &quot;assetId&quot;: &quot;b4c04864-0623-4361-977a-390c00ad97b2&quot;,&#xd;
        &quot;garageId&quot;: &quot;3a91bb79-af4b-4ab6-8f35-970307a15183&quot;,&#xd;
        &quot;assetTenant&quot;: null,&#xd;
        &quot;assetOwner&quot;: null,&#xd;
        &quot;assetIP&quot;: null,&#xd;
        &quot;assetType&quot;: &quot;CHARGER&quot;,&#xd;
        &quot;createdTime&quot;: null,&#xd;
        &quot;lastModifiedTime&quot;: 1602058719000,&#xd;
        &quot;customerAcceptanceDate&quot;: null,&#xd;
        &quot;provisionDate&quot;: null,&#xd;
        &quot;chargerSerialNumber&quot;: &quot;00120C2DF6B05901&quot;,&#xd;
        &quot;chargerFirmwareVersion&quot;: null,&#xd;
        &quot;lastSoftwareUpdate&quot;: null,&#xd;
        &quot;chargerName&quot;: &quot;KA Shop 11&quot;,&#xd;
        &quot;chargerVendor&quot;: &quot;Proterra&quot;,&#xd;
        &quot;chargerModel&quot;: &quot;Proterra-PCS-60&quot;,&#xd;
        &quot;chargerSpecSheetLink&quot;: null,&#xd;
        &quot;chargerType&quot;: &quot;CCS 1.0&quot;,&#xd;
        &quot;maxCurrent&quot;: null,&#xd;
        &quot;maxVoltage&quot;: null,&#xd;
        &quot;chargerConfiguration&quot;: null,&#xd;
        &quot;ocppId&quot;: &quot;00120C2DF6B05901&quot;,&#xd;
        &quot;timezone&quot;: &quot;America/Denver&quot;,&#xd;
        &quot;mfgDate&quot;: null,&#xd;
        &quot;chargerSpec&quot;: null,&#xd;
        &quot;chargerLocation&quot;: {&#xd;
          &quot;addressId&quot;: &quot;4f2931ad-f445-4775-be6c-20e4eee79feb&quot;,&#xd;
          &quot;addressAbbreviation&quot;: null,&#xd;
          &quot;addressLine1&quot;: &quot;12403 Fort Rd NW, Edmonton, AB T5B 2B7, Canada&quot;,&#xd;
          &quot;addressLine2&quot;: null,&#xd;
          &quot;city&quot;: &quot;Edmonton&quot;,&#xd;
          &quot;state&quot;: null,&#xd;
          &quot;zipCode&quot;: null,&#xd;
          &quot;country&quot;: null,&#xd;
          &quot;latitude&quot;: 53.5789232,&#xd;
          &quot;longitude&quot;: -113.4565009&#xd;
        },&#xd;
        &quot;meter&quot;: {&#xd;
          &quot;meterId&quot;: &quot;ea9677ab-0171-4194-914e-476834a85862&quot;,&#xd;
          &quot;meterSerialNumber&quot;: null,&#xd;
          &quot;meterType&quot;: null,&#xd;
          &quot;meterName&quot;: null,&#xd;
          &quot;meterLocation&quot;: null&#xd;
        },&#xd;
        &quot;dispensers&quot;: [],&#xd;
        &quot;connectivities&quot;: [],&#xd;
        &quot;excludedFromChargePlan&quot;: null,&#xd;
        &quot;customerChargerName&quot;: null,&#xd;
        &quot;mfgLocation&quot;: null,&#xd;
        &quot;cradlePointSerialNumber&quot;: &quot;&quot;,&#xd;
        &quot;specialLocationOfCharger&quot;: null,&#xd;
        &quot;cellularServiceProvider&quot;: null,&#xd;
        &quot;cellularSIMNumber&quot;: null,&#xd;
        &quot;cellularIMEI&quot;: null,&#xd;
        &quot;cellularIMSI&quot;: null,&#xd;
        &quot;cellularMAC&quot;: null,&#xd;
        &quot;cellularIP&quot;: &quot;&quot;,&#xd;
        &quot;cellularPhoneNum&quot;: null,&#xd;
        &quot;cellularAPN&quot;: null,&#xd;
        &quot;cellularICCID&quot;: &quot;&quot;,&#xd;
        &quot;vendorId&quot;: &quot;EMBC 005&quot;,&#xd;
        &quot;specificChargerLocation&quot;: &quot;Shop&quot;,&#xd;
        &quot;ocppMultiplexerServers&quot;: [],&#xd;
        &quot;chargerAllowedToTalkToMultiplexer&quot;: false&#xd;
      }&#xd;
    },&#xd;
    {&#xd;
      &quot;linkId&quot;: &quot;8e30406d-502c-40bc-aed6-9457676f002f&quot;,&#xd;
      &quot;assetId&quot;: &quot;57edc7cd-912b-44f7-bd9f-eeb6226ce58d&quot;,&#xd;
      &quot;chargePlanId&quot;: &quot;b10fd46d-19c7-4ca7-b617-a38ff799ae63&quot;,&#xd;
      &quot;charger&quot;: {&#xd;
        &quot;assetId&quot;: &quot;57edc7cd-912b-44f7-bd9f-eeb6226ce58d&quot;,&#xd;
        &quot;garageId&quot;: &quot;8cbc5a33-1940-47c3-b3d2-a884a0bd6a1f&quot;,&#xd;
        &quot;assetTenant&quot;: null,&#xd;
        &quot;assetOwner&quot;: null,&#xd;
        &quot;assetIP&quot;: null,&#xd;
        &quot;assetType&quot;: &quot;CHARGER&quot;,&#xd;
        &quot;createdTime&quot;: null,&#xd;
        &quot;lastModifiedTime&quot;: 1601386117000,&#xd;
        &quot;customerAcceptanceDate&quot;: null,&#xd;
        &quot;provisionDate&quot;: null,&#xd;
        &quot;chargerSerialNumber&quot;: &quot;NAMHVC150-US1-1619-974&quot;,&#xd;
        &quot;chargerFirmwareVersion&quot;: null,&#xd;
        &quot;lastSoftwareUpdate&quot;: null,&#xd;
        &quot;chargerName&quot;: &quot;CENT 36-2&quot;,&#xd;
        &quot;chargerVendor&quot;: &quot;ABB&quot;,&#xd;
        &quot;chargerModel&quot;: &quot;HVC-150PD&quot;,&#xd;
        &quot;chargerSpecSheetLink&quot;: null,&#xd;
        &quot;chargerType&quot;: &quot;Pantograph&quot;,&#xd;
        &quot;maxCurrent&quot;: null,&#xd;
        &quot;maxVoltage&quot;: null,&#xd;
        &quot;chargerConfiguration&quot;: null,&#xd;
        &quot;ocppId&quot;: &quot;NAMHVC150-US1-1619-974&quot;,&#xd;
        &quot;timezone&quot;: &quot;America/Denver&quot;,&#xd;
        &quot;mfgDate&quot;: null,&#xd;
        &quot;chargerSpec&quot;: null,&#xd;
        &quot;chargerLocation&quot;: {&#xd;
          &quot;addressId&quot;: &quot;cc1fb5bb-7562-4a63-96e5-b8532763ac21&quot;,&#xd;
          &quot;addressAbbreviation&quot;: null,&#xd;
          &quot;addressLine1&quot;: &quot;15520 Ellerslie Rd SW, Edmonton, AB T6W 1A4, Canada&quot;,&#xd;
          &quot;addressLine2&quot;: null,&#xd;
          &quot;city&quot;: &quot;Edmonton&quot;,&#xd;
          &quot;state&quot;: null,&#xd;
          &quot;zipCode&quot;: null,&#xd;
          &quot;country&quot;: null,&#xd;
          &quot;latitude&quot;: 53.4260169,&#xd;
          &quot;longitude&quot;: -113.5867352&#xd;
        },&#xd;
        &quot;meter&quot;: {&#xd;
          &quot;meterId&quot;: &quot;15d64d6e-16b7-4aa7-8a27-1a018cc64c7b&quot;,&#xd;
          &quot;meterSerialNumber&quot;: null,&#xd;
          &quot;meterType&quot;: null,&#xd;
          &quot;meterName&quot;: null,&#xd;
          &quot;meterLocation&quot;: null&#xd;
        },&#xd;
        &quot;dispensers&quot;: [],&#xd;
        &quot;connectivities&quot;: [],&#xd;
        &quot;excludedFromChargePlan&quot;: null,&#xd;
        &quot;customerChargerName&quot;: null,&#xd;
        &quot;mfgLocation&quot;: null,&#xd;
        &quot;cradlePointSerialNumber&quot;: &quot;&quot;,&#xd;
        &quot;specialLocationOfCharger&quot;: null,&#xd;
        &quot;cellularServiceProvider&quot;: null,&#xd;
        &quot;cellularSIMNumber&quot;: null,&#xd;
        &quot;cellularIMEI&quot;: null,&#xd;
        &quot;cellularIMSI&quot;: null,&#xd;
        &quot;cellularMAC&quot;: null,&#xd;
        &quot;cellularIP&quot;: &quot;&quot;,&#xd;
        &quot;cellularPhoneNum&quot;: null,&#xd;
        &quot;cellularAPN&quot;: null,&#xd;
        &quot;cellularICCID&quot;: &quot;&quot;,&#xd;
        &quot;vendorId&quot;: &quot;Centennial_Charger_002&quot;,&#xd;
        &quot;specificChargerLocation&quot;: &quot;Depot&quot;,&#xd;
        &quot;ocppMultiplexerServers&quot;: [],&#xd;
        &quot;chargerAllowedToTalkToMultiplexer&quot;: false&#xd;
      }&#xd;
    },&#xd;
    {&#xd;
      &quot;linkId&quot;: &quot;90594585-4514-4758-8466-525a4993c70b&quot;,&#xd;
      &quot;assetId&quot;: &quot;ce414788-a1b3-4b89-9ea0-040747f84834&quot;,&#xd;
      &quot;chargePlanId&quot;: &quot;b10fd46d-19c7-4ca7-b617-a38ff799ae63&quot;,&#xd;
      &quot;charger&quot;: {&#xd;
        &quot;assetId&quot;: &quot;ce414788-a1b3-4b89-9ea0-040747f84834&quot;,&#xd;
        &quot;garageId&quot;: &quot;3a91bb79-af4b-4ab6-8f35-970307a15183&quot;,&#xd;
        &quot;assetTenant&quot;: null,&#xd;
        &quot;assetOwner&quot;: null,&#xd;
        &quot;assetIP&quot;: null,&#xd;
        &quot;assetType&quot;: &quot;CHARGER&quot;,&#xd;
        &quot;createdTime&quot;: null,&#xd;
        &quot;lastModifiedTime&quot;: null,&#xd;
        &quot;customerAcceptanceDate&quot;: null,&#xd;
        &quot;provisionDate&quot;: null,&#xd;
        &quot;chargerSerialNumber&quot;: &quot;00120c2df6905e01&quot;,&#xd;
        &quot;chargerFirmwareVersion&quot;: null,&#xd;
        &quot;lastSoftwareUpdate&quot;: null,&#xd;
        &quot;chargerName&quot;: &quot;KA Shop 12&quot;,&#xd;
        &quot;chargerVendor&quot;: &quot;Proterra&quot;,&#xd;
        &quot;chargerModel&quot;: &quot;Proterra-PCS-60&quot;,&#xd;
        &quot;chargerSpecSheetLink&quot;: null,&#xd;
        &quot;chargerType&quot;: &quot;CCS 1.0&quot;,&#xd;
        &quot;maxCurrent&quot;: null,&#xd;
        &quot;maxVoltage&quot;: null,&#xd;
        &quot;chargerConfiguration&quot;: null,&#xd;
        &quot;ocppId&quot;: &quot;00120c2df6905e01&quot;,&#xd;
        &quot;timezone&quot;: &quot;America/Denver&quot;,&#xd;
        &quot;mfgDate&quot;: null,&#xd;
        &quot;chargerSpec&quot;: null,&#xd;
        &quot;chargerLocation&quot;: {&#xd;
          &quot;addressId&quot;: &quot;727ab7cd-e99d-4029-9e45-49fb59d60b3f&quot;,&#xd;
          &quot;addressAbbreviation&quot;: null,&#xd;
          &quot;addressLine1&quot;: &quot;12403 Fort Rd NW, Edmonton, AB T5B 2B7, Canada&quot;,&#xd;
          &quot;addressLine2&quot;: null,&#xd;
          &quot;city&quot;: &quot;Edmonton&quot;,&#xd;
          &quot;state&quot;: null,&#xd;
          &quot;zipCode&quot;: null,&#xd;
          &quot;country&quot;: null,&#xd;
          &quot;latitude&quot;: 53.5789232,&#xd;
          &quot;longitude&quot;: -113.4565009&#xd;
        },&#xd;
        &quot;meter&quot;: {&#xd;
          &quot;meterId&quot;: &quot;b0de3777-a79e-45f9-babd-a5092b7bcf03&quot;,&#xd;
          &quot;meterSerialNumber&quot;: null,&#xd;
          &quot;meterType&quot;: null,&#xd;
          &quot;meterName&quot;: null,&#xd;
          &quot;meterLocation&quot;: null&#xd;
        },&#xd;
        &quot;dispensers&quot;: [],&#xd;
        &quot;connectivities&quot;: [],&#xd;
        &quot;excludedFromChargePlan&quot;: null,&#xd;
        &quot;customerChargerName&quot;: null,&#xd;
        &quot;mfgLocation&quot;: null,&#xd;
        &quot;cradlePointSerialNumber&quot;: &quot;&quot;,&#xd;
        &quot;specialLocationOfCharger&quot;: null,&#xd;
        &quot;cellularServiceProvider&quot;: null,&#xd;
        &quot;cellularSIMNumber&quot;: null,&#xd;
        &quot;cellularIMEI&quot;: null,&#xd;
        &quot;cellularIMSI&quot;: null,&#xd;
        &quot;cellularMAC&quot;: null,&#xd;
        &quot;cellularIP&quot;: &quot;&quot;,&#xd;
        &quot;cellularPhoneNum&quot;: null,&#xd;
        &quot;cellularAPN&quot;: null,&#xd;
        &quot;cellularICCID&quot;: &quot;&quot;,&#xd;
        &quot;vendorId&quot;: &quot;EMBC 004&quot;,&#xd;
        &quot;specificChargerLocation&quot;: &quot;Shop&quot;,&#xd;
        &quot;ocppMultiplexerServers&quot;: [],&#xd;
        &quot;chargerAllowedToTalkToMultiplexer&quot;: false&#xd;
      }&#xd;
    },&#xd;
    {&#xd;
      &quot;linkId&quot;: &quot;ad4592f1-d22b-4329-bbe3-bb59b0e4b4e6&quot;,&#xd;
      &quot;assetId&quot;: &quot;99474eaa-7f44-4744-ad30-f4faa109ca3b&quot;,&#xd;
      &quot;chargePlanId&quot;: &quot;b10fd46d-19c7-4ca7-b617-a38ff799ae63&quot;,&#xd;
      &quot;charger&quot;: {&#xd;
        &quot;assetId&quot;: &quot;99474eaa-7f44-4744-ad30-f4faa109ca3b&quot;,&#xd;
        &quot;garageId&quot;: &quot;8cbc5a33-1940-47c3-b3d2-a884a0bd6a1f&quot;,&#xd;
        &quot;assetTenant&quot;: null,&#xd;
        &quot;assetOwner&quot;: null,&#xd;
        &quot;assetIP&quot;: null,&#xd;
        &quot;assetType&quot;: &quot;CHARGER&quot;,&#xd;
        &quot;createdTime&quot;: null,&#xd;
        &quot;lastModifiedTime&quot;: null,&#xd;
        &quot;customerAcceptanceDate&quot;: null,&#xd;
        &quot;provisionDate&quot;: null,&#xd;
        &quot;chargerSerialNumber&quot;: &quot;NAMHVC150-US1-1619-915&quot;,&#xd;
        &quot;chargerFirmwareVersion&quot;: null,&#xd;
        &quot;lastSoftwareUpdate&quot;: null,&#xd;
        &quot;chargerName&quot;: &quot;CENT 36-11&quot;,&#xd;
        &quot;chargerVendor&quot;: &quot;ABB&quot;,&#xd;
        &quot;chargerModel&quot;: &quot;HVC-150PD&quot;,&#xd;
        &quot;chargerSpecSheetLink&quot;: null,&#xd;
        &quot;chargerType&quot;: &quot;Pantograph&quot;,&#xd;
        &quot;maxCurrent&quot;: null,&#xd;
        &quot;maxVoltage&quot;: null,&#xd;
        &quot;chargerConfiguration&quot;: null,&#xd;
        &quot;ocppId&quot;: &quot;NAMHVC150-US1-1619-915&quot;,&#xd;
        &quot;timezone&quot;: &quot;America/Denver&quot;,&#xd;
        &quot;mfgDate&quot;: null,&#xd;
        &quot;chargerSpec&quot;: null,&#xd;
        &quot;chargerLocation&quot;: null,&#xd;
        &quot;meter&quot;: {&#xd;
          &quot;meterId&quot;: &quot;91b4c36f-532d-4012-89d2-2b3fe8e91a2e&quot;,&#xd;
          &quot;meterSerialNumber&quot;: null,&#xd;
          &quot;meterType&quot;: null,&#xd;
          &quot;meterName&quot;: null,&#xd;
          &quot;meterLocation&quot;: null&#xd;
        },&#xd;
        &quot;dispensers&quot;: [],&#xd;
        &quot;connectivities&quot;: [],&#xd;
        &quot;excludedFromChargePlan&quot;: null,&#xd;
        &quot;customerChargerName&quot;: null,&#xd;
        &quot;mfgLocation&quot;: null,&#xd;
        &quot;cradlePointSerialNumber&quot;: &quot;&quot;,&#xd;
        &quot;specialLocationOfCharger&quot;: null,&#xd;
        &quot;cellularServiceProvider&quot;: null,&#xd;
        &quot;cellularSIMNumber&quot;: null,&#xd;
        &quot;cellularIMEI&quot;: null,&#xd;
        &quot;cellularIMSI&quot;: null,&#xd;
        &quot;cellularMAC&quot;: null,&#xd;
        &quot;cellularIP&quot;: &quot;&quot;,&#xd;
        &quot;cellularPhoneNum&quot;: null,&#xd;
        &quot;cellularAPN&quot;: null,&#xd;
        &quot;cellularICCID&quot;: &quot;&quot;,&#xd;
        &quot;vendorId&quot;: &quot;Centennial_Charger_011&quot;,&#xd;
        &quot;specificChargerLocation&quot;: &quot;Depot&quot;,&#xd;
        &quot;ocppMultiplexerServers&quot;: [],&#xd;
        &quot;chargerAllowedToTalkToMultiplexer&quot;: false&#xd;
      }&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/chargeplans/${NEW_CHARGE_PLAN_ID}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/chargeplans/chargerassociations" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&#xd;
  &quot;57b6e734-a7a6-4b81-9a2f-59b7ea54a5b1&quot;,&#xd;
  &quot;99474eaa-7f44-4744-ad30-f4faa109ca3b&quot;,&#xd;
  &quot;57edc7cd-912b-44f7-bd9f-eeb6226ce58d&quot;,&#xd;
  &quot;5add0996-66a4-4a9f-b22f-5514348e00aa&quot;,&#xd;
  &quot;f9f0c2b6-5e7a-4d3e-8241-07f6c971a9c6&quot;,&#xd;
  &quot;c9070ce3-734c-4616-8b3b-a0f5687969ad&quot;,&#xd;
  &quot;a4e2c36d-918c-472c-8f4d-0184566ee31e&quot;,&#xd;
  &quot;b4c04864-0623-4361-977a-390c00ad97b2&quot;,&#xd;
  &quot;ce414788-a1b3-4b89-9ea0-040747f84834&quot;,&#xd;
  &quot;b2ce0c87-a2f9-418e-88bb-ce3dcec3f76d&quot;&#xd;
]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/chargeplans/${NEW_CHARGE_PLAN_ID}/chargerassociations?autoRemoveChargers=true</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE /tenants/chargeplans/" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/chargeplans/${NEW_CHARGE_PLAN_ID}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/chargers/aggregateddata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="start" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">start</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,-P1D,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">Power_Active_Import,Power_Offered,SoC</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aggIntervalInS" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">aggIntervalInS</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/chargers/${ABB_CHARGER_OCPP_ID}/aggregateddata</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/chargers/optimizationresponses" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="start" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">start</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,-P1D,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/chargers/${ABB_CHARGER_ASSET_ID}/optimizationresponses</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/chargerdata" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;_source&quot;: [&#xd;
    &quot;request.*&quot;,&#xd;
    &quot;response.*&quot;&#xd;
  ],&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;filter&quot;: [&#xd;
        {&#xd;
          &quot;range&quot;: {&#xd;
            &quot;@timestamp&quot;: {&#xd;
              &quot;gte&quot;: &quot;${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,-P1D,,)}&quot;,&#xd;
              &quot;lt&quot;: &quot;${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,,,)}&quot;&#xd;
            }&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;term&quot;: {&#xd;
            &quot;chargerName&quot;: &quot;${ABB_CHARGER_OCPP_ID}&quot;&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;term&quot;: {&#xd;
            &quot;OCPPRequestTypes&quot;: &quot;setChargingProfile&quot;&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;sort&quot;: [&#xd;
    {&#xd;
      &quot;@timestamp&quot;: {&#xd;
        &quot;order&quot;: &quot;desc&quot;&#xd;
      }&#xd;
    }&#xd;
  ],&#xd;
  &quot;size&quot;: 1000&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/chargerdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CREATE /tenants/vehicles" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;garageId&quot;: null,&#xd;
  &quot;vehicleName1&quot;: &quot;ETS - JMX${__timeShift(MMddHHmmss,,,,)}&quot;,&#xd;
  &quot;vehicleMake&quot;: &quot;Proterra&quot;,&#xd;
  &quot;modelConfig&quot;: &quot;E2-2d&quot;,&#xd;
  &quot;vehicleMfgDate&quot;: &quot;${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;,,-P365D,,)}&quot;,&#xd;
  &quot;weeklyReportFlag&quot;: false,&#xd;
  &quot;nrelReportFlag&quot;: false,&#xd;
  &quot;timezone&quot;: &quot;America/New_York&quot;,&#xd;
  &quot;gatewaySN&quot;: &quot;&quot;,&#xd;
  &quot;vehicleVIN&quot;: &quot;1M9TH16J0JL816280&quot;,&#xd;
  &quot;customerFleetName&quot;: &quot;ETS&quot;,&#xd;
  &quot;vehicleModel&quot;: &quot;E2&quot;,&#xd;
  &quot;partNum&quot;: &quot;26118&quot;,&#xd;
  &quot;batteryCapacity&quot;: &quot;660&quot;,&#xd;
  &quot;vehicleMfgLocation&quot;: &quot;City of Industry, CA, USA&quot;,&#xd;
  &quot;vehicleName2&quot;: &quot;JMX-${__timeShift(MMddHHmmss,,,,)}&quot;,&#xd;
  &quot;address&quot;: &quot;&quot;,&#xd;
  &quot;inService&quot;: false,&#xd;
  &quot;vehicleDepotLocation&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/vehicles</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET NEW VEHICLE ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">NEW_VEHICLE_ID; NEW_VEHICLE_NAME1; NEW_VEHICLE_NAME2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.assetId; $.vehicleName1; $.vehicleName2</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND; NOT_FOUND; NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UPDATE /tenants/vehicles/" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;vehicleVIN&quot;: &quot;1M9TH16J0JL816280&quot;,&#xd;
  &quot;vehicleName1&quot;: &quot;${NEW_VEHICLE_NAME1}&quot;,&#xd;
  &quot;customerFleetName&quot;: &quot;ETS&quot;,&#xd;
  &quot;vehicleMake&quot;: &quot;Proterra&quot;,&#xd;
  &quot;vehicleModel&quot;: &quot;E2&quot;,&#xd;
  &quot;modelConfig&quot;: &quot;E2-2d&quot;,&#xd;
  &quot;partNum&quot;: &quot;26118&quot;,&#xd;
  &quot;batteryCapacity&quot;: &quot;660&quot;,&#xd;
  &quot;vehicleMfgDate&quot;: null,&#xd;
  &quot;vehicleMfgLocation&quot;: &quot;City of Industry, CA, USA&quot;,&#xd;
  &quot;weeklyReportFlag&quot;: false,&#xd;
  &quot;nrelReportFlag&quot;: false,&#xd;
  &quot;timezone&quot;: &quot;America/New_York&quot;,&#xd;
  &quot;gatewaySN&quot;: &quot;&quot;,&#xd;
  &quot;vehicleName2&quot;: &quot;${NEW_VEHICLE_NAME2}&quot;,&#xd;
  &quot;address&quot;: &quot;15520 Ellerslie Rd SW, Edmonton, AB T6W 1A4, Canada&quot;,&#xd;
  &quot;garageId&quot;: &quot;&quot;,&#xd;
  &quot;inService&quot;: false,&#xd;
  &quot;vehicleDepotLocation&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/vehicles/${NEW_VEHICLE_ID}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE /assets/" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/assets/${NEW_VEHICLE_ID}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CREATE /tenants/chargers" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;chargerVendor&quot;: &quot;Proterra&quot;,&#xd;
  &quot;chargerModel&quot;: &quot;Proterra-PCS-60&quot;,&#xd;
  &quot;chargerType&quot;: &quot;Pantograph&quot;,&#xd;
  &quot;chargerName&quot;: &quot;ETS - JMX${__timeShift(MMddHHmmss,,,,)}&quot;,&#xd;
  &quot;chargerSerialNumber&quot;: &quot;00120C2DF6A01901&quot;,&#xd;
  &quot;cradlePointSerialNumber&quot;: &quot;&quot;,&#xd;
  &quot;cellularICCID&quot;: &quot;&quot;,&#xd;
  &quot;cellularIP&quot;: &quot;&quot;,&#xd;
  &quot;vendorId&quot;: &quot;&quot;,&#xd;
  &quot;provisionDate&quot;: null,&#xd;
  &quot;customerAcceptanceDate&quot;: null,&#xd;
  &quot;garageId&quot;: &quot;${CENT_GARAGE_ID}&quot;,&#xd;
  &quot;specificChargerLocation&quot;: &quot;&quot;,&#xd;
  &quot;address&quot;: &quot;&quot;,&#xd;
  &quot;timezone&quot;: &quot;America/New_York&quot;,&#xd;
  &quot;ocppId&quot;: &quot;00120C2DF6A01901&quot;,&#xd;
  &quot;name&quot;: &quot;JMX - ${__timeShift(MMddHHmmss,,,,)}&quot;,&#xd;
  &quot;chargerLocation&quot;: null,&#xd;
  &quot;meter&quot;: {}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/chargers</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET NEW CHARGER ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">NEW_CHARGER_ID; NEW_CHARGER_NAME</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.assetId; $.chargerName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND; NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UPDATE /tenants/chargers/" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;chargerVendor&quot;: &quot;Proterra&quot;,&#xd;
  &quot;chargerModel&quot;: &quot;Proterra-PCS-60&quot;,&#xd;
  &quot;chargerType&quot;: &quot;Pantograph&quot;,&#xd;
  &quot;chargerName&quot;: &quot;${NEW_CHARGER_NAME}&quot;,&#xd;
  &quot;chargerSerialNumber&quot;: &quot;00120C2DF6A01901&quot;,&#xd;
  &quot;cradlePointSerialNumber&quot;: &quot;&quot;,&#xd;
  &quot;cellularICCID&quot;: &quot;&quot;,&#xd;
  &quot;cellularIP&quot;: &quot;&quot;,&#xd;
  &quot;vendorId&quot;: &quot;&quot;,&#xd;
  &quot;provisionDate&quot;: null,&#xd;
  &quot;customerAcceptanceDate&quot;: null,&#xd;
  &quot;garageId&quot;: &quot;${CENT_GARAGE_ID}&quot;,&#xd;
  &quot;specificChargerLocation&quot;: &quot;&quot;,&#xd;
  &quot;address&quot;: &quot;&quot;,&#xd;
  &quot;timezone&quot;: &quot;America/New_York&quot;,&#xd;
  &quot;ocppId&quot;: &quot;00120C2DF6A01901&quot;,&#xd;
  &quot;name&quot;: &quot;${NEW_CHARGER_NAME}&quot;,&#xd;
  &quot;chargerLocation&quot;: null,&#xd;
  &quot;meter&quot;: {}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/chargers/${NEW_CHARGER_ID}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE /tenants/chargers/" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/chargers/${NEW_CHARGER_ID}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CREATE /tenants" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;orgType&quot;: &quot;Transit Agency&quot;,&#xd;
  &quot;orgName&quot;: &quot;JMX${__timeShift(MMddHHmmss,,,,)} - Transit Agency&quot;,&#xd;
  &quot;internalAcronym&quot;: &quot;JMXTA${__timeShift(MMddHHmmss,,,,)}&quot;,&#xd;
  &quot;address&quot;: {&#xd;
    &quot;addressLine1&quot;: &quot;4900 Meridian St N, Huntsville, AL 35810, USA&quot;,&#xd;
    &quot;city&quot;: &quot;Huntsville&quot;,&#xd;
    &quot;latitude&quot;: 34.7936663,&#xd;
    &quot;longitude&quot;: -86.57152909999999&#xd;
  },&#xd;
  &quot;systemOfMeasure&quot;: &quot;IMPERIAL&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET NEW TENANT ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">NEW_TENANT_ID; NEW_TENANT_NAME; NEW_TENANT_FLEET_NAME</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.orgId; $.orgName; $.internalAcronym</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND; NOT_FOUND; NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UPDATE /tenants/" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;orgType&quot;: &quot;Transit Agency&quot;,&#xd;
  &quot;orgName&quot;: &quot;${NEW_TENANT_NAME}&quot;,&#xd;
  &quot;internalAcronym&quot;: &quot;${NEW_TENANT_FLEET_NAME}&quot;,&#xd;
  &quot;address&quot;: null,&#xd;
  &quot;systemOfMeasure&quot;: &quot;IMPERIAL&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${NEW_TENANT_ID}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE /tenants/" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${NEW_TENANT_ID}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/tenantroles" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/ams/v1/tenants/${ETS_TENANT_ID}/tenantroles</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CREATE /tenants/tenantAdmins" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;firstName&quot;: &quot;Ajay&quot;,&#xd;
  &quot;lastName&quot;: &quot;JMX Admin - ${__timeShift(MMddHHmmss,,,,)}&quot;,&#xd;
  &quot;email&quot;: &quot;ajay.proterra2020+${TEST_ENV}_jmxadmin${__timeShift(MMddHHmmss,,,,)}@gmail.com&quot;,&#xd;
  &quot;address&quot;: {&#xd;
    &quot;addressLine1&quot;: &quot;15520 Ellerslie Rd SW, Edmonton, AB T6W 1A4, Canada&quot;&#xd;
  },&#xd;
  &quot;Kathleen Andrews&quot;: true,&#xd;
  &quot;Centennial&quot;: true,&#xd;
  &quot;garageId&quot;: &quot;${CENT_GARAGE_ID}&quot;,&#xd;
  &quot;assignedRole&quot;: null,&#xd;
  &quot;accessedGarageIds&quot;: [&#xd;
    &quot;${CENT_GARAGE_ID}&quot;,&#xd;
    &quot;${KATG_GARAGE_ID}&quot;&#xd;
  ],&#xd;
  &quot;defaultGarageId&quot;: &quot;${CENT_GARAGE_ID}&quot;,&#xd;
  &quot;phone&quot;: &quot;&quot;,&#xd;
  &quot;roleInformation&quot;: &quot;tenant_admin&quot;,&#xd;
  &quot;userRole&quot;: &quot;TENANT_ADMIN&quot;,&#xd;
  &quot;userName&quot;: &quot;ajay.proterra2020+${TEST_ENV}_jmxadmin${__timeShift(MMddHHmmss,,,,)}@gmail.com&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/tenantAdmins</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET NEW TENANT ADMIN ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">NEW_TENANT_ADMIN_ID; NEW_TENANT_ADMIN_LAST_NAME; NEW_TENANT_ADMIN_USER_NAME</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.userId; $.lastName; $.userName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND; NOT_FOUND; NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UPDATE /tenants/tenantusers/ssoUser/" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;firstName&quot;: &quot;Ajay&quot;,&#xd;
  &quot;lastName&quot;: &quot;${NEW_TENANT_ADMIN_LAST_NAME}&quot;,&#xd;
  &quot;email&quot;: &quot;${NEW_TENANT_ADMIN_USER_NAME}&quot;,&#xd;
  &quot;address&quot;: {&#xd;
    &quot;addressLine1&quot;: &quot;15520 Ellerslie Rd SW, Edmonton, AB T6W 1A4, Canada&quot;&#xd;
  },&#xd;
  &quot;Kathleen Andrews&quot;: true,&#xd;
  &quot;Centennial&quot;: true,&#xd;
  &quot;garageId&quot;: &quot;${KATG_GARAGE_ID}&quot;,&#xd;
  &quot;assignedRole&quot;: {&#xd;
    &quot;assignRole&quot;: [&#xd;
      &quot;admin&quot;&#xd;
    ]&#xd;
  },&#xd;
  &quot;accessedGarageIds&quot;: [&#xd;
    &quot;${CENT_GARAGE_ID}&quot;,&#xd;
    &quot;${KATG_GARAGE_ID}&quot;&#xd;
  ],&#xd;
  &quot;defaultGarageId&quot;: &quot;${KATG_GARAGE_ID}&quot;,&#xd;
  &quot;phone&quot;: &quot;&quot;,&#xd;
  &quot;userName&quot;: &quot;${NEW_TENANT_ADMIN_USER_NAME}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/ams/v1/tenants/${ETS_TENANT_ID}/tenantusers/ssoUser/${NEW_TENANT_ADMIN_ID}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE /tenants/tenantAdmins/" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/tenantAdmins/${NEW_TENANT_ADMIN_ID}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CREATE /tenants/tenantUsers" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;firstName&quot;: &quot;Ajay&quot;,&#xd;
  &quot;lastName&quot;: &quot;JMX User - ${__timeShift(MMddHHmmss,,,,)}&quot;,&#xd;
  &quot;email&quot;: &quot;ajay.proterra2020+${TEST_ENV}_jmxuser${__timeShift(MMddHHmmss,,,,)}@gmail.com&quot;,&#xd;
  &quot;address&quot;: {&#xd;
    &quot;addressLine1&quot;: &quot;15520 Ellerslie Rd SW, Edmonton, AB T6W 1A4, Canada&quot;&#xd;
  },&#xd;
  &quot;Kathleen Andrews&quot;: true,&#xd;
  &quot;Centennial&quot;: true,&#xd;
  &quot;garageId&quot;: &quot;${CENT_GARAGE_ID}&quot;,&#xd;
  &quot;assignedRole&quot;: null,&#xd;
  &quot;accessedGarageIds&quot;: [&#xd;
    &quot;${CENT_GARAGE_ID}&quot;,&#xd;
    &quot;${KATG_GARAGE_ID}&quot;&#xd;
  ],&#xd;
  &quot;defaultGarageId&quot;: &quot;${CENT_GARAGE_ID}&quot;,&#xd;
  &quot;phone&quot;: &quot;&quot;,&#xd;
  &quot;roleInformation&quot;: &quot;tenant_readonly&quot;,&#xd;
  &quot;userRole&quot;: &quot;END_USER&quot;,&#xd;
  &quot;userName&quot;: &quot;ajay.proterra2020+${TEST_ENV}_jmxuser${__timeShift(MMddHHmmss,,,,)}@gmail.com&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/tenantUsers</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET NEW TENANT USER ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">NEW_TENANT_USER_ID; NEW_TENANT_USER_LAST_NAME; NEW_TENANT_USER_USER_NAME</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.userId; $.lastName; $.userName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND; NOT_FOUND; NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UPDATE /tenants/tenantusers/ssoUser/" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;firstName&quot;: &quot;Ajay&quot;,&#xd;
  &quot;lastName&quot;: &quot;${NEW_TENANT_USER_LAST_NAME}&quot;,&#xd;
  &quot;email&quot;: &quot;${NEW_TENANT_USER_USER_NAME}&quot;,&#xd;
  &quot;address&quot;: {&#xd;
    &quot;addressLine1&quot;: &quot;15520 Ellerslie Rd SW, Edmonton, AB T6W 1A4, Canada&quot;&#xd;
  },&#xd;
  &quot;Kathleen Andrews&quot;: true,&#xd;
  &quot;Centennial&quot;: true,&#xd;
  &quot;garageId&quot;: &quot;${KATG_GARAGE_ID}&quot;,&#xd;
  &quot;assignedRole&quot;: {&#xd;
    &quot;assignRole&quot;: [&#xd;
      &quot;read-only&quot;&#xd;
    ]&#xd;
  },&#xd;
  &quot;accessedGarageIds&quot;: [&#xd;
    &quot;${CENT_GARAGE_ID}&quot;,&#xd;
    &quot;${KATG_GARAGE_ID}&quot;&#xd;
  ],&#xd;
  &quot;defaultGarageId&quot;: &quot;${KATG_GARAGE_ID}&quot;,&#xd;
  &quot;phone&quot;: &quot;&quot;,&#xd;
  &quot;userName&quot;: &quot;${NEW_TENANT_USER_USER_NAME}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/ams/v1/tenants/${ETS_TENANT_ID}/tenantusers/ssoUser/${NEW_TENANT_USER_ID}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE /tenants/tenantUsers/" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/tenantUsers/${NEW_TENANT_USER_ID}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UPDATE /internalUsers/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;firstName&quot;: &quot;Ajay&quot;,&#xd;
  &quot;middleName&quot;: &quot;&quot;,&#xd;
  &quot;lastName&quot;: &quot;Proterra ReadOnly&quot;,&#xd;
  &quot;address&quot;: {&#xd;
    &quot;addressLine1&quot;: &quot;1815 Rollins Road Burlingame, CA 94010&quot;&#xd;
  },&#xd;
  &quot;phone&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/internalUsers/${CURRENT_PROTERRA_READONLY_USER_ID}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${PROTERRA_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TENANT ADMIN" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /cognitoLogin" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;userName&quot;: &quot;${TENANT_ADMIN_USERNAME}&quot;,&#xd;
    &quot;userPassword&quot;: &quot;${TENANT_ADMIN_PASSWORD}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/cognitoLogin</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET TENANT ADMIN ACCESS TOKEN" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">TENANT_ADMIN_ACCESS_TOKEN</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/assets" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/assets</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/trackSetups" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenantId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenantId</stringProp>
                  <stringProp name="Argument.value">${ETS_TENANT_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${CCSS_ENV}/v1/tenants/${ETS_TENANT_ID}/trackSetups</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET TRACK SETUP IDs" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">KATG_GARAGE_ID; CENT_GARAGE_ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.[?(@.customerGarageId==2)].trackSetupId; $.[?(@.customerGarageId==8)].trackSetupId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND; NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/tenantAdmins" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/tenantAdmins</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET CURRENT TENANT ADMIN ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">CURRENT_TENANT_ADMIN_USER_ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.[?(@.userName==&apos;${TENANT_ADMIN_USERNAME}&apos;)].userId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/tenantUsers" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/tenantUsers</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET CURRENT TENANT READONLY ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">CURRENT_TENANT_READONLY_USER_ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.[?(@.userName==&apos;${TENANT_READONLY_USERNAME}&apos;)].userId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /glossary" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${GLOSSARY_ENV}/glossary</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /ui/tabs" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/ams/v1/ui/tabs</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/counts/bus" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;filter&quot;: [&#xd;
        {&#xd;
          &quot;query_string&quot;: {&#xd;
            &quot;query&quot;: &quot;resolved:false&quot;&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;query_string&quot;: {&#xd;
            &quot;query&quot;: &quot;busMetadata.fleetName:ETS&quot;&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;range&quot;: {&#xd;
            &quot;faultTimestamp&quot;: {&#xd;
              &quot;gte&quot;: &quot;now-7d&quot;,&#xd;
              &quot;lte&quot;: &quot;now&quot;&#xd;
            }&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;aggs&quot;: {&#xd;
    &quot;termAgg&quot;: {&#xd;
      &quot;terms&quot;: {&#xd;
        &quot;field&quot;: &quot;busMetadata.fleetName.keyword&quot;&#xd;
      }&#xd;
    }&#xd;
  },&#xd;
  &quot;size&quot;: 0&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/counts/bus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/dashboarddata" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;filter&quot;: [&#xd;
        {&#xd;
          &quot;query_string&quot;: {&#xd;
            &quot;query&quot;: &quot;busMetadata.fleetName:ETS&quot;&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;range&quot;: {&#xd;
            &quot;reportStartDate&quot;: {&#xd;
              &quot;gte&quot;: &quot;2018-01-01&quot;&#xd;
            }&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;size&quot;: 0,&#xd;
  &quot;aggs&quot;: {&#xd;
    &quot;distance&quot;: {&#xd;
      &quot;extended_stats&quot;: {&#xd;
        &quot;field&quot;: &quot;distanceInMiles&quot;&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/dashboarddata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/dashboarddata" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;must&quot;: {&#xd;
        &quot;query_string&quot;: {&#xd;
          &quot;query&quot;: &quot;busMetadata.fleetName:ETS&quot;&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  },&#xd;
  &quot;size&quot;: 0,&#xd;
  &quot;aggs&quot;: {&#xd;
    &quot;histogram&quot;: {&#xd;
      &quot;date_histogram&quot;: {&#xd;
        &quot;field&quot;: &quot;reportEndDate&quot;,&#xd;
        &quot;interval&quot;: &quot;month&quot;&#xd;
      },&#xd;
      &quot;aggs&quot;: {&#xd;
        &quot;distance_over_time&quot;: {&#xd;
          &quot;sum&quot;: {&#xd;
            &quot;field&quot;: &quot;distanceInMiles&quot;&#xd;
          }&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/dashboarddata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/dashboarddata" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;must&quot;: {&#xd;
        &quot;query_string&quot;: {&#xd;
          &quot;query&quot;: &quot;busMetadata.fleetName:ETS&quot;&#xd;
        }&#xd;
      },&#xd;
      &quot;filter&quot;: [&#xd;
        {&#xd;
          &quot;range&quot;: {&#xd;
            &quot;reportStartDate&quot;: {&#xd;
              &quot;gte&quot;: &quot;now-8d&quot;&#xd;
            }&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;size&quot;: 0,&#xd;
  &quot;aggs&quot;: {&#xd;
    &quot;distance&quot;: {&#xd;
      &quot;extended_stats&quot;: {&#xd;
        &quot;field&quot;: &quot;distanceInMiles&quot;&#xd;
      }&#xd;
    },&#xd;
    &quot;energy&quot;: {&#xd;
      &quot;extended_stats&quot;: {&#xd;
        &quot;field&quot;: &quot;totalEnergyChargedInKWH&quot;&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/dashboarddata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/buses/busDetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;BUS-DETAILS-${__UUID}&quot;,&#xd;
  &quot;busVins&quot;: [&#xd;
    &quot;7JZTH13JXKS000158&quot;,&#xd;
    &quot;7JZTH13J2KS000154&quot;,&#xd;
    &quot;7JZTH13J0LS000297&quot;,&#xd;
    &quot;7JZTH13J5KS000164&quot;,&#xd;
    &quot;7JZTH13J9KS000166&quot;,&#xd;
    &quot;7JZTH13J6KS000156&quot;,&#xd;
    &quot;7JZTH13J2KS000171&quot;,&#xd;
    &quot;7JZTH13J7KS000151&quot;,&#xd;
    &quot;7JZTH13J4LS000299&quot;,&#xd;
    &quot;7JZTH13J7LS000300&quot;,&#xd;
    &quot;7JZTH13JXLS000307&quot;,&#xd;
    &quot;7JZTH13J0LS000302&quot;,&#xd;
    &quot;7JZTH13J3LS000309&quot;,&#xd;
    &quot;7JZTH13J1KS000162&quot;,&#xd;
    &quot;7JZTH13J9KS000152&quot;,&#xd;
    &quot;7JZTH13J1LS000308&quot;,&#xd;
    &quot;7JZTH13J2LS000298&quot;,&#xd;
    &quot;7JZTH13JXKS000161&quot;,&#xd;
    &quot;7JZTH13J9LS000315&quot;,&#xd;
    &quot;7JZTH13J1KS000159&quot;,&#xd;
    &quot;7JZTH13J8KS000157&quot;,&#xd;
    &quot;7JZTH13J4KS000169&quot;,&#xd;
    &quot;7JZTH13J8LS000306&quot;,&#xd;
    &quot;7JZTH13J6LS000305&quot;,&#xd;
    &quot;7JZTH13J0KS000170&quot;,&#xd;
    &quot;7JZTH13J0KS000167&quot;,&#xd;
    &quot;7JZTH13J1LS000308&quot;,&#xd;
    &quot;7JZTH13J4KS000155&quot;,&#xd;
    &quot;7JZTH13J7KS000165&quot;,&#xd;
    &quot;7JZTH13J2LS000303&quot;,&#xd;
    &quot;7JZTH13J5LS000313&quot;,&#xd;
    &quot;7JZTH13J4LS000304&quot;,&#xd;
    &quot;7JZTH13J2KS000168&quot;,&#xd;
    &quot;7JZTH13J8KS000160&quot;,&#xd;
    &quot;7JZTH13J3LS000312&quot;,&#xd;
    &quot;7JZTH13JXLS000310&quot;,&#xd;
    &quot;7JZTH13J3KS000163&quot;,&#xd;
    &quot;7JZTH13J9LS000301&quot;,&#xd;
    &quot;7JZTH13J7LS000314&quot;,&#xd;
    &quot;7JZTH13J0KS000153&quot;,&#xd;
    &quot;7JZTH13J1LS000311&quot;&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/buses/busDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /ocpp-v16jw/chargers" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${OCPP_ENV}/v1/ocpp-v16jw/chargers</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /ocpp-v16jw/chargersiotecha" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${OCPP_ENV}/v1/ocpp-v16jw/chargersiotecha</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/alerts" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/alerts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CREATE /tenants/alerts" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;orgId&quot;: &quot;${ETS_TENANT_ID}&quot;,&#xd;
  &quot;userId&quot;: &quot;${CURRENT_TENANT_ADMIN_USER_ID}&quot;,&#xd;
  &quot;userName&quot;: &quot;Ajay Customer Admin&quot;,&#xd;
  &quot;userEmail&quot;: &quot;${TENANT_ADMIN_USERNAME}&quot;,&#xd;
  &quot;userPhone&quot;: &quot;&quot;,&#xd;
  &quot;busAlert&quot;: true,&#xd;
  &quot;busID&quot;: &quot;*&quot;,&#xd;
  &quot;busmonday&quot;: true,&#xd;
  &quot;bustuesday&quot;: true,&#xd;
  &quot;buswednesday&quot;: true,&#xd;
  &quot;busthursday&quot;: true,&#xd;
  &quot;busfriday&quot;: true,&#xd;
  &quot;bussaturday&quot;: true,&#xd;
  &quot;bussunday&quot;: true,&#xd;
  &quot;busAlertStartTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;busAlertStopTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;busEmailCritical&quot;: false,&#xd;
  &quot;busEmailError&quot;: false,&#xd;
  &quot;busEmailWarning&quot;: false,&#xd;
  &quot;busEmailInfo&quot;: false,&#xd;
  &quot;busSMSCritical&quot;: false,&#xd;
  &quot;busSMSError&quot;: false,&#xd;
  &quot;busSMSWarning&quot;: false,&#xd;
  &quot;busSMSInfo&quot;: false,&#xd;
  &quot;busPushCritical&quot;: false,&#xd;
  &quot;busPushError&quot;: false,&#xd;
  &quot;busPushWarning&quot;: false,&#xd;
  &quot;busPushInfo&quot;: false,&#xd;
  &quot;chargerAlert&quot;: true,&#xd;
  &quot;chargerID&quot;: &quot;*&quot;,&#xd;
  &quot;chargermonday&quot;: true,&#xd;
  &quot;chargertuesday&quot;: true,&#xd;
  &quot;chargerwednesday&quot;: true,&#xd;
  &quot;chargerthursday&quot;: true,&#xd;
  &quot;chargerfriday&quot;: true,&#xd;
  &quot;chargersaturday&quot;: true,&#xd;
  &quot;chargersunday&quot;: true,&#xd;
  &quot;chargerAlertStartTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;chargerAlertStopTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;chargerEmailCritical&quot;: true,&#xd;
  &quot;chargerEmailError&quot;: true,&#xd;
  &quot;chargerEmailWarning&quot;: true,&#xd;
  &quot;chargerEmailInfo&quot;: true,&#xd;
  &quot;chargerSMSCritical&quot;: false,&#xd;
  &quot;chargerSMSError&quot;: false,&#xd;
  &quot;chargerSMSWarning&quot;: false,&#xd;
  &quot;chargerSMSInfo&quot;: false,&#xd;
  &quot;chargerPushCritical&quot;: false,&#xd;
  &quot;chargerPushError&quot;: false,&#xd;
  &quot;chargerPushWarning&quot;: false,&#xd;
  &quot;chargerPushInfo&quot;: false,&#xd;
  &quot;ruleName&quot;: &quot;Ajay Customer Admin_rule&quot;,&#xd;
  &quot;orgName&quot;: &quot;Edmonton Transit Service&quot;,&#xd;
  &quot;internalAcronym&quot;: &quot;ETS&quot;,&#xd;
  &quot;busName&quot;: &quot;All&quot;,&#xd;
  &quot;busAlertDays&quot;: [&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true&#xd;
  ],&#xd;
  &quot;busEmailNotification&quot;: 0,&#xd;
  &quot;busSMSNotification&quot;: 0,&#xd;
  &quot;busPushNotification&quot;: 0,&#xd;
  &quot;chargerName&quot;: &quot;All&quot;,&#xd;
  &quot;chargerAlertDays&quot;: [&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true&#xd;
  ],&#xd;
  &quot;chargerEmailNotification&quot;: 15,&#xd;
  &quot;chargerSMSNotification&quot;: 0,&#xd;
  &quot;chargerPushNotification&quot;: 0&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/alerts</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET ALERT ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">NEW_ALERT_ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.alertId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UPDATE /tenants/alerts/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;orgId&quot;: &quot;${ETS_TENANT_ID}&quot;,&#xd;
  &quot;userId&quot;: &quot;${CURRENT_TENANT_ADMIN_USER_ID}&quot;,&#xd;
  &quot;userName&quot;: &quot;Ajay Customer Admin&quot;,&#xd;
  &quot;userEmail&quot;: &quot;${TENANT_ADMIN_USERNAME}&quot;,&#xd;
  &quot;userPhone&quot;: &quot;&quot;,&#xd;
  &quot;busAlert&quot;: true,&#xd;
  &quot;busID&quot;: &quot;*&quot;,&#xd;
  &quot;busmonday&quot;: true,&#xd;
  &quot;bustuesday&quot;: true,&#xd;
  &quot;buswednesday&quot;: true,&#xd;
  &quot;busthursday&quot;: true,&#xd;
  &quot;busfriday&quot;: true,&#xd;
  &quot;bussaturday&quot;: true,&#xd;
  &quot;bussunday&quot;: true,&#xd;
  &quot;busAlertStartTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;busAlertStopTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;busEmailCritical&quot;: false,&#xd;
  &quot;busEmailError&quot;: false,&#xd;
  &quot;busEmailWarning&quot;: false,&#xd;
  &quot;busEmailInfo&quot;: false,&#xd;
  &quot;busSMSCritical&quot;: false,&#xd;
  &quot;busSMSError&quot;: false,&#xd;
  &quot;busSMSWarning&quot;: false,&#xd;
  &quot;busSMSInfo&quot;: false,&#xd;
  &quot;busPushCritical&quot;: false,&#xd;
  &quot;busPushError&quot;: false,&#xd;
  &quot;busPushWarning&quot;: false,&#xd;
  &quot;busPushInfo&quot;: false,&#xd;
  &quot;chargerAlert&quot;: true,&#xd;
  &quot;chargerID&quot;: &quot;*&quot;,&#xd;
  &quot;chargermonday&quot;: true,&#xd;
  &quot;chargertuesday&quot;: true,&#xd;
  &quot;chargerwednesday&quot;: true,&#xd;
  &quot;chargerthursday&quot;: true,&#xd;
  &quot;chargerfriday&quot;: true,&#xd;
  &quot;chargersaturday&quot;: true,&#xd;
  &quot;chargersunday&quot;: true,&#xd;
  &quot;chargerAlertStartTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;chargerAlertStopTime&quot;: &quot;11:59 PM&quot;,&#xd;
  &quot;chargerEmailCritical&quot;: true,&#xd;
  &quot;chargerEmailError&quot;: true,&#xd;
  &quot;chargerEmailWarning&quot;: true,&#xd;
  &quot;chargerEmailInfo&quot;: true,&#xd;
  &quot;chargerSMSCritical&quot;: true,&#xd;
  &quot;chargerSMSError&quot;: true,&#xd;
  &quot;chargerSMSWarning&quot;: true,&#xd;
  &quot;chargerSMSInfo&quot;: true,&#xd;
  &quot;chargerPushCritical&quot;: true,&#xd;
  &quot;chargerPushError&quot;: true,&#xd;
  &quot;chargerPushWarning&quot;: true,&#xd;
  &quot;chargerPushInfo&quot;: true,&#xd;
  &quot;ruleName&quot;: &quot;Ajay Customer Admin_rule&quot;,&#xd;
  &quot;orgName&quot;: &quot;Edmonton Transit Service&quot;,&#xd;
  &quot;internalAcronym&quot;: &quot;ETS&quot;,&#xd;
  &quot;busName&quot;: &quot;All&quot;,&#xd;
  &quot;busAlertDays&quot;: [&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true&#xd;
  ],&#xd;
  &quot;busEmailNotification&quot;: 0,&#xd;
  &quot;busSMSNotification&quot;: 0,&#xd;
  &quot;busPushNotification&quot;: 0,&#xd;
  &quot;chargerName&quot;: &quot;All&quot;,&#xd;
  &quot;chargerAlertDays&quot;: [&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true&#xd;
  ],&#xd;
  &quot;chargerEmailNotification&quot;: 15,&#xd;
  &quot;chargerSMSNotification&quot;: 15,&#xd;
  &quot;chargerPushNotification&quot;: 15&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/alerts/${NEW_ALERT_ID}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE /tenants/alerts/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/alerts/${NEW_ALERT_ID}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/report" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;busName&quot;: &quot;${ETS_BUS_VIN}&quot;,&#xd;
  &quot;date&quot;: &quot;${__timeShift(yyyy-MM-dd,,,,)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/report</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/chargers/sessions" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="start" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">start</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,-P6D,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/chargers/${ABB_CHARGER_OCPP_ID}/sessions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/chargers/aggregateddata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="start" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">start</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;,,-PT1H,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">SoC,Power_Active_Import,Energy_Active_Import_Register,Current_Import,Voltage,RPM,Current_Offered,Temperature,Power_Offered</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aggIntervalInS" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">aggIntervalInS</stringProp>
                  <stringProp name="Argument.value">60</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/chargers/${ABB_CHARGER_OCPP_ID}/aggregateddata</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/reports?reportType=Charger" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="reportType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">reportType</stringProp>
                  <stringProp name="Argument.value">Charger</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fromDay" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromDay</stringProp>
                  <stringProp name="Argument.value">${__timeShift(dd,,-P6D,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="toYear" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toYear</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenantName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenantName</stringProp>
                  <stringProp name="Argument.value">ETS</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fromYear" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromYear</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="toDay" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toDay</stringProp>
                  <stringProp name="Argument.value">${__timeShift(dd,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="toMonth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toMonth</stringProp>
                  <stringProp name="Argument.value">${__timeShift(MM,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fromMonth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromMonth</stringProp>
                  <stringProp name="Argument.value">${__timeShift(MM,,-P6D,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/reports</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/reports?reportType=Charger" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="reportType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">reportType</stringProp>
                  <stringProp name="Argument.value">ignore</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenantName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenantName</stringProp>
                  <stringProp name="Argument.value">ignore</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">Charger/ETS/ETS-_-2020-09-24-2020-10-01-Charger_v0.pdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1610460237536</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${FILE_AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/reports</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/reports?reportType=vsm" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="reportType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">reportType</stringProp>
                  <stringProp name="Argument.value">vsm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fromDay" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromDay</stringProp>
                  <stringProp name="Argument.value">${__timeShift(dd,,-P6D,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="toYear" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toYear</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenantName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenantName</stringProp>
                  <stringProp name="Argument.value">ETS</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fromYear" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromYear</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="toDay" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toDay</stringProp>
                  <stringProp name="Argument.value">${__timeShift(dd,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="toMonth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toMonth</stringProp>
                  <stringProp name="Argument.value">${__timeShift(MM,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fromMonth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromMonth</stringProp>
                  <stringProp name="Argument.value">${__timeShift(MM,,-P6D,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/reports</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/reports?reportType=vsm" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="reportType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">reportType</stringProp>
                  <stringProp name="Argument.value">ignore</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenantName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenantName</stringProp>
                  <stringProp name="Argument.value">ignore</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">vsm/ETS/8000-7JZTH13J7KS000151.csv</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1610460237537</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${FILE_AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/reports</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /reports/customreports" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;url&quot;: &quot;https://kibana.proterra.com:5601/app/kibana#/dashboard/AWDtNvhr3F4CRLkcyUEf?_g=(refreshInterval:(display:&apos;1%20day&apos;,pause:!f,section:3,value:86400000),time:(from:now%2Fy,mode:quick,to:now))&amp;_a=(options:(darkTheme:!f),query:(query_string:(analyze_wildcard:!t,query:&apos;busName:7JZTH13J7KS000151 OR busName:7JZTH13J9KS000152 OR busName:7JZTH13J0KS000153 OR busName:7JZTH13J2KS000154 OR busName:7JZTH13J4KS000155 OR busName:7JZTH13J6KS000156 OR busName:7JZTH13J8KS000157 OR busName:7JZTH13JXKS000158 OR busName:7JZTH13J1KS000159 OR busName:7JZTH13J8KS000160 OR busName:7JZTH13JXKS000161 OR busName:7JZTH13J1KS000162 OR busName:7JZTH13J3KS000163 OR busName:7JZTH13J5KS000164 OR busName:7JZTH13J7KS000165 OR busName:7JZTH13J9KS000166 OR busName:7JZTH13J0KS000167 OR busName:7JZTH13J2KS000168 OR busName:7JZTH13J4KS000169 OR busName:7JZTH13J0KS000170 OR busName:7JZTH13J2KS000171 OR busName:7JZTH13J0LS000297 OR busName:7JZTH13J2LS000298 OR busName:7JZTH13J4LS000299 OR busName:7JZTH13J7LS000300 OR busName:7JZTH13J9LS000301 OR busName:7JZTH13J0LS000302 OR busName:7JZTH13J2LS000303 OR busName:7JZTH13J4LS000304 OR busName:7JZTH13J6LS000305 OR busName:7JZTH13J8LS000306 OR busName:7JZTH13JXLS000307 OR busName:7JZTH13J1LS000308 OR busName:7JZTH13J1LS000308 OR busName:7JZTH13J3LS000309 OR busName:7JZTH13JXLS000310 OR busName:7JZTH13J1LS000311 OR busName:7JZTH13J3LS000312 OR busName:7JZTH13J5LS000313 OR busName:7JZTH13J7LS000314 OR busName:7JZTH13J9LS000315&apos;)))&quot;,&#xd;
  &quot;output_file&quot;: &quot;-ETS-8000_-_7JZTH13J7KS000151-2021-01-12T14:08:58.967Z.pdf&quot;,&#xd;
  &quot;wait_in_s&quot;: 20,&#xd;
  &quot;report_type&quot;: &quot;kibana&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${FILE_AMS_ENV}/v1/reports/customreports</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/tenantroles" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/ams/v1/tenants/${ETS_TENANT_ID}/tenantroles</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UPDATE /tenants/tenantusers/ssoUser/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;firstName&quot;: &quot;Ajay&quot;,&#xd;
  &quot;lastName&quot;: &quot;Customer Admin&quot;,&#xd;
  &quot;email&quot;: &quot;${TENANT_ADMIN_USERNAME}&quot;,&#xd;
  &quot;address&quot;: {&#xd;
    &quot;addressLine1&quot;: &quot;15520 Ellerslie Rd SW, Edmonton, AB T6W 1A4, Canada&quot;&#xd;
  },&#xd;
  &quot;Kathleen Andrews&quot;: true,&#xd;
  &quot;Centennial&quot;: true,&#xd;
  &quot;garageId&quot;: &quot;${CENT_GARAGE_ID}&quot;,&#xd;
  &quot;assignedRole&quot;: {&#xd;
    &quot;assignRole&quot;: [&#xd;
      &quot;admin&quot;&#xd;
    ]&#xd;
  },&#xd;
  &quot;accessedGarageIds&quot;: [&#xd;
    &quot;${CENT_GARAGE_ID}&quot;,&#xd;
    &quot;${KATG_GARAGE_ID}&quot;&#xd;
  ],&#xd;
  &quot;defaultGarageId&quot;: &quot;${CENT_GARAGE_ID}&quot;,&#xd;
  &quot;phone&quot;: &quot;&quot;,&#xd;
  &quot;userName&quot;: &quot;${TENANT_ADMIN_USERNAME}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/ams/v1/tenants/${ETS_TENANT_ID}/tenantusers/ssoUser/${CURRENT_TENANT_ADMIN_USER_ID}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UPDATE /tenants/tenantAdmins/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;firstName&quot;: &quot;Ajay&quot;,&#xd;
  &quot;middleName&quot;: &quot;&quot;,&#xd;
  &quot;lastName&quot;: &quot;Customer Admin&quot;,&#xd;
  &quot;address&quot;: {&#xd;
    &quot;addressLine1&quot;: &quot;15520 Ellerslie Rd SW, Edmonton, AB T6W 1A4, Canada&quot;&#xd;
  },&#xd;
  &quot;phone&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/tenantAdmins/${CURRENT_TENANT_ADMIN_USER_ID}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_ADMIN_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TENANT READONLY" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /cognitoLogin" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;userName&quot;: &quot;${TENANT_READONLY_USERNAME}&quot;,&#xd;
    &quot;userPassword&quot;: &quot;${TENANT_READONLY_PASSWORD}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/cognitoLogin</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET TENANT READONLY ACCESS TOKEN" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">TENANT_READONLY_ACCESS_TOKEN</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/assets" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/assets</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/trackSetups" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenantId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenantId</stringProp>
                  <stringProp name="Argument.value">${ETS_TENANT_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${CCSS_ENV}/v1/tenants/${ETS_TENANT_ID}/trackSetups</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET TRACK SETUP IDs" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">KATG_GARAGE_ID; CENT_GARAGE_ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.[?(@.customerGarageId==2)].trackSetupId; $.[?(@.customerGarageId==8)].trackSetupId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND; NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /glossary" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${GLOSSARY_ENV}/glossary</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /ui/tabs" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/ams/v1/ui/tabs</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/counts/bus" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;filter&quot;: [&#xd;
        {&#xd;
          &quot;query_string&quot;: {&#xd;
            &quot;query&quot;: &quot;resolved:false&quot;&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;query_string&quot;: {&#xd;
            &quot;query&quot;: &quot;busMetadata.fleetName:ETS&quot;&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;range&quot;: {&#xd;
            &quot;faultTimestamp&quot;: {&#xd;
              &quot;gte&quot;: &quot;now-7d&quot;,&#xd;
              &quot;lte&quot;: &quot;now&quot;&#xd;
            }&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;aggs&quot;: {&#xd;
    &quot;termAgg&quot;: {&#xd;
      &quot;terms&quot;: {&#xd;
        &quot;field&quot;: &quot;busMetadata.fleetName.keyword&quot;&#xd;
      }&#xd;
    }&#xd;
  },&#xd;
  &quot;size&quot;: 0&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/counts/bus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/dashboarddata" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;filter&quot;: [&#xd;
        {&#xd;
          &quot;query_string&quot;: {&#xd;
            &quot;query&quot;: &quot;busMetadata.fleetName:ETS&quot;&#xd;
          }&#xd;
        },&#xd;
        {&#xd;
          &quot;range&quot;: {&#xd;
            &quot;reportStartDate&quot;: {&#xd;
              &quot;gte&quot;: &quot;2018-01-01&quot;&#xd;
            }&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;size&quot;: 0,&#xd;
  &quot;aggs&quot;: {&#xd;
    &quot;distance&quot;: {&#xd;
      &quot;extended_stats&quot;: {&#xd;
        &quot;field&quot;: &quot;distanceInMiles&quot;&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/dashboarddata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/dashboarddata" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;must&quot;: {&#xd;
        &quot;query_string&quot;: {&#xd;
          &quot;query&quot;: &quot;busMetadata.fleetName:ETS&quot;&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  },&#xd;
  &quot;size&quot;: 0,&#xd;
  &quot;aggs&quot;: {&#xd;
    &quot;histogram&quot;: {&#xd;
      &quot;date_histogram&quot;: {&#xd;
        &quot;field&quot;: &quot;reportEndDate&quot;,&#xd;
        &quot;interval&quot;: &quot;month&quot;&#xd;
      },&#xd;
      &quot;aggs&quot;: {&#xd;
        &quot;distance_over_time&quot;: {&#xd;
          &quot;sum&quot;: {&#xd;
            &quot;field&quot;: &quot;distanceInMiles&quot;&#xd;
          }&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/dashboarddata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/dashboarddata" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;must&quot;: {&#xd;
        &quot;query_string&quot;: {&#xd;
          &quot;query&quot;: &quot;busMetadata.fleetName:ETS&quot;&#xd;
        }&#xd;
      },&#xd;
      &quot;filter&quot;: [&#xd;
        {&#xd;
          &quot;range&quot;: {&#xd;
            &quot;reportStartDate&quot;: {&#xd;
              &quot;gte&quot;: &quot;now-8d&quot;&#xd;
            }&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;size&quot;: 0,&#xd;
  &quot;aggs&quot;: {&#xd;
    &quot;distance&quot;: {&#xd;
      &quot;extended_stats&quot;: {&#xd;
        &quot;field&quot;: &quot;distanceInMiles&quot;&#xd;
      }&#xd;
    },&#xd;
    &quot;energy&quot;: {&#xd;
      &quot;extended_stats&quot;: {&#xd;
        &quot;field&quot;: &quot;totalEnergyChargedInKWH&quot;&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/dashboarddata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/buses/busDetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;BUS-DETAILS-${__UUID}&quot;,&#xd;
  &quot;busVins&quot;: [&#xd;
    &quot;7JZTH13JXKS000158&quot;,&#xd;
    &quot;7JZTH13J2KS000154&quot;,&#xd;
    &quot;7JZTH13J0LS000297&quot;,&#xd;
    &quot;7JZTH13J5KS000164&quot;,&#xd;
    &quot;7JZTH13J9KS000166&quot;,&#xd;
    &quot;7JZTH13J6KS000156&quot;,&#xd;
    &quot;7JZTH13J2KS000171&quot;,&#xd;
    &quot;7JZTH13J7KS000151&quot;,&#xd;
    &quot;7JZTH13J4LS000299&quot;,&#xd;
    &quot;7JZTH13J7LS000300&quot;,&#xd;
    &quot;7JZTH13JXLS000307&quot;,&#xd;
    &quot;7JZTH13J0LS000302&quot;,&#xd;
    &quot;7JZTH13J3LS000309&quot;,&#xd;
    &quot;7JZTH13J1KS000162&quot;,&#xd;
    &quot;7JZTH13J9KS000152&quot;,&#xd;
    &quot;7JZTH13J1LS000308&quot;,&#xd;
    &quot;7JZTH13J2LS000298&quot;,&#xd;
    &quot;7JZTH13JXKS000161&quot;,&#xd;
    &quot;7JZTH13J9LS000315&quot;,&#xd;
    &quot;7JZTH13J1KS000159&quot;,&#xd;
    &quot;7JZTH13J8KS000157&quot;,&#xd;
    &quot;7JZTH13J4KS000169&quot;,&#xd;
    &quot;7JZTH13J8LS000306&quot;,&#xd;
    &quot;7JZTH13J6LS000305&quot;,&#xd;
    &quot;7JZTH13J0KS000170&quot;,&#xd;
    &quot;7JZTH13J0KS000167&quot;,&#xd;
    &quot;7JZTH13J1LS000308&quot;,&#xd;
    &quot;7JZTH13J4KS000155&quot;,&#xd;
    &quot;7JZTH13J7KS000165&quot;,&#xd;
    &quot;7JZTH13J2LS000303&quot;,&#xd;
    &quot;7JZTH13J5LS000313&quot;,&#xd;
    &quot;7JZTH13J4LS000304&quot;,&#xd;
    &quot;7JZTH13J2KS000168&quot;,&#xd;
    &quot;7JZTH13J8KS000160&quot;,&#xd;
    &quot;7JZTH13J3LS000312&quot;,&#xd;
    &quot;7JZTH13JXLS000310&quot;,&#xd;
    &quot;7JZTH13J3KS000163&quot;,&#xd;
    &quot;7JZTH13J9LS000301&quot;,&#xd;
    &quot;7JZTH13J7LS000314&quot;,&#xd;
    &quot;7JZTH13J0KS000153&quot;,&#xd;
    &quot;7JZTH13J1LS000311&quot;&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/buses/busDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /ocpp-v16jw/chargers" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${OCPP_ENV}/v1/ocpp-v16jw/chargers</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /ocpp-v16jw/chargersiotecha" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${OCPP_ENV}/v1/ocpp-v16jw/chargersiotecha</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/alerts" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/alerts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CREATE /tenants/alerts" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;orgId&quot;: &quot;${ETS_TENANT_ID}&quot;,&#xd;
  &quot;userId&quot;: &quot;${CURRENT_TENANT_READONLY_USER_ID}&quot;,&#xd;
  &quot;userName&quot;: &quot;Ajay Customer ReadOnly&quot;,&#xd;
  &quot;userEmail&quot;: &quot;${TENANT_READONLY_USERNAME}&quot;,&#xd;
  &quot;userPhone&quot;: &quot;&quot;,&#xd;
  &quot;busAlert&quot;: true,&#xd;
  &quot;busID&quot;: &quot;*&quot;,&#xd;
  &quot;busmonday&quot;: true,&#xd;
  &quot;bustuesday&quot;: true,&#xd;
  &quot;buswednesday&quot;: true,&#xd;
  &quot;busthursday&quot;: true,&#xd;
  &quot;busfriday&quot;: true,&#xd;
  &quot;bussaturday&quot;: true,&#xd;
  &quot;bussunday&quot;: true,&#xd;
  &quot;busAlertStartTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;busAlertStopTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;busEmailCritical&quot;: false,&#xd;
  &quot;busEmailError&quot;: false,&#xd;
  &quot;busEmailWarning&quot;: false,&#xd;
  &quot;busEmailInfo&quot;: false,&#xd;
  &quot;busSMSCritical&quot;: false,&#xd;
  &quot;busSMSError&quot;: false,&#xd;
  &quot;busSMSWarning&quot;: false,&#xd;
  &quot;busSMSInfo&quot;: false,&#xd;
  &quot;busPushCritical&quot;: false,&#xd;
  &quot;busPushError&quot;: false,&#xd;
  &quot;busPushWarning&quot;: false,&#xd;
  &quot;busPushInfo&quot;: false,&#xd;
  &quot;chargerAlert&quot;: true,&#xd;
  &quot;chargerID&quot;: &quot;*&quot;,&#xd;
  &quot;chargermonday&quot;: true,&#xd;
  &quot;chargertuesday&quot;: true,&#xd;
  &quot;chargerwednesday&quot;: true,&#xd;
  &quot;chargerthursday&quot;: true,&#xd;
  &quot;chargerfriday&quot;: true,&#xd;
  &quot;chargersaturday&quot;: true,&#xd;
  &quot;chargersunday&quot;: true,&#xd;
  &quot;chargerAlertStartTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;chargerAlertStopTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;chargerEmailCritical&quot;: true,&#xd;
  &quot;chargerEmailError&quot;: true,&#xd;
  &quot;chargerEmailWarning&quot;: true,&#xd;
  &quot;chargerEmailInfo&quot;: true,&#xd;
  &quot;chargerSMSCritical&quot;: false,&#xd;
  &quot;chargerSMSError&quot;: false,&#xd;
  &quot;chargerSMSWarning&quot;: false,&#xd;
  &quot;chargerSMSInfo&quot;: false,&#xd;
  &quot;chargerPushCritical&quot;: false,&#xd;
  &quot;chargerPushError&quot;: false,&#xd;
  &quot;chargerPushWarning&quot;: false,&#xd;
  &quot;chargerPushInfo&quot;: false,&#xd;
  &quot;ruleName&quot;: &quot;Ajay Customer Admin_rule&quot;,&#xd;
  &quot;orgName&quot;: &quot;Edmonton Transit Service&quot;,&#xd;
  &quot;internalAcronym&quot;: &quot;ETS&quot;,&#xd;
  &quot;busName&quot;: &quot;All&quot;,&#xd;
  &quot;busAlertDays&quot;: [&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true&#xd;
  ],&#xd;
  &quot;busEmailNotification&quot;: 0,&#xd;
  &quot;busSMSNotification&quot;: 0,&#xd;
  &quot;busPushNotification&quot;: 0,&#xd;
  &quot;chargerName&quot;: &quot;All&quot;,&#xd;
  &quot;chargerAlertDays&quot;: [&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true&#xd;
  ],&#xd;
  &quot;chargerEmailNotification&quot;: 15,&#xd;
  &quot;chargerSMSNotification&quot;: 0,&#xd;
  &quot;chargerPushNotification&quot;: 0&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/alerts</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GET ALERT ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">NEW_ALERT_ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.alertId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UPDATE /tenants/alerts/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;orgId&quot;: &quot;${ETS_TENANT_ID}&quot;,&#xd;
  &quot;userId&quot;: &quot;${CURRENT_TENANT_READONLY_USER_ID}&quot;,&#xd;
  &quot;userName&quot;: &quot;Ajay Customer ReadOnly&quot;,&#xd;
  &quot;userEmail&quot;: &quot;${TENANT_READONLY_USERNAME}&quot;,&#xd;
  &quot;userPhone&quot;: &quot;&quot;,&#xd;
  &quot;busAlert&quot;: true,&#xd;
  &quot;busID&quot;: &quot;*&quot;,&#xd;
  &quot;busmonday&quot;: true,&#xd;
  &quot;bustuesday&quot;: true,&#xd;
  &quot;buswednesday&quot;: true,&#xd;
  &quot;busthursday&quot;: true,&#xd;
  &quot;busfriday&quot;: true,&#xd;
  &quot;bussaturday&quot;: true,&#xd;
  &quot;bussunday&quot;: true,&#xd;
  &quot;busAlertStartTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;busAlertStopTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;busEmailCritical&quot;: false,&#xd;
  &quot;busEmailError&quot;: false,&#xd;
  &quot;busEmailWarning&quot;: false,&#xd;
  &quot;busEmailInfo&quot;: false,&#xd;
  &quot;busSMSCritical&quot;: false,&#xd;
  &quot;busSMSError&quot;: false,&#xd;
  &quot;busSMSWarning&quot;: false,&#xd;
  &quot;busSMSInfo&quot;: false,&#xd;
  &quot;busPushCritical&quot;: false,&#xd;
  &quot;busPushError&quot;: false,&#xd;
  &quot;busPushWarning&quot;: false,&#xd;
  &quot;busPushInfo&quot;: false,&#xd;
  &quot;chargerAlert&quot;: true,&#xd;
  &quot;chargerID&quot;: &quot;*&quot;,&#xd;
  &quot;chargermonday&quot;: true,&#xd;
  &quot;chargertuesday&quot;: true,&#xd;
  &quot;chargerwednesday&quot;: true,&#xd;
  &quot;chargerthursday&quot;: true,&#xd;
  &quot;chargerfriday&quot;: true,&#xd;
  &quot;chargersaturday&quot;: true,&#xd;
  &quot;chargersunday&quot;: true,&#xd;
  &quot;chargerAlertStartTime&quot;: &quot;12:00 AM&quot;,&#xd;
  &quot;chargerAlertStopTime&quot;: &quot;11:59 PM&quot;,&#xd;
  &quot;chargerEmailCritical&quot;: true,&#xd;
  &quot;chargerEmailError&quot;: true,&#xd;
  &quot;chargerEmailWarning&quot;: true,&#xd;
  &quot;chargerEmailInfo&quot;: true,&#xd;
  &quot;chargerSMSCritical&quot;: true,&#xd;
  &quot;chargerSMSError&quot;: true,&#xd;
  &quot;chargerSMSWarning&quot;: true,&#xd;
  &quot;chargerSMSInfo&quot;: true,&#xd;
  &quot;chargerPushCritical&quot;: true,&#xd;
  &quot;chargerPushError&quot;: true,&#xd;
  &quot;chargerPushWarning&quot;: true,&#xd;
  &quot;chargerPushInfo&quot;: true,&#xd;
  &quot;ruleName&quot;: &quot;Ajay Customer Admin_rule&quot;,&#xd;
  &quot;orgName&quot;: &quot;Edmonton Transit Service&quot;,&#xd;
  &quot;internalAcronym&quot;: &quot;ETS&quot;,&#xd;
  &quot;busName&quot;: &quot;All&quot;,&#xd;
  &quot;busAlertDays&quot;: [&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true&#xd;
  ],&#xd;
  &quot;busEmailNotification&quot;: 0,&#xd;
  &quot;busSMSNotification&quot;: 0,&#xd;
  &quot;busPushNotification&quot;: 0,&#xd;
  &quot;chargerName&quot;: &quot;All&quot;,&#xd;
  &quot;chargerAlertDays&quot;: [&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true,&#xd;
    true&#xd;
  ],&#xd;
  &quot;chargerEmailNotification&quot;: 15,&#xd;
  &quot;chargerSMSNotification&quot;: 15,&#xd;
  &quot;chargerPushNotification&quot;: 15&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/alerts/${NEW_ALERT_ID}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE /tenants/alerts/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/alerts/${NEW_ALERT_ID}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/report" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;busName&quot;: &quot;${ETS_BUS_VIN}&quot;,&#xd;
  &quot;date&quot;: &quot;${__timeShift(yyyy-MM-dd,,,,)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/report</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/chargers/sessions" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="start" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">start</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,-P6D,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss-08:00,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/chargers/${ABB_CHARGER_OCPP_ID}/sessions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /connectedportal/chargers/aggregateddata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="start" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">start</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;,,-PT1H,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fields</stringProp>
                  <stringProp name="Argument.value">SoC,Power_Active_Import,Energy_Active_Import_Register,Current_Import,Voltage,RPM,Current_Offered,Temperature,Power_Offered</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aggIntervalInS" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">aggIntervalInS</stringProp>
                  <stringProp name="Argument.value">60</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${DATALAKE_ENV}/v1/connectedportal/chargers/${ABB_CHARGER_OCPP_ID}/aggregateddata</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/reports?reportType=Charger" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="reportType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">reportType</stringProp>
                  <stringProp name="Argument.value">Charger</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fromDay" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromDay</stringProp>
                  <stringProp name="Argument.value">${__timeShift(dd,,-P6D,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="toYear" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toYear</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenantName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenantName</stringProp>
                  <stringProp name="Argument.value">ETS</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fromYear" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromYear</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="toDay" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toDay</stringProp>
                  <stringProp name="Argument.value">${__timeShift(dd,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="toMonth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toMonth</stringProp>
                  <stringProp name="Argument.value">${__timeShift(MM,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fromMonth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromMonth</stringProp>
                  <stringProp name="Argument.value">${__timeShift(MM,,-P6D,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/reports</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/reports?reportType=Charger" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="reportType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">reportType</stringProp>
                  <stringProp name="Argument.value">ignore</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenantName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenantName</stringProp>
                  <stringProp name="Argument.value">ignore</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">Charger/ETS/ETS-_-2020-09-24-2020-10-01-Charger_v0.pdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1610460237536</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${FILE_AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/reports</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/reports?reportType=vsm" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="reportType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">reportType</stringProp>
                  <stringProp name="Argument.value">vsm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fromDay" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromDay</stringProp>
                  <stringProp name="Argument.value">${__timeShift(dd,,-P6D,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="toYear" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toYear</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenantName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenantName</stringProp>
                  <stringProp name="Argument.value">ETS</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fromYear" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromYear</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="toDay" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toDay</stringProp>
                  <stringProp name="Argument.value">${__timeShift(dd,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="toMonth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">toMonth</stringProp>
                  <stringProp name="Argument.value">${__timeShift(MM,,,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fromMonth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fromMonth</stringProp>
                  <stringProp name="Argument.value">${__timeShift(MM,,-P6D,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/reports</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /tenants/reports?reportType=vsm" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="reportType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">reportType</stringProp>
                  <stringProp name="Argument.value">ignore</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenantName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenantName</stringProp>
                  <stringProp name="Argument.value">ignore</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">vsm/ETS/8000-7JZTH13J7KS000151.csv</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1610460237537</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${FILE_AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/reports</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /reports/customreports" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;url&quot;: &quot;https://kibana.proterra.com:5601/app/kibana#/dashboard/AWDtNvhr3F4CRLkcyUEf?_g=(refreshInterval:(display:&apos;1%20day&apos;,pause:!f,section:3,value:86400000),time:(from:now%2Fy,mode:quick,to:now))&amp;_a=(options:(darkTheme:!f),query:(query_string:(analyze_wildcard:!t,query:&apos;busName:7JZTH13J7KS000151 OR busName:7JZTH13J9KS000152 OR busName:7JZTH13J0KS000153 OR busName:7JZTH13J2KS000154 OR busName:7JZTH13J4KS000155 OR busName:7JZTH13J6KS000156 OR busName:7JZTH13J8KS000157 OR busName:7JZTH13JXKS000158 OR busName:7JZTH13J1KS000159 OR busName:7JZTH13J8KS000160 OR busName:7JZTH13JXKS000161 OR busName:7JZTH13J1KS000162 OR busName:7JZTH13J3KS000163 OR busName:7JZTH13J5KS000164 OR busName:7JZTH13J7KS000165 OR busName:7JZTH13J9KS000166 OR busName:7JZTH13J0KS000167 OR busName:7JZTH13J2KS000168 OR busName:7JZTH13J4KS000169 OR busName:7JZTH13J0KS000170 OR busName:7JZTH13J2KS000171 OR busName:7JZTH13J0LS000297 OR busName:7JZTH13J2LS000298 OR busName:7JZTH13J4LS000299 OR busName:7JZTH13J7LS000300 OR busName:7JZTH13J9LS000301 OR busName:7JZTH13J0LS000302 OR busName:7JZTH13J2LS000303 OR busName:7JZTH13J4LS000304 OR busName:7JZTH13J6LS000305 OR busName:7JZTH13J8LS000306 OR busName:7JZTH13JXLS000307 OR busName:7JZTH13J1LS000308 OR busName:7JZTH13J1LS000308 OR busName:7JZTH13J3LS000309 OR busName:7JZTH13JXLS000310 OR busName:7JZTH13J1LS000311 OR busName:7JZTH13J3LS000312 OR busName:7JZTH13J5LS000313 OR busName:7JZTH13J7LS000314 OR busName:7JZTH13J9LS000315&apos;)))&quot;,&#xd;
  &quot;output_file&quot;: &quot;-ETS-8000_-_7JZTH13J7KS000151-2021-01-12T14:08:58.967Z.pdf&quot;,&#xd;
  &quot;wait_in_s&quot;: 20,&#xd;
  &quot;report_type&quot;: &quot;kibana&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${FILE_AMS_ENV}/v1/reports/customreports</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UPDATE /tenants/tenantUsers/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;firstName&quot;: &quot;Ajay&quot;,&#xd;
  &quot;middleName&quot;: &quot;&quot;,&#xd;
  &quot;lastName&quot;: &quot;Customer ReadOnly&quot;,&#xd;
  &quot;address&quot;: {&#xd;
    &quot;addressLine1&quot;: &quot;15520 Ellerslie Rd SW, Edmonton, AB T6W 1A4, Canada&quot;&#xd;
  },&#xd;
  &quot;phone&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${AMS_ENV}/v1/tenants/${ETS_TENANT_ID}/tenantUsers/${CURRENT_TENANT_READONLY_USER_ID}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${TENANT_READONLY_ACCESS_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">/Users/asuryavamshi/JMeter/bin/examples/APEX Test Scripts/APEX - EXP.csv</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
